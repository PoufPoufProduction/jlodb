<?xml version="1.0"?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:dct="http://purl.org/dc/terms/">

    <!-- LDA,LDX,LDY + ZERO PAGE OR ABSOLUTE ADDRESS -->

    <rdf:Description>
        <dct:identifier>001</dct:identifier>
        <dct:title xml:lang="fr-FR">Charger une valeur numérique dans le registre A.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"A9A88501A900","rts":false}],"ops":["lda"],"args":[{"value":"01","type":"v"}],"nblines":1,"valid":{"a":"01"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[strong]En général, et afin de la différencier d'autres significations, une valeur numérique est précédée du signe #.[/strong]","","[b]Chargez la valeur #0x01 dans le registre A.[/b]"],"tips":["[b]Déplacer[/b] l'instruction [b]LDA[/b] et la valeur [b]#0x01[/b] dans la zone centrale.","Le code attendu est : [code]LDA #0x01[/code]","Il faut [b]cliquer[/b] sur l'icône de lecture en bas à droite pour lancer le programme une fois écrit."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>002</dct:identifier>
        <dct:title xml:lang="fr-FR">Copier une valeur de la mémoire vers le registre A.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"A9FF8501A900","rts":false}],"ops":["lda"],"args":[{"value":"01"}],"nblines":1,"valid":{"a":"FF"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[strong]Une valeur sans # ne représente plus une valeur numérique mais une adresse mémoire.[/strong]","","[b]Chargez la valeur contenue à l'adresse mémoire 0x01 dans le registre A.[/b] Dans le cas présent, la [red]zone mémoire 0x01[/red] contient la [red]valeur #0xFF[/red]."],"tips":["[b]Déplacer[/b] l'instruction [b]LDA[/b] et la valeur [b]0x01[/b] dans la zone centrale.","Le code attendu est : [code]LDA 0x01[/code]","Il faut [b]cliquer[/b] sur l'icône de lecture en bas à droite pour lancer le programme une fois écrit."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>003</dct:identifier>
        <dct:title xml:lang="fr-FR">Copier des valeurs de la mémoire vers les registre A et X.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"A90F8501A900","rts":false}],"ops":["lda","ldx"],"args":[{"value":"01","type":"v"},{"value":"01"}],"nblines":2,"valid":{"a":"0F","x":"01"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[strong]Les opérateurs LDA,LDX et LDY permettent de charger une valeur numérique dans leur registre respectif mais aussi de charger une valeur de la mémoire.[/strong]","","Ainsi, [red]LDA #0xA8[/red] charge la valeur numérique [b]#0xA8[/b] dans le registre A tandis que [red]LDA 0xA8[/red] va charger la valeur contenue dans la zone mémoire [b]0xA8[/b] dans le registre A.","","[b]Chargez les valeurs suivantes :[/b]","[code]. #0x01 dans le registre X[br]. 0x01 dans le registre A (ici #0x0F)[/code]"],"tips":["Il est important de bien différencier [b]une valeur[/b] d'[b]une adresse mémoire[/b].","[b]#0x01[/b] est une [red]valeur[/red].[br][b]0x01[/b] est une [red]adresse mémoire[/red].","Le code attendu est :[br][code]LDX #0x01[br]LDA 0x01[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>004</dct:identifier>
        <dct:title xml:lang="fr-FR">Copier des valeurs de la mémoire vers les registre A et X.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"A9FF8501A9F08502A900","rts":false}],"ops":["lda","ldx"],"args":[{"value":"01","type":"v"},{"value":"01"},{"value":"02","type":"v"},{"value":"02"}],"nblines":2,"valid":{"a":"ff","x":"f0"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["La mémoire du processeur 6502 s'étend de [b]0x0000[/b] à [b]0xFFFF[/b] soit [i]64 Kilo-Octets[/i]. Ce sont donc environ 64 000 petites cases (65 536 pour être précis) dans lesquelles il va être possible de stocker un octet, c'est-à-dire une valeur de 0 à 255 (ou de #0x00 à #0xFF).","La zone mémoire s'étendant de [b]0x00[/b] à [b]0xFF[/b] (ou 0x0000 à 0x00FF) est appelée la [b]page zéro[/b]. Elle est plus facilement accessible et doit être privilégiée.","","[b]Chargez les valeurs suivantes :[/b]","[code]. 0x02 dans le registre X (ici #0xF0)[br]. 0x01 dans le registre A (ici #0xFF)[/code]"],"tips":["Il est important de bien différencier [b]une valeur[/b] d'[b]une adresse mémoire[/b].","[b]#0x01[/b] est une [red]valeur[/red].[br][b]0x01[/b] est une [red]adresse mémoire[/red].","Le code attendu est :[br][code]LDX 0x02[br]LDA 0x01[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>005</dct:identifier>
        <dct:title xml:lang="fr-FR">Copier la valeur de la zone mémoire 0xFD vers le registre A et récupérer ainsi un nombre aléatoire.</dct:title>
        <dct:description><![CDATA["ops":["lda"],"args":[{"value":"FD"}],"nblines":1,"valid":{"mem":{"1000":"A5FD"}},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Parmi toutes les adresses accessibles depuis ce simulateur de langage assembleur, certaines d'entre elles ont des [b]comportements spécifiques[/b]. Elles sont d'ailleurs listées dans la sortie standard en haut à droite.","","Ainsi l'adresse mémoire 0xFD contient [b]un nombre aléatoire[/b] constament renouvellé.","","[b]Chargez un nombre aléatoire dans le registre A[/b] et observez le résultat obtenu."],"tips":["[b]Déplacer[/b] l'instruction [b]LDA[/b] et l'adresse mémoire [b]0xFD[/b] dans la zone centrale.","Le code attendu est : [code]LDA 0xFD[/code]","Il faut [b]cliquer[/b] sur l'icône de lecture en bas à droite pour lancer le programme une fois écrit."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>006</dct:identifier>
        <dct:title xml:lang="fr-FR">Copier la valeur de la zone mémoire 0x15A6 vers le registre A.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"A9568DA615A900","rts":false}],"ops":["lda"],"args":[{"value":"15A6"},{"value":"15A6","type":"v"}],"nblines":1,"valid":{"a":"56"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Les adresses mémoires de la [b]page zéro[/b] sont codées sur [b]1 octet[/b] (de 0x00 à 0xFF). Au-delà, les adresses mémoires sont codées sur 2 octés (de 0x0100 à 0xFFFF).","","[b]Charger dans le registre A la valeur contenue à l'adresse 0x15A6[/b] (ici #0x56)."],"tips":["[b]Déplacer[/b] l'instruction [b]LDA[/b] et l'adresse mémoire [b]0x15A6[/b] dans la zone centrale.","Le code attendu est : [code]LDA 0x15A6[/code]","Il faut [b]cliquer[/b] sur l'icône de lecture en bas à droite pour lancer le programme une fois écrit."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>007</dct:identifier>
        <dct:title xml:lang="fr-FR">Copier certaines valeurs de la zone mémoire vers les différents registres.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"A9FF8D0215A9F08501A90F8502A900","rts":false}],"ops":["lda","ldx","ldy"],"args":[{"value":"01"},{"value":"01","type":"v"},{"value":"02"},{"value":"02","type":"v"},{"value":"1502"},{"value":"1502","type":"v"}],"nblines":3,"valid":{"a":"FF","x":"0F","y":"01"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Chargez les valeurs suivantes :[/b]","[code]. 0x02 de la page zéro de la mémoire dans le registre X.[br][br]. la valeur #0x01 dans le registre Y.[br][br]. 0x1502 de la mémoire dans le registre A.[/code]"],"tips":["[b]0x02[/b] et [b]0x1502[/b] sont des [red]adresses mémoires[/red]. [b]#0x01[/b] est un [red]valeur[/red].","[b]#0x01[/b] représente la [b]valeur 1[/b]. [b]0x01[/b] représente la [b]valeur stockée[/b] à l'adresse mémoire [b]0x01[/b].","Le code attendu est :[code]LDX 0x02[br]LDY #0x01[br]LDA 0x1502[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <!-- STA,STX,STY + ZERO PAGE OR ABSOLUTE ADDRESS -->

    <rdf:Description>
        <dct:identifier>051</dct:identifier>
        <dct:title xml:lang="fr-FR">En utilisant le registre A, copier la valeur #0xFF vers la zone mémoire 0x01.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"FF","type":"v"},{"value":"01"}],"nblines":2,"valid":{"a":"FF","mem":{"01":"FF"}},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Si [red]LDA[/red] copie la valeur contenue dans une zone mémoire vers le registre A, l'opérateur [red]STA[/red] exécute l'opération inverse, c'est à dire, qu'il copie la valeur contenue dans le registre A vers une zone mémoire.","","Ainsi [red]STA 0x01[/red] copie la valeur du registre A vers la zone mémoire d'adresse 0x01.","","[b]Chargez la valeur #0xFF dans le registre A et copiez celle-ci dans la zone mémoire 0x01.[/b]"],"tips":["Avant de la copier en mémoire, il faut charger la valeur [b]#0xFF[/b] dans le [b]registre A[/b] avec [b]LDA[/b].","[b]STA 0x01[/b] permet de copier la valeur du [b]registre A[/b] à l'adresse [b]0x01[/b].","Le code attendu est :[code]LDA #0xFF[br]STA 0x01[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>052</dct:identifier>
        <dct:title xml:lang="fr-FR">En utilisant le registre X, copier la valeur #0xFE vers la zone mémoire 0x02.</dct:title>
        <dct:description><![CDATA["ops":["lda","tax","stx"],"args":[{"value":"FE","type":"v"},{"value":"02"}],"nblines":3,"valid":{"mem":{"02":"FE"}},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["L'opérateur [red]STA[/red] copie la valeur contenue dans le registre A vers une zone mémoire. L'opérateur [red]STX[/red] réalise la même opération mais depuis le registre X.","","[b]Affectez la valeur 0xFE à la zone mémoire 0x02.[/b]","","A propos, l'opération [red]STX #0xFE[/red] crée une [b]erreur de compilation[/b] car elle n'a aucun sens : on ne peut transférer le contenu d'un registre sur une valeur numérique ! On ne peut le faire qu'en direction d'une adresse mémoire."],"tips":["Avant de la copier en mémoire, il faut charger la valeur [b]#0xFE[/b] dans le [b]registre X[/b] avec [b]LDA[/b] et [b]TAX[/b].","[b]STX 0x02[/b] permet de copier la valeur du [b]registre X[/b] à l'adresse [b]0x02[/b].","Le code attendu est :[code]LDA #0xFE[br]TAX[br]STX 0x02[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>053</dct:identifier>
        <dct:title xml:lang="fr-FR">Copier la valeur du registre A vers le registre Y en passant par une zone de la mémoire.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"A912","rts":false}],"ops":["sta","ldy"],"args":[{"value":"15A6"}],"nblines":2,"valid":{"y":"12"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Copiez la valeur contenue dans le registre A vers le registre Y.[/b]","","Comme [red]TAY[/red] n'est [b]pas disponible[/b] ici, utilisez la zone mémoire [b]0x15A6 comme intermédiaire[/b]."],"tips":["Dans un premier temps, copier la valeur du [b]registre A[/b] dans la zone mémoire [b]0x15A6[/b] avec [b]STA[/b].","Copier ensuite la valeur de la zone mémoire [b]0x15A6[/b] dans le [b]registre Y[/b] avec [b]LDY[/b]","Le code attendu est :[code]STA 0x15A6[br]LDY 0x15A6[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>054</dct:identifier>
        <dct:title xml:lang="fr-FR">Echanger la valeur du registre A et du registre Y en utilisant une zone de la mémoire.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"A955A066","rts":false}],"ops":["sta","ldy","tya"],"args":[{"value":"01"}],"nblines":3,"valid":{"y":"55","a":"66"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Echangez[/b] les valeurs des [b]registres A et Y[/b] en procédant ainsi :","[br]. [b]Charger[/b] la valeur du registre A dans une [b]variable temporaire[/b]. Ici, la zone [red]mémoire 0x01[/red].","[br]. [b]Transférer[/b] la valeur du registre Y vers le registre A. [b]La valeur du registre A est écrasée.[/b] Heureusement elle a été sauvé en 0x01.","[br]. [b]Charger[/b] la valeur de la variable temporaire dans le registre Y."],"tips":["La démarche à suivre est détaillée dans l'énoncé : [red]chaque point correspond à une commande précise[/red].","L'ordre des commandés à appeler est [b]STA[/b], [b]TYA[/b] et [b]LDY[/b].","Le code attendu est :[code]STA 0x01[br]TYA[br]LDY 0x01[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>055</dct:identifier>
        <dct:title xml:lang="fr-FR">Echanger la valeur du registre A et du registre Y en utilisant une zone de la mémoire.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"A911A2FF","rts":false}],"ops":["sta","ldx","tax","txa"],"args":[{"value":"01"}],"nblines":3,"valid":{"x":"11","a":"FF"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Echangez[/b] les valeurs des [b]registres A et X[/b]"],"tips":["[b]Chargez[/b] la valeur du [b]registre A[/b] dans la zone mémoire [b]0x01[/b]. [b]Transférez[/b] la valeur de [b]X[/b] vers [b]A[/b].","[b]Chargez[/b] la valeur de la zone mémoire [b]0x01[/b] dans le [b]registre X[/b].","Le code attendu est :[code]STA 0x01[br]TXA[br]LDX 0x01[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>056</dct:identifier>
        <dct:title xml:lang="fr-FR">Echanger la valeur du registre A et du registre Y en utilisant une zone de la mémoire.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"A933A222","rts":false}],"ops":["stx","lda","tax","txa"],"args":[{"value":"01"}],"nblines":3,"valid":{"x":"33","a":"22"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Echangez[/b] les valeurs des [b]registres A et X[/b]"],"tips":["[b]Chargez[/b] la valeur du [b]registre X[/b] dans la zone mémoire [b]0x01[/b]. [b]Transférez[/b] la valeur de [b]A[/b] vers [b]X[/b].","[b]Chargez[/b] la valeur de la zone mémoire [b]0x01[/b] dans le [b]registre A[/b].","Le code attendu est :[code]STX 0x01[br]TAX[br]LDA 0x01[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <!-- STDOUT -->

    <rdf:Description>
        <dct:identifier>101</dct:identifier>
        <dct:title xml:lang="fr-FR">En utilisant le registre A, copier la valeur #0x41 vers la zone mémoire 0xFE et afficher ainsi un caractère sur la sortie standard.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"41","type":"v"},{"value":"fe"}],"nblines":2,"valid":{"a":"41","mem":{"FE":"41"}},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["S'il est possible de [b]changer[/b] la valeur de n'importe quelle partie de la [b]mémoire[/b] (de #0000 à #FFFF), il est important de rester prudent car certains zones mémoires sont utilisées par des [b]fonctionnalités spécifiques[/b].","","[b]Copiez[/b] la valeur [b]#0x41[/b] vers la [b]zone mémoire 0xFE[/b] et observez ce qu'il se passe sur l'[b]écran[/b] en haut à droite."],"tips":["Avant de la copier en mémoire, il faut charger la valeur [b]#0x41[/b] dans le [b]registre A[/b] avec [b]LDA[/b].","[b]STA 0xFE[/b] permet de copier la valeur du [b]registre A[/b] à l'adresse [b]0xFE[/b].","Le code attendu est :[code]LDA #0x41[br]STA 0xFE[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>102</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer le mot 'ABC' vers la sortie standard.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"41","type":"v"},{"value":"42","type":"v"},{"value":"43","type":"v"},{"value":"fe"}],"nblines":6,"valid":{"out":"ABC"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[strong]Toute valeur stockée à l'adresse mémoire 0xFE est affichée suivant son code ASCII dans la sortie standard en haut à droite.[/strong]","","Le code ASCII fait correspondre un caractère à une valeur. Ainsi A=#0x41, B=#0x42, C=#0x43, etc.","","[b]Affichez ABC dans l'écran de sortie standard.[/b]"],"tips":["Pour charger une valeur en mémoire, il faut au préalable la [b]charger[/b] dans un registre puis la [b]stocker[/b].","Il faut charger dans le [b]registre A[/b] les valeurs #0x41, #0x42 et #0x43 et les stocker en [b]0xFE[/b].","Le code attendu est :[code]LDA #0x41[br]STA 0xFE[br]LDA #0x42[br]STA 0xFE[br]LDA #0x43[br]STA 0xFE[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>103</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer le mot 'HELLO' vers la sortie standard.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"45","type":"v"},{"value":"48","type":"v"},{"value":"4C","type":"v"},{"value":"4F","type":"v"},{"value":"fe"}],"nblines":9,"valid":{"out":"HELLO"}]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[code]0x45 = E[br]0x48 = H[br]0x4C = L[br]0x4F = O[/code]","","[b]Ecrivez \\\"HELLO\\\" dans la sortie standard.[/b]"],"tips":["Pour charger une valeur en mémoire, il faut au préalable la [b]charger[/b] dans un registre puis la [b]stocker[/b].","Il faut charger dans le [b]registre A[/b] les valeurs #0x48, #0x45, #0x4C et #0x4F et les stocker en [b]0xFE[/b].","[code]LDA #0x48[br]STA 0xFE[br]LDA #0x45[br]STA 0xFE[br]LDA #0x4C[br]STA 0xFE[br]STA 0xFE[br]...[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>


    <!-- SCREEN -->

    <rdf:Description>
        <dct:identifier>151</dct:identifier>
        <dct:title xml:lang="fr-FR">En utilisant le registre A, copier la valeur #0xFF vers certaines zones mémoires d'un écran 16x16x256 et éclairer ainsi les 4 pixels du coin supérieur gauche.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"FF","type":"v"},{"value":"0200"},{"value":"0201"},{"value":"0210"},{"value":"0211"}],"nblines":5,"valid":{"mem":{"200":"FFFF","210":"FFFF"}},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[strong]La zone mémoire commençant à l'adresse 0x0200 correspond à l'écran graphique situé à droite.[/strong]","","Les couleurs des pixels de cet écran sont définies grâce aux valeurs stockées dans cette zone mémoire.","","[b]Stockez la valeur #0xFF[/b] dans les adresses mémoires suivante : [b]0x0200, 0x0201, 0x0210, 0x0211[/b].","","[b]Observez[/b] le résultat sur l'écran de droite." ],"tips":["Pour charger une valeur en mémoire, il faut au préalable la [b]charger[/b] dans un registre puis la [b]stocker[/b].","Il faut charger dans le [b]registre A[/b] la valeurs [b]#0xFF[/b] puis la stocker aux adresses demandées.","Le code attendu est :[code]LDA #0xFF[br]STA 0x0200[br]STA 0x0201[br]STA 0x0210[br]STA 0x0211[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>152</dct:identifier>
        <dct:title xml:lang="fr-FR">Afficher sur un écran graphique 16x16x256 un dégradé de gris sur 4 pixels.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"FF","type":"v"},{"value":"BB","type":"v"},{"value":"66","type":"v"},{"value":"11","type":"v"},{"value":"0200"},{"value":"0201"},{"value":"0202"},{"value":"0203"}],"nblines":8,"valid":{"mem":{"200":"FFBB6611"}},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["L'écran actuel permet d'afficher [b]256 nuances[/b] de gris. Le [b]blanc[/b] est codé [b]#0xFF[/b] tandisque le noir est égal à [b]#0x00[/b]. Toutes les valeurs intermédiaires correspondent à un gris plus ou moins prononcé.","","Sur la première ligne de l'écran, [b]utilisez les différentes nuances de gris ainsi:[/b]","[code]. Blanc &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(#0xFF) sur le premier pixel[br]. Gris clair &nbsp;&nbsp;(#0xBB) sur le deuxième[br]. Gris foncé &nbsp;&nbsp;(#0x66) sur le troisième[br]. Presque noir (#0x11) sur le quatrième[/code]"],"tips":["Pour charger une valeur en mémoire, il faut au préalable la [b]charger[/b] dans un registre puis la [b]stocker[/b].","Il faut [b]charger[/b] les valeurs [b]#0xFF[/b],  [b]#0xBB[/b], [b]#0x66[/b] et [b]#0x11[/b] et les stocker aux adresses demandées.","Le code débute ainsi :[code]LDA #0xFF[br]STA 0x0200[br]LDA #0xBB[br]STA 0x0201[br]LDA #0x66[br]...[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>153</dct:identifier>
        <dct:title xml:lang="fr-FR">Colorier en blanc les 4 coins d'un écran graphique 16x16x256.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"FF","type":"v"},{"value":"0200"},{"value":"0201"},{"value":"020F"},{"value":"0210"},{"value":"0211"},{"value":"021F"},{"value":"02F0"},{"value":"02F1"},{"value":"02FF"}],"nblines":5,"valid":{"mem":{"200":"FF","20F":"FF","2F0":"FF","2FF":"FF"}},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["La zone mémoire de l'écran graphique commence à l'adresse [b]0x0200[/b]. Sa taille varie selon la nature de l'écran. Ici, l'écran permet d'afficher [blue]256 nuances de gris sur une résolution de 16x16[/blue] (d'où le [red]16x16x256[/red] affiché sur la sortie standard). La zone mémoire utilisées est [b]0x0200-0x02FF[/b] et chaque pixel est codé sur [b]1 octet[/b].","","[b]Coloriez en blanc les 4 coins de l'écran.[/b]" ],"tips":["Pour charger une valeur en mémoire, il faut au préalable la [b]charger[/b] dans un registre puis la [b]stocker[/b].","Les adresses mémoire des 4 coins de l'écran sont : [b]0x0200[/b], [b]0x020F[/b], [b]0x02F0[/b] et [b]0x02FF[/b].","Le code attendu est :[code]LDA #0xFF[br]STA 0x0200[br]STA 0x020F[br]STA 0x02F0[br]STA 0x02FF[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>161</dct:identifier>
        <dct:title xml:lang="fr-FR">Changer la valeur du premier octet d'un écran graphique 32x32x16.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"26","type":"v"},{"value":"0200"}],"nblines":2,"valid":{"mem":{"200":"26"}},"class":"large","model":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Ce simulateur d'assembleur propose plusieurs type d'écrans. Cet exercice utilise un écran [b]32x32 avec 16 couleurs[/b] (les spécifications de l'écran sont affichées sur la sortie standard, [b]il est important de bien les lire à chaque fois[/b]). Cela veut dire que chaque pixel de l'écran est codée sur 4 bits (2^4=16) et que donc par conséquent :","[strong]Avec une définition de 32x32x16, 1 octet de la mémoire de l'écran graphique définit 2 pixels de cet écran.[/strong]","","[b]Chargez la valeur #0x26 dans l'octet de début d'adressage de l'écran. Combien de pixels ont été allumés ?[/b]"],"tips":["Pour charger une valeur en mémoire, il faut au préalable la [b]charger[/b] dans un registre puis la [b]stocker[/b].","Il faut toujours bien [b]différencier[/b] une valeur [b]numérique[/b] (avec un [b]#[/b]) d'une [b]adresse mémoire[/b].","Le code attendu est :[code]LDA #0x26[br]STA 0x0200[/code][b]2 pixels[/b] de couleur différente sont alors allumés."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>162</dct:identifier>
        <dct:title xml:lang="fr-FR">Colorier en rouge le 2ème pixel d'un écran graphique 32x32x16.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"02","type":"v"},{"value":"22","type":"v"},{"value":"20","type":"v"},{"value":"26","type":"v"},{"value":"0200"},{"value":"0201"}],"nblines":2,"valid":{"mem":{"200":"02"}},"class":"large","model":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["L'hexadécimal est très utile quand il s'agit de manipuler un écran de 16 couleurs. Un octet est un nombre hexadécimal de [b]2 chiffres[/b], or un octet représente ici [b]2 pixels de l'écran[/b]. On comprend alors que chaque pixel équivaut à un chiffre de la valeur hexadécimale de l'octet.","","Par exemple, la valeur [b]#0x26[/b] dans la mémoire de l'écran représente un premier pixel de [red]couleur 2 (ROUGE)[/red] et un deuxième pixel de [blue]couleur 6 (BLEU)[/blue].","","Si 0 représente [b]la couleur NOIR[/b] (celle par défaut), [b]coloriez le 2ème pixel de l'écran en rouge.[/b]"],"tips":["Avec [b]16 couleurs[/b], les [b]2 premiers pixels[/b] de l'écran sont définis dans le [b]1er octet[/b] d'adressage ([b]0x0200[/b]).","Le [b]1er pixel[/b] reste noir (donc à [b]0[/b]), le [b]2ème[/b] est rouge (donc [b]2[/b]). La valeur du 1er octet doit donc être [b]#0x02[/b].","Le code attendu est :[code]LDA #0x02[br]STA 0x0200[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>163</dct:identifier>
        <dct:title xml:lang="fr-FR">Colorier les 2 derniers pixels de la première ligne d'un écran graphique 32x32x16.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"44","type":"v"},{"value":"22","type":"v"},{"value":"40","type":"v"},{"value":"04","type":"v"},{"value":"0200"},{"value":"0201"},{"value":"02FF"},{"value":"020F"}],"nblines":2,"valid":{"mem":{"20F":"44"}},"class":"large","model":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Une ligne de l'écran de cet exercice contient 32 pixels. Chaque pixel est codé sur 4 bits soit 1/2 octet. Chaque ligne utilise donc 16 octets (0x0F) de la mémoire.","","[b]Coloriez les 2 derniers pixels de la première ligne en VIOLET (couleur n°4).[/b]"],"tips":["Avec une résolution 32x32 et un codage 16 couleurs, les 2 derniers pixels de la 1ère ligne sont codés à l'adresse [b]0x020F[/b].","Ces 2 pixels du même octet doivent prendre la [b]valeur 4[/b]. Il faut donc utiliser la valeur [b]#0x44[/b]","Le code attendu est :[code]LDA #0x44[br]STA 0x020F[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>
	
    <rdf:Description>
        <dct:identifier>164</dct:identifier>
        <dct:title xml:lang="fr-FR">Colorier les pixels 2 et 3 de la première ligne d'un écran graphique 32x32x16.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"33","type":"v"},{"value":"03","type":"v"},{"value":"30","type":"v"},{"value":"00","type":"v"},{"value":"0200"},{"value":"0201"},{"value":"02FF"},{"value":"020F"}],"nblines":4,"valid":{"mem":{"200":"0330"}},"class":"large","model":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Coloriez[/b] les [b]deuxième[/b] et [b]troisième[/b] pixels de la première ligne en [blue]bleu clair[/blue] (couleur n°3)."],"tips":["Ici, le [b]2ème pixel[/b] appartient au [i]1er octet[/i] tandisque le [b]3ème pixel[/b] est sur le [i]2ème octet[/i].","Pour atteindre chacun de ces pixels, il faut utiliser successivement les valeurs [b]#0x03[/b] et [b]0x30[/b].","Le code attendu est :[code]LDA #0x03[br]STA 0x0200[br]LDA #0x30[br]STA 0x0201[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>165</dct:identifier>
        <dct:title xml:lang="fr-FR">Colorier les 2 derniers pixels de la dernière ligne d'un écran graphique 32x32x16.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"44","type":"v"},{"value":"22","type":"v"},{"value":"40","type":"v"},{"value":"04","type":"v"},{"value":"02FF"},{"value":"020F"},{"value":"03FF"},{"value":"030F"}],"nblines":2,"valid":{"mem":{"3FF":"44"}},"class":"large","model":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Avec une résolution de 32x32 et d'un codage sur 16 couleurs, l'adressage de l'écran s'étend de [b]0x0200[/b] à [b]0x03FF[/b].","","[i]Explication un peu technique[/i] : chaque ligne utilise 16 octets de la mémoire. Il y a 32 lignes. Par conséquent, la taille de la zone mémoire allouée à un écran 32x32 en 16 couleurs est : [b]32*16 = 512 octets[/b] (ou [b]0x200[/b] octets en hexadécimal). Donc, si le premier octet de l'écran est [b]0x0200[/b], le dernier est [red]0x0200 + 0x0200 - 1[/red] soit [b]0x03FF[/b].","","[b]Coloriez les 2 derniers pixels de la dernière ligne en VIOLET (couleur n°4).[/b]"],"tips":["Avec une résolution 32x32 et un codage 16 couleurs, les 2 derniers pixels de l'écran sont codés à l'adresse [b]0x03FF[/b].","Ces 2 pixels du même octet doivent prendre la [b]valeur 4[/b]. Il faut donc utiliser la valeur [b]#0x44[/b]","Le code attendu est :[code]LDA #0x44[br]STA 0x03FF[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>166</dct:identifier>
        <dct:title xml:lang="fr-FR">Colorier les 4 coins d'un écran graphique 32x32x16.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"20","type":"v"},{"value":"02","type":"v"},{"value":"22","type":"v"},{"value":"0200"},{"value":"020F"},{"value":"03FF"},{"value":"03F0"}],"nblines":8,"valid":{"mem":{"200":"20","20F":"02","3F0":"20","3FF":"02"}},"class":"large","model":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Coloriez[/b] le pixel de chaque coin en [red]rouge[/red] (couleur n°2).","","[i]8 lignes sont proposées mais l'exercice peut se faire en 6[/i]."],"tips":["Toutes les adresses mémoires [b]utiles[/b] sont fournies dans l'exercice.","Coloriez le premier pixel des octets [b]0x0200[/b] et [b]0x03F0[/b] et le dernier de [b]0x020F[/b] et [b]0x03FF[/b].","Le code attendu est :[code]LDA #0x20[br]STA 0x0200[br]STA 0x03F0[br]LDA #0x02[br]STA 0x020F[br]STA 0x03FF[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>171</dct:identifier>
        <dct:title xml:lang="fr-FR">Changer la valeur du premier octet d'un écran graphique 48x32x2.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"11","type":"v"},{"value":"18","type":"v"},{"value":"81","type":"v"},{"value":"FF","type":"v"},{"value":"0200"}],"nblines":2,"valid":{"mem":{"200":"81"}},"class":"large","model":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Cet exercice utilise un écran de type calculatrice de résolution 48x32 avec 2 couleurs : 0 pour le blanc et 1 pour le noir.","","Chaque pixel est codé sur 1 bit, et par conséquent, [b]1 octet[/b] (qui est égal à 8 bits) représente donc [b]8 pixels[/b].","","[b]Noircissez le 1er pixel et le 8ème pixel de la première ligne de l'écran.[/b] Par définition, ces 2 pixels appartiennet à [blue]l'octet de début d'adressage de l'écran[/blue]."],"tips":["Avec ce type d'écran, une bonne connaissance du [b]binaire[/b] est appréciable.","Il faut utiliser ici la valeur binaire [b]1000 0001[/b], c'est-à-dire [b]#0x81[/b] en hexadécimal.","Le code attendu est :[code]LDA #0x81[br]STA 0x0200[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>172</dct:identifier>
        <dct:title xml:lang="fr-FR">Changer la valeur du dernier octet de la première ligne d'un écran graphique 48x32x2.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"FF","type":"v"},{"value":"0200"},{"value":"0201"},{"value":"0202"},{"value":"0203"},{"value":"0204"},{"value":"0205"},{"value":"0206"},{"value":"020F"},{"value":"0210"}],"nblines":2,"valid":{"mem":{"205":"FF"}},"class":"large","model":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Dans un écran 48x32 à 2 couleurs, un octet représente 8 pixels.[br][br] [b]Chargez[/b] la valeur [b]#0xFF[/b] dans le dernier octet de la première ligne pour éclairer les [b]8 derniers pixels[/b] de cette [b]première ligne[/b]."],"tips":["1 ligne = 48 pixels[br] 8 pixels = 1 octet[br]Donc [b]1 ligne = 6 octets[/b].","Il faut donc valoriser le [b]6ème octet[/b] de l'écran, soit l'adresse mémoire [b]0x0205[/b].","Le code attendu est :[code]LDA #0xFF[br]STA 0x0205[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>173</dct:identifier>
        <dct:title xml:lang="fr-FR">Noircir la première ligne d'un écran graphique 48x32x2.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"FF","type":"v"},{"value":"0200"},{"value":"0201"},{"value":"0202"},{"value":"0203"},{"value":"0204"},{"value":"0205"},{"value":"0206"},{"value":"020F"},{"value":"0210"}],"nblines":7,"valid":{"mem":{"200":"FFFFFFFFFFFF000000000000000000"}},"class":"large","model":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Coloriez en noir[/b] tous les pixels de la [red]première[/red] ligne de l'écran 48x32x2."],"tips":["1 ligne = 48 pixels[br] 8 pixels = 1 octet[br]Donc [b]1 ligne = 6 octets[/b].","La première ligne s'étend donc de [b]0x0200[/b] à [b]0x0205[/b] inclus.","Le code débute ainsi :[code]LDA #0xFF[br]STA 0x0200[br]STA 0x0201[br]STA 0x0202[br]STA 0x0203[br]...[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>174</dct:identifier>
        <dct:title xml:lang="fr-FR">Noircir la deuxième ligne d'un écran graphique 48x32x2.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"FF","type":"v"},{"value":"0205"},{"value":"0206"},{"value":"0207"},{"value":"0208"},{"value":"0209"},{"value":"020A"},{"value":"020B"},{"value":"020F"},{"value":"0210"}],"nblines":7,"valid":{"mem":{"200":"000000000000FFFFFFFFFFFF000000"}},"class":"large","model":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Coloriez en noir[/b] tous les pixels de la [red]deuxième[/red] ligne de l'écran 48x32x2."],"tips":["1 ligne = 48 pixels[br] 8 pixels = 1 octet[br]Donc [b]1 ligne = 6 octets[/b].","La deuxième ligne s'étend donc de [b]0x0206[/b] à [b]0x020B[/b] inclus.","Le code débute ainsi :[code]LDA #0xFF[br]STA 0x0206[br]STA 0x0207[br]STA 0x0208[br]STA 0x0209[br]...[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>175</dct:identifier>
        <dct:title xml:lang="fr-FR">Afficher une trame sur les 2 première lignes d'un écran graphique 48x32x2.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"00","type":"v"},{"value":"55","type":"v"},{"value":"AA","type":"v"},{"value":"0200"},{"value":"0201"},{"value":"0202"},{"value":"0203"},{"value":"0204"},{"value":"0205"},{"value":"0206"},{"value":"0207"},{"value":"0208"},{"value":"0209"},{"value":"020A"},{"value":"020B"}],"nblines":14,"valid":{"mem":{"200":"555555555555AAAAAAAAAAAA00"}},"class":"large smallsource","model":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Si l'on veut noircir 1 pixel sur 2 dans un écran à 2 couleurs. Sur un octet qui contient 8 pixels, on peut :","[br]. Noircir les pixels pairs, c'est à dire donner à l'octet la valeur [red]binaire[/red] [b]0101 0101[/b] soit [b]#0x55[/b] en [red]hexadécimal[/red].","[br]. Noircir les pixels impairs. Soit [b]1010 1010[/b] ou [b]#0xAA[/b].","","[b]Coloriez[/b] la [red]première[/red] ligne avec la valeur [b]#0x55[/b] et la [red]deuxième[/red] avec la valeur [b]#0xAA[/b]."],"tips":["La première ligne s'étend donc de [b]0x0200[/b] à [b]0x0205[/b] inclus.","La deuxième ligne s'étend donc de [b]0x0206[/b] à [b]0x020B[/b] inclus.","Le code ressemble à :[code]LDA #0x55[br]STA 0x0200[br]...[br]LDA #0xAA[br]STA 0x0206[br]...[/code]"]]]></dct:description>
        <dct:extent>5</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>176</dct:identifier>
        <dct:title xml:lang="fr-FR">Noircir les 4 derniers pixels d'un écran graphique 48x32x2.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"FF","type":"v"},{"value":"F0","type":"v"},{"value":"0F","type":"v"},{"value":"02C0"},{"value":"02BF"},{"value":"0200"},{"value":"0201"}],"nblines":2,"valid":{"mem":{"2BF":"0F"}},"class":"large","model":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Dans un écran 48x32 à 2 couleurs, une [b]ligne occupe 6 octets de la mémoire[/b] (car chaque octet représente 8 pixels et que 6x8=48). Il y a 32 lignes. La mémoire totale occupée par l'écran est donc 6*32 = 192 octets = [b]0xC0[/b] en hexadécimal.","","Sachant que la mémoire de l'écran commence à 0x200, qu'elle a une taille de 0xC0, [b]noircissez les 4 derniers pixels de l'écran[/b]."],"tips":["La valeur à utiliser ici est [b]0000 1111[/b] en [red]binaire[/red] soit [b]#0x0F[/b] en [red]hexadécimal[/red].","Sachant que le 1er octet de l'écran est [b]0x0200[/b], le dernier est [b]0x02BF[/b].","Le code attendu est :[code]LDA #0x0F[br]STA 0x02BF[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>177</dct:identifier>
        <dct:title xml:lang="fr-FR">Noircir les 4 coins d'un écran graphique 48x32x2.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"80","type":"v"},{"value":"01","type":"v"},{"value":"0200"},{"value":"0205"},{"value":"02BA"},{"value":"02BF"}],"nblines":8,"valid":{"mem":{"200":"80","205":"01","2BA":"80","2BF":"01"}},"class":"large","model":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["En utilisant les valeurs proposées, [b]coloriez[/b] en noir les [b]4 coins[/b] de l'écran 48x32x2."],"tips":["La dernière ligne s'étend de [b]0x02BA[/b] à [b]0x02BF[/b] inclus.","[b]1000 0000[/b] (soit [b]#0x80[/b]) permet d'allumer le [red]premier pixel[/red] d'un octet. [b]0000 0001[/b] (soit [b]#0x01[/b]), le [red]dernier[/red].","Le code attendu est :[code]LDA #0x80[br]STA 0x0200[br]STA 0x02BA[br]LDA #0x01[br]STA 0x0206[br]STA 0x02BF[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>181</dct:identifier>
        <dct:title xml:lang="fr-FR">Changer la valeur du premier octet d'un écran graphique 40x36x4.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"1B","type":"v"},{"value":"0200"}],"nblines":2,"valid":{"mem":{"200":"1B"}},"class":"large","model":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Autre modèle d'écran, inspiré de celui d'une célèbre console de jeu portable : [red]l'écran 40x36 en quatre couleurs[/red].","","Chaque pixel peut prendre 4 valeurs différentes : 0,1,2,3 (de la couleur la plus sombre à la plus claire) et doit donc être codé sur 2 bits. Un octet de 8 bits représente donc [b]4 pixels[/b] de l'écran.","","[b]Chargez[/b] la valeur [b]#0x1B[/b] dans le [red]premier[/red] octet de l'écran."],"tips":["[b]Déplacer[/b] l'instruction [b]LDA[/b] et la valeur [b]#0x1B[/b] dans la zone centrale.","[b]Déplacer[/b] l'instruction [b]STA[/b] et l'adresse mémoire [b]0x0200[/b] dans la zone centrale.","Le code attendu est : [code]LDA #0x1B[br]STA 0x0200[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>182</dct:identifier>
        <dct:title xml:lang="fr-FR">Changer la valeur du premier pixel d'un écran graphique 40x36x4.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"03","type":"v"},{"value":"0C","type":"v"},{"value":"0D","type":"v"},{"value":"C0","type":"v"},{"value":"D0","type":"v"},{"value":"CC","type":"v"},{"value":"DD","type":"v"},{"value":"FF","type":"v"},{"value":"0200"}],"nblines":2,"valid":{"mem":{"200":"C0"}},"class":"large","model":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Dans un affichage à 4 couleurs, chaque pixel est codé sur 2 bits.","","En trouvant la bonne valeur, [b]coloriez[/b] en blanc le [red]premier[/red] pixel de l'écran et lui seul."],"tips":["Pour colorier en blanc un premier pixel codé sur 2 bits, il faut utiliser la valeur binaire [b]1100 0000[/b].","[b]1100 0000[/b] vaut [b]#0xC0[/b] en [red]hexadécimal[/red].","Le code attendu est : [code]LDA #0xC0[br]STA 0x0200[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>183</dct:identifier>
        <dct:title xml:lang="fr-FR">Changer la valeur du dernier pixel de la première ligne d'un écran graphique 40x36x4.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"03","type":"v"},{"value":"0C","type":"v"},{"value":"0D","type":"v"},{"value":"C0","type":"v"},{"value":"D0","type":"v"},{"value":"CC","type":"v"},{"value":"0209"},{"value":"020A"},{"value":"0210"}],"nblines":2,"valid":{"mem":{"209":"03"}},"class":"large","model":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Dans un affichage à 4 couleurs, chaque octet représente 4 pixels. Une ligne de 40 pixels est donc codée sur [b]10 octets[/b].","","[b]Coloriez[/b] en blanc le [b]dernier pixel[/b] de la première ligne de l'écran."],"tips":["La valeur binaire à utiliser est [b]0000 0011[/b] soit [b]#0x03[/b] en [red]hexadécimal[/red].","Le dernier octet de la première ligne est à l'adresse mémoire [b]0x0209[/b].","Le code attendu est : [code]LDA #0x03[br]STA 0x0209[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>184</dct:identifier>
        <dct:title xml:lang="fr-FR">Changer la valeur des 4 derniers pixels d'un écran graphique 40x36x4.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"FF","type":"v"},{"value":"0200"},{"value":"0209"},{"value":"0367"},{"value":"0368"},{"value":"0369"}],"nblines":2,"valid":{"mem":{"367":"FF"}},"class":"large","model":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Sur un écran 40x36 en 4 couleurs, chaque octet représente 4 pixels. Il y a donc 10 octets par ligne et donc 36*10 = 360 octets = [b]0x168[/b] sont utilisés pour l'ensemble de l'écran.","","[b]Chargez la valeur 0xFF dans le dernier octet de la mémoire de l'écran graphique.[/b]"],"tips":["Le premier octet de l'adresse mémoire de l'écran est [b]0x0200[/b].","Avec une longueur de [b]0x0168[/b], le dernier pixel de l'écran est à l'adresse [b]0x0367[/b].","Le code attendu est : [code]LDA #0xFF[br]STA 0x0367[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>185</dct:identifier>
        <dct:title xml:lang="fr-FR">Colorier en blanc les 4 coins d'un écran graphique 40x36x4.</dct:title>
        <dct:description><![CDATA["ops":["lda","sta"],"args":[{"value":"C0","type":"v"},{"value":"03","type":"v"},{"value":"0200"},{"value":"0209"},{"value":"035E"},{"value":"0367"}],"nblines":8,"valid":{"mem":{"200":"C0","209":"03","35E":"C0","367":"03"}},"class":"large","model":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Coloriez en blanc les 4 coins de l'écran.[/b]"],"tips":["[b]#0xC0[/b] colorie les pixels à gauche tandis que [b]#0x03[/b] colorie ceux de droite.","Toutes les [b]adresses mémoires[/b] utiles sont données de gauche à droite et de bas en haut.","Le code attendu est : [code]LDA #0xC0[br]STA 0x0200[br]STA 0x035E[br]LDA #0x03[br]STA 0x0209[br]STA 0x0367[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <!-- CODE -->

        <!-- CODE: ABSOLUTE READ -->

    <rdf:Description>
        <dct:identifier>301</dct:identifier>
        <dct:title xml:lang="fr-FR">Copier la valeur de la zone mémoire 0x1000 dans le registre X, et récupérer ainsi la valeur de la première instruction du programme.</dct:title>
        <dct:description><![CDATA["ops":["ldx"],"args":[{"value":"1000"}],"nblines":1,"valid":{"x":"ae"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[strong]La zone mémoire commençant à l'adresse 0x1000 correspond au code compilée. Celui-là même que vous écrivez à chaque exercice.[/strong]","","[b]Chargez dans le registre X, la valeur contenue à l'adresse 0x1000.[/b]","","Avec cette opération, le registre X va prendre la valeur [b]#0xAE[/b]. Cette valeur correspond à la compilation de l'instruction [red]LDX[/red] elle-même, lorsqu'elle est utilisée avec une [b]adresse absolue[/b]."],"tips":["[b]Déplacer[/b] l'instruction [b]LDX[/b] et l'adresse mémoire [b]0x1000[/b] dans la zone centrale.","Le code attendu est : [code]LDX 0x1000[/code]","Il faut [b]cliquer[/b] sur l'icône de lecture en bas à droite pour lancer le programme une fois écrit."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>302</dct:identifier>
        <dct:title xml:lang="fr-FR">Copier la valeur de la zone mémoire 0x1000 dans le registre X, et récupérer ainsi la valeur de l'instruction LDA une fois compilée.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"LDA #0x48","code":"A948","rts":false}],"ops":["ldx"],"args":[{"value":"1000"},{"value":"1001"}],"nblines":1,"valid":{"x":"A9"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["La ligne précompilé 'init' exécute l'instruction [red]LDA #0x48[/red]. [b]Chargez[/b] dans le [b]registre X[/b] la valeur [b]#0xA9[/b] qui correspond à la compilation de l'instruction [b]LDA[/b] lorsqu'elle est utilisée, comme ici, avec une valeur numérique."],"tips":["En cliquant sur le bouton [b]PC[/b], on découvre que le code compilé débute en [b]0x1000[/b] par l'instruction [b]0xA9[/b].","Il vous faut ici charger dans le [b]registre X[/b] le contenu stocké en mémoire à l'adresse [b]0x1000[/b].","Le code attendu est : [code]LDX 0x1000[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>303</dct:identifier>
        <dct:title xml:lang="fr-FR">Copier la valeur de la zone mémoire 0x1001 dans le registre X, et récupérer ainsi la valeur chargée par l'instruction LDA.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"LDA #0xA8","code":"A9A8","rts":false}],"ops":["ldx"],"args":[{"value":"1000"},{"value":"1001"}],"nblines":1,"valid":{"a":"A8","x":"A8"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Chargez[/b] dans le [b]registre X[/b] la valeur stockée dans le [b]registre A[/b] après le code précompilé [i]init[/i].","","Il est conseillé de cliquer sur le [blue]registre PC[/blue] pour voir le code compilé ainsi que son emplacement mémoire. Pour rappel, l'instruction [red]LDA[/red] suivie d'une valeur numérique prend comme code compilée la valeur [b]0xA9[/b]."],"tips":["En cliquant sur le bouton [b]PC[/b], on découvre que le code compilé débute en [b]0x1000[/b] par les instructions [b]0xA9 0XA8[/b].","[b]0xA9[/b] est le code compilé de [b]LDA[/b], [b]0xA8[/b] est son agument stocké à l'adresse [b]0x1001[/b].","Le code attendu est : [code]LDX 0x1001[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>304</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers la sortie standard une valeur précompilée.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"4C041058","rts":false}],"ops":["lda","sta"],"args":[{"value":"fe"},{"value":"1003"}],"nblines":2,"valid":{"a":"58","out":"X"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[strong]S'il est possible d'accéder à n'importe quelle zone du code source, on peut utiliser cette possibilité pour stocker des informations dans le programme lui-même.[/strong]","","Grâce au code précompilé 'init' un octet prédéfini est volontairement stocké à l'adresse [b]0x1003[/b].","","[b]Affichez[/b] cette valeur dans la sortie standard."],"tips":["Chargez l'adresse mémoire [b]0x1003[/b] dans le [b]registre A[/b] grâce à l'opération [red]LDA[/red].","Pour afficher une valeur sur la sortie standard, il suffit de stocker cette valeur à l'adresse [b]0xFE[/b].","Le code attendu est : [code]LDA 0x1003[br]STA 0xFE[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>305</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers la sortie standard 3 valeurs précompilées.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"4C0610414243","rts":false}],"ops":["lda","sta"],"args":[{"value":"fe"},{"value":"1003"},{"value":"1004"},{"value":"1005"}],"nblines":6,"valid":{"a":"43","out":"ABC"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Envoyez[/b] successivement vers la sortie standard les octets définis aux adresses [b]0x1003, 0x1004[/b] et [b]0x1005[/b]." ],"tips":["Chargez les différentes adresses mémoires dans le [b]registre A[/b] grâce à l'opération [red]LDA[/red].","Après chaque chargement, stockez la valeur prise par le [b]registre A[/b] dans l'adresse mémoire [b]0xFE[/b].","Le code attendu est : [code]LDA 0x1003[br]STA 0xFE[br]LDA 0x1004[br]STA 0xFE[br]LDA 0x1005[br]STA 0xFE[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>306</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers l'écran graphique 1 valeur précompilée.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"4C041055","rts":false}],"ops":["lda","sta"],"args":[{"value":"200"},{"value":"1003"}],"nblines":2,"valid":{"a":"55","mem":{"200":"55"}},"class":"large","model":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Envoyez[/b] vers le premier octet de l'écran graphique l'octet défini à l'adresse [b]0x1003[/b]." ],"tips":["Chargez l'adresse mémoire [b]0x1003[/b] dans le [b]registre A[/b] grâce à l'opération [red]LDA[/red].","Le premier octet de l'écran graphique est à l'adresse [b]0x0200[/b].","Le code attendu est : [code]LDA 0x1003[br]STA 0x0200[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>


        <!-- CODE: ABSOLUTE WRITE -->

    <rdf:Description>
        <dct:identifier>351</dct:identifier>
        <dct:title xml:lang="fr-FR">Modifier un octet du programme</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"ea","rts":false}],"ops":["lda","sta"],"args":[{"value":"01","type":"v"},{"value":"1000"}],"nblines":2,"valid":{"a":"01","mem":{"1000":"01"}},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[strong]S'il est possible de récupérer n'importe quelle valeur contenue dans le code source, il est également possible de modifier ces valeurs.[/strong]","","[b]Stockez[/b] la valeur [b]#0x01[/b] dans le premier octet du programme c'est à dire à l'adresse [b]0x1000[/b]."],"tips":["Chargez la valeur [b]#0x01[/b] dans le [b]registre A[/b] grâce à l'opération [red]LDA[/red].","Stockez cette valeur en [b]0x1000[/b] grâce à l'opération [red]STA[/red].","Le code attendu est : [code]LDA #0x01[br]STA 0x1000[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>352</dct:identifier>
        <dct:title xml:lang="fr-FR">Hacker une valeur précompilée.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"4C081048454C4C4F","rts":false}],"footer":[{"label":"out","value":"","code":"ad031085fead041085fead051085fead061085fead071085fe","rts":false}],"ops":["lda","sta"],"args":[{"value":"21","type":"v"},{"value":"1007"}],"nblines":2,"valid":{"a":"21","out":"HELL!"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Sans le modifier, [b]lancez[/b] le code une première fois : le mot [i]HELLO[/i] apparaît sur la sortie standard. [b]Hackez[/b] ce code pour forcer le programme à afficher [i]HELL![/i].","","[b]Observez[/b] le code compilé en cliquant sur le bouton PC. Le caractère 'O' a pour code ASCII 0x4F. On peut le trouver à l'adresse 0x1007 (juste après les 2 'L' de code 0x4c). La valeur ASCII du caracètre '!' est 0x21. [b]Stockez[/b] cette valeur à l'adresse du 'O'." ],"tips":["Chargez la valeur [b]#0x21[/b] dans le [b]registre A[/b] grâce à l'opération [red]LDA[/red].","Stockez cette valeur en [b]0x1007[/b] grâce à l'opération [red]STA[/red].","Le code attendu est : [code]LDA #0x21[br]STA 0x1007[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>353</dct:identifier>
        <dct:title xml:lang="fr-FR">Utiliser une zone mémoire pour échanger le contenu des registres X et A.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":["LDX 0x01","LDA 0x02","NOP"],"code":"A201A902EA","rts":false}],"ops":["stx","tax","lda"],"args":[{"value":"1004"}],"nblines":3,"valid":{"a":"01","x":"02"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["En plus d'initialiser les registres A et X, le code précompilé définit une zone mémoire d'un octet librement utilisable à l'adresse [b]0x1004[/b].","","[b]Echangez[/b] les valeurs des 2 registres A et X.","","[code]. Stocker la valeur du registre X en 0x1004[br]. Copier la valeur du registre A dans X[br]. Charger 0x1004 dans le registre A[/code]"],"tips":["La démarche d'[b]échange de valeurs[/b] est explicitée dans l'exercice.","Vous avez vraiment besoin de la réponse ?","Le code attendu est : [code]STX 0x1004[br]TAX[br]LDA 0x1004[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>354</dct:identifier>
        <dct:title xml:lang="fr-FR">Utiliser une zone mémoire pour échanger le contenu des registres X et A.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":["LDX 0x11","LDA 0x22","NOP"],"code":"A211A922EA","rts":false}],"ops":["stx","tax","lda"],"args":[{"value":"1004"}],"nblines":3,"valid":{"a":"11","x":"22"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["En plus d'initialiser les registres A et X, le code précompilé définit une zone mémoire d'un octet librement utilisable à l'adresse [b]0x1004[/b].","","[b]Echangez[/b] les valeurs des 2 registres A et X."],"tips":["L'échange de valeurs se fait en [b]3 étapes[/b].","[b]1)[/b] X vers 0x1004[br][b]2)[/b] A vers X[br][b]3)[/b] 0x1004 vers A","Le code attendu est : [code]STX 0x1004[br]TAX[br]LDA 0x1004[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

        <!-- CODE: CREATE VAR FOR ABSOLUTE READING/WRITING -->

    <rdf:Description>
        <dct:identifier>401</dct:identifier>
        <dct:title xml:lang="fr-FR">Créer une zone mémoire utilisable comme variable et y charger la valeur 0x10.</dct:title>
        <dct:description><![CDATA["ops":["sta","lda","nop"],"args":[{"value":"1000"},{"value":"10","type":"v"}],"nblines":3,"valid":{"mem":{"1000":"10A910"}},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Une des manières possibles de créer un zone mémoire librement utilisable est d'utiliser l'instruction [red]NOP[/red] (no operation). Lorsqu'elle est exécutée, celle-ci ne fait rien et le processeur passe à l'instruction suivante. Placé en [b]DEBUT[/b] de programme (c'est à dire à l'adresse 0x1000), cet opérateur permet de [b]réserver[/b] et de [b]protéger[/b] un octet utilisable par le reste du programme. [blue]Ce qui est toujours préférable qu'utiliser un octet au hasard dans la mémoire du processeur.[/blue]","","[b]Utilisez[/b] l'instruction NOP pour créer une zone mémoire et [b]chargez-y[/b] la valeur [b]#0x10.[/b]"],"tips":["L'exercice est plutôt simple, vous ne trouvez pas ?","Avez-vous [b]réellement[/b] besoin de la réponse ?","Le code attendu est : [code]NOP[br]LDA #0x10[br]STA 0x1000[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>402</dct:identifier>
        <dct:title xml:lang="fr-FR">Créer une zone mémoire pour échanger le contenu des registres X et A.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":["LDX 0x33","LDA 0x44"],"code":"A233A944","rts":false}],"ops":["stx","tax","lda","nop"],"args":[{"value":"1004"}],"nblines":4,"valid":{"a":"33","x":"44"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Grâce à l'instruction [red]NOP[/red], [b]créez une zone mémoire librement utilisable en début de programme[/b] afin d'[b]échanger[/b] la valeur des registres A et X.","","Placé au début de votre programme, le code compilé de l'instruction [b]NOP[/b] sera à l'adresse [b]0x1004[/b] puisque les instruction [red]LDX[/red] et [red]LDA[/red] du code précompilé 'init' prennent déjà 4 octets en mémoire."],"tips":["Une fois l'instruction NOP dans le programme, l'échange de valeurs se fait en [b]3 étapes[/b].","[b]1)[/b] X vers 0x1004[br][b]2)[/b] A vers X[br][b]3)[/b] 0x1004 vers A","Le code attendu est : [code]NOP[br]STX 0x1004[br]TAX[br]LDA 0x1004[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>403</dct:identifier>
        <dct:title xml:lang="fr-FR">Créer deux zones mémoires utilisables comme variables et y charger les valeurs 0x41 et 0x4F.</dct:title>
        <dct:description><![CDATA["ops":["sta","lda","nop"],"args":[{"value":"1000"},{"value":"1001"},{"value":"41","type":"v"},{"value":"4F","type":"v"}],"nblines":6,"valid":{"mem":{"1000":"414FA9"}},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Réservez[/b] deux zones mémoires en DEBUT de programme (c'est à dire aux adresses 0x1000 et 0x1001) et [b]chargez-y[/b] respectivement les valeurs [b]#0x41[/b] et [b]0x4F[/b]."],"tips":["La [b]réservation[/b] d'espace mémoire dans la zone mémoire du code se fait grâce à l'instruction [b]NOP[/b].","[code]NOP[br]NOP[/code] permet de réserver 2 octets.","Le code attendu est : [code]NOP[br]NOP[br]LDA #0x41[br]STA 0x1000[br]LDA #0x4F[br]STA 0x1001[/code]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

        <!-- CODE: LABEL USAGE -->

    <rdf:Description>
        <dct:identifier>451</dct:identifier>
        <dct:title xml:lang="fr-FR">Créer une zone mémoire utilisable comme variable et y charger la valeur 0xFF en recopiant un programme faisant usage d'un label.</dct:title>
        <dct:description><![CDATA["ops":["sta","lda","nop"],"args":[{"value":"label","type":"label"},{"value":"FF","type":"v"}],"nblines":4,"valid":{"mem":{"1000":"FFA9FF8D0010"}},"class":"huge"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Recopiez le programme suivant :[/b]","[code]LABEL[br]  NOP[br]  LDA #0xFF[br]  STA LABEL[/code]","","Un label peut être utilisé de 2 façons différentes :","1) Seul sur une ligne, il crée une [b]correspondance entre son nom et l'adresse mémoire[/b] où il se trouve. Ici, placé en début de programme il crée l'égalité [red]LABEL = 0x1000[/red].","2) En paramètre de fonction, il est remplacé par la valeur à laquelle il correspond. Ici, [red]STA LABEL[/red] revient à écrire [red]STA 0x1000[/red]. A noter que [red]LABEL[/red] n'est pas réellement compilé et, qu'en plus, [b]0x1000[/b] est l'adresse du libellé [red]LABEL[/red] mais aussi de l'instruction [red]NOP[/red] suivante."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>452</dct:identifier>
        <dct:title xml:lang="fr-FR">Créer une zone mémoire utilisable comme variable et y charger la valeur 0x10 en utilisant un label.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"A9FF","rts":false}],"ops":["sta","lda","nop"],"args":[{"value":"label","type":"label"},{"value":"10","type":"v"}],"nblines":4,"valid":{"mem":{"1002":"10A910"}},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["A l'aide de l'opérateur [red]NOP[/red], [b]créez une zone mémoire en début de programme et chargez-y la valeur 0x10.[/b]","","Il est parfois compliqué de connaître l'emplacement mémoire exact d'une instruction au sein du programme. C'est pour cela qu'il est souvent pratique d'utiliser une étiquette. Une étiquette ne modifie en rien un programme assembleur mais permet de faire [b]correspondre une adresse mémoire à un nom[/b].","[b]Insérez l'étiquette 'label' en première ligne du programme[/b]. Compte tenu de la longueur du code 'init', 'label' devient automatiquement équivalent à l'adresse mémoire [b]0x1002[/b] sans que l'on ait eu besoin de le calculer."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>453</dct:identifier>
        <dct:title xml:lang="fr-FR">Créer une zone mémoire labellisée pour échanger le contenu des registres X et A.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":["LDX 0x33","LDA 0x44"],"code":"A233A944","rts":false}],"ops":["stx","tax","lda","nop"],"args":[{"value":"label","type":"label"}],"nblines":5,"valid":{"a":"33","x":"44"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Après avoir placé un libellé, et à l'aide de l'opérateur [red]NOP[/red], [b]créez une zone mémoire en début de programme et utilisez celle-ci pour échanger les valeurs des registres X et A.[/b]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>454</dct:identifier>
        <dct:title xml:lang="fr-FR">Créer deux zones mémoires labellisées utilisables comme variables et y charger les valeurs 0x41 et 0x4F.</dct:title>
        <dct:description><![CDATA["ops":["sta","lda","nop"],"args":[{"value":"label1","type":"label"},{"value":"label2","type":"label"},{"value":"41","type":"v"},{"value":"4F","type":"v"}],"nblines":8,"valid":{"mem":{"1000":"414FA9"}},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Créez deux zones mémoires en DEBUT de programme, chacune étant précédée d'un libellé, et chargez-y respectivement les valeurs 0x41 et 0x4F.[/b]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>455</dct:identifier>
        <dct:title xml:lang="fr-FR">Modifier une zone mémoire issue d'un code précompilé.</dct:title>
        <dct:description><![CDATA["header":[{"label":"label","value":"NOP","code":"EA","rts":false}],"ops":["lda","sta"],"args":[{"value":"99","type":"v"},{"value":"label","type":"label"}],"nblines":2,"valid":{"mem":{"1000":"99"},"a":"99"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Les différentes codes précompilés possèdent tous un libellé définissant l'octet de début du code. Ici, le code précompilé 'label' commence à l'octet 0x1000 (puisqu'il est en début de programme) et correspond à la simple instruction [red]NOP[/red].","","[b]Modifiez cette zone mémoire 'label' en y stockant la valeur 0x88.[/b]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>456</dct:identifier>
        <dct:title xml:lang="fr-FR">Modifier une zone mémoire issue d'un code précompilé.</dct:title>
        <dct:description><![CDATA["header":[{"label":"label1","value":"NOP","code":"EA","rts":false},{"label":"label2","value":"NOP","code":"EA","rts":false}],"ops":["lda","sta"],"args":[{"value":"01","type":"v"},{"value":"02","type":"v"},{"value":"label1","type":"label"},{"value":"label2","type":"label"}],"nblines":4,"valid":{"mem":{"1000":"0102A9"}},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Chargez respectivement les valeurs 0x01 et 0x02 dans les zones mémoire labellisées 'label1' et 'label2'.[/b]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>457</dct:identifier>
        <dct:title xml:lang="fr-FR">Utiliser une variable définie par un code précompilé pour échanger le contenu des registres X et A.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":["LDX 0x01","LDA 0x02"],"code":"A201A902","rts":false},{"label":"tmp","value":"NOP","code":"EA","rts":false}],"ops":["stx","tax","lda"],"args":[{"value":"tmp","type":"label"}],"nblines":3,"valid":{"a":"01","x":"02"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Le code 'init' initialise le registre X à 0x01 et le registre A à 0x02.","","[b]Echangez les valeurs de ces 2 registres en utilisant le label 'tmp' comme variable temporaire.[/b]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>471</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers la sortie standard une valeur précompilée.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"4C0410","rts":false},{"label":"c","value":"","code":"41","rts":false}],"ops":["lda","sta"],"args":[{"value":"fe"},{"value":"c","type":"label"}],"nblines":2,"valid":{"a":"41","out":"A"}]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Envoyez vers la sortie standard l'octet défini dans la partie de code labellisée 'c'.[/b]" ]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>472</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers la sortie standard une valeur précompilée.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"4C0810","rts":false},{"label":"c1","value":"","code":"48","rts":false},{"label":"c2","value":"","code":"45","rts":false},{"label":"c3","value":"","code":"4C","rts":false},{"label":"c4","value":"","code":"4C","rts":false},{"label":"c5","value":"","code":"4F","rts":false}],"ops":["lda","sta"],"args":[{"value":"fe"},{"value":"c1","type":"label"},{"value":"c2","type":"label"},{"value":"c3","type":"label"},{"value":"c4","type":"label"},{"value":"c5","type":"label"}],"nblines":10,"valid":{"a":"4F","out":"HELLO"}]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Envoyez vers la sortie standard chaque octet des labels c1, c2, c3, c4 et c5. Dans cet ordre.[/b]" ]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>473</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers la sortie standard le texte 'Hello world'.</dct:title>
        <dct:description><![CDATA["header":[{"label":"var1","value":"","code":"eaa9488d0010a900207010a9658d0010a900207010a96C8d0010a900207010a96C8d0010a900207010a96F8d0010a900207010a9208d0010a900207010a9778d0010a900207010a96F8d0010a900207010a9728d0010a900207010a96C8d0010a900207010a9648d0010a90020701000","rts":false}],"footer":[{"label":"end","value":"","code":"60","rts":false}],"ops":["lda","sta","ldx","stx","ldy","sty"],"args":[{"value":"fe"},{"value":"var1","type":"label"}],"nblines":2,"valid":{"out":"Hello world"}]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Le programme précompilé crée une boucle qui, à chaque itération, change la valeur de l'octet situé à l'adresse 'var1'.","","[b]Chargez 'var1' dans le registre A et envoyez celui-ci vers la sortie standard.[/b]"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>474</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer un bitmap 8x8 vers l'écran graphique 48x32x2.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"4C0B10","rts":false},{"label":"c200","value":"","code":"3c","rts":false},{"label":"c206","value":"","code":"66","rts":false},{"label":"c20C","value":"","code":"c3","rts":false},{"label":"c212","value":"","code":"a5","rts":false},{"label":"c218","value":"","code":"81","rts":false},{"label":"c21E","value":"","code":"db","rts":false},{"label":"c224","value":"","code":"42","rts":false},{"label":"c22A","value":"","code":"7e","rts":false}],"ops":["lda","sta"],"args":[{"value":"200"},{"value":"206"},{"value":"20C"},{"value":"212"},{"value":"218"},{"value":"21E"},{"value":"224"},{"value":"22A"},{"value":"c200","type":"label"},{"value":"c206","type":"label"},{"value":"c20C","type":"label"},{"value":"c212","type":"label"},{"value":"c218","type":"label"},{"value":"c21E","type":"label"},{"value":"c224","type":"label"},{"value":"c22A","type":"label"}],"nblines":16,"valid":{"mem":{"200":"3c","206":"66","20C":"c3","212":"a5","218":"81","21e":"db","224":"42","22A":"7e"}},"model":2,"font":0.9]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Envoyez l'octet contenu dans chaque label vers la zone mémoire correspondante (c200 vers 0x200, c206 vers 0x206, etc.) et affichez ainsi un sprite 8x8.[/b]" ]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>475</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer un bitmap 8x8 vers l'écran graphique 48x32x2.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"","code":"4C0B10","rts":false},{"label":"c231","value":"","code":"aa","rts":false},{"label":"c237","value":"","code":"ba","rts":false},{"label":"c23D","value":"","code":"fe","rts":false},{"label":"c243","value":"","code":"d6","rts":false},{"label":"c249","value":"","code":"7c","rts":false},{"label":"c24F","value":"","code":"7c","rts":false},{"label":"c255","value":"","code":"44","rts":false},{"label":"c25B","value":"","code":"82","rts":false}],"ops":["lda","sta"],"args":[{"value":"231"},{"value":"237"},{"value":"23D"},{"value":"243"},{"value":"249"},{"value":"24F"},{"value":"255"},{"value":"25B"},{"value":"c231","type":"label"},{"value":"c237","type":"label"},{"value":"c23D","type":"label"},{"value":"c243","type":"label"},{"value":"c249","type":"label"},{"value":"c24F","type":"label"},{"value":"c255","type":"label"},{"value":"c25B","type":"label"}],"nblines":16,"valid":{"mem":{"231":"aa","237":"ba","23D":"fe","243":"d6","249":"7c","24F":"7c","255":"44","25B":"82"}},"model":2,"font":0.9]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Envoyez l'octet contenu dans chaque label vers la zone mémoire correspondante (c231 vers 0x231, c237 vers 0x237, etc.) et affichez ainsi un sprite 8x8.[/b]" ]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>


    <!-- DIRECT INDEXED -->

    <rdf:Description>
        <dct:identifier>501</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers la sortie standard une valeur précompilée en utilisant un adressage direct indexé.</dct:title>
        <dct:description><![CDATA["footer":[{"label":"end","value":"","code":"00","rts":false},{"label":"data","value":"ABCD","code":"4142434445","rts":false}],"ops":["lda","sta","ldx"],"args":[{"value":"02","type":"v"},{"value":"fe"},{"value":"data","type":"label x"}],"nblines":3,"valid":{"out":"C"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Le code précompilé data contient la chaine de caractères 'ABCD'. Chargez dans le registre A la valeur du 3ème caractère ('C') et affichez-le sur la sortie standard.","","Le label 'data' fournit un adressage mémoire direct vers le premier octet du bloc de données 'data'. Ici, ce premier octet correspond à la lettre 'A'. Il est cependant possible d'utiliser un adressage direct indexé avec 'data,X'. Cette adresse mémoire correpond à la Xème valeur à partir de l'adresse 'data', où X est la valeur du registre X."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>502</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers la sortie standard une valeur précompilée en utilisant un adressage direct indexé.</dct:title>
        <dct:description><![CDATA["footer":[{"label":"end","value":"","code":"00","rts":false},{"label":"data","value":"ABCD","code":"4142434445","rts":false}],"ops":["lda","sta","ldx"],"args":[{"value":"00","type":"v"},{"value":"01","type":"v"},{"value":"02","type":"v"},{"value":"03","type":"v"},{"value":"fe"},{"value":"data","type":"label x"}],"nblines":9,"valid":{"out":"BAD"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Le code précompilé data contient la chaine de caractères 'ABCD'. En utilisant l'adressage direct indexé avec 'data,X', affichez 'BAD' sur la sortie standard.","","Ici, les différents caractères sont accessibles aux adresses indexées suivantes :",".'data,X' avec X=0 pointe sur 'A'",".'data,X' avec X=1 pointe sur 'B'",".'data,X' avec X=2 pointe sur 'C'",".'data,X' avec X=3 pointe sur 'D'"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>503</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers la sortie standard une valeur précompilée en utilisant un adressage direct indexé.</dct:title>
        <dct:description><![CDATA["footer":[{"label":"end","value":"","code":"00","rts":false},{"label":"data","value":"ABCD","code":"4142434445","rts":false}],"ops":["lda","sta","ldy"],"args":[{"value":"00","type":"v"},{"value":"01","type":"v"},{"value":"02","type":"v"},{"value":"03","type":"v"},{"value":"fe"},{"value":"data","type":"label y"}],"nblines":9,"valid":{"out":"CAB"},"class":"large"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Le code précompilé data contient la chaine de caractères 'ABCD'. En utilisant l'adressage directe indexée avec 'data,Y', affichez 'CAB' sur la sortie standard.","","Ici, les différents caractères sont accessibles aux adresses indexées suivantes :",".'data,Y' avec Y=0 pointe sur 'A'",".'data,Y' avec Y=1 pointe sur 'B'",".'data,Y' avec Y=2 pointe sur 'C'",".'data,Y' avec Y=3 pointe sur 'D'"]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>504</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers la sortie standard une valeur précompilée en utilisant un adressage direct indexé.</dct:title>
        <dct:description><![CDATA["footer":[{"label":"end","value":"","code":"00","rts":false},{"label":"data","value":"ABCD","code":"4142434445","rts":false}],"ops":["lda","sta","ldy","dey"],"args":[{"value":"03","type":"v"},{"value":"fe"},{"value":"data","type":"label y"}],"nblines":12,"valid":{"out":"DCBA"}]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Le code précompilé data contient la chaine de caractères 'ABCD'. En utilisant l'adressage directe indexée avec 'data,Y', affichez 'DCBA' sur la sortie standard."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>505</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers la sortie standard une valeur précompilée en utilisant un adressage direct indexé.</dct:title>
        <dct:description><![CDATA["footer":[{"label":"end","value":"","code":"00","rts":false},{"label":"data","value":"ABCD","code":"4142434445","rts":false}],"ops":["lda","sta","ldx","dex"],"args":[{"value":"03","type":"v"},{"value":"fe"},{"value":"data","type":"label x"}],"nblines":10,"valid":{"out":"DCA"}]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Le code précompilé 'data' contient la chaine de caractères 'ABCD'. En utilisant l'adressage directe indexée avec 'data,X', affichez 'DCA' sur la sortie standard."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>511</dct:identifier>
        <dct:title xml:lang="fr-FR">Modifier la valeur de plusieurs octets de la mémoire en utilisant un adressage direct indexé.</dct:title>
        <dct:description><![CDATA["header":[{"label":"data","value":"","code":"EAEAEAEAA255A955","rts":false}],"ops":["lda","sta","ldx","inx"],"args":[{"value":"00","type":"v"},{"value":"data","type":"label x"}],"nblines":9,"valid":{"mem":{"1000":"00000000A255"}}]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Le code précompilé 'data' propose en début de bloc, 4 octets accessibles librement. Grâce à un adressage direct indexé sur l'opérateur STA, initialisez ces 4 octets à 0x00.","","Attention, les registres X et A ne sont pas forcément initialisés à 0 au départ." ]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>512</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers l'écran graphique 48x32x2 des valeurs prédéfinies en utilisant un adressage direct indexé.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":["LDX 0x55","LDA 0x55"],"code":"A255A955","rts":false}],"ops":["lda","sta","ldx","inx"],"args":[{"value":"00","type":"v"},{"value":"55","type":"v"},{"value":"200","type":"x"}],"nblines":7,"valid":{"mem":{"200":"55555500"}},"model":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Envoyez la valeur 0x55 sur les 3 premiers octets de l'écran graphique.","","L'adressage direct indexé fonctionne avec des étiquettes mais également avec des adresses absolues comme 0x200."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>513</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers l'écran graphique 48x32x2  des valeurs prédéfinies en utilisant un adressage direct indexé.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":["LDX 0x55","LDA 0x55"],"code":"A255A955","rts":false}],"footer":[{"label":"end","value":"","code":"00","rts":false},{"label":"data","value":"","code":"F0550F","rts":false}],"ops":["lda","sta","ldx","inx"],"args":[{"value":"00","type":"v"},{"value":"200","type":"x"},{"value":"data","type":"label x"}],"nblines":9,"valid":{"mem":{"200":"F0550F"}},"model":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Copiez les 3 octets contenus dans 'data' vers les 3 premiers octets de l'écran graphique."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>514</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers l'écran graphique 48x32x2  des valeurs prédéfinies en utilisant un adressage direct indexé.</dct:title>
        <dct:description><![CDATA["footer":[{"label":"loop","value":"","code":"E8E0C0D001004C0010","rts":false},{"label":"data","value":"","code":"555555555555AAAAAAAAAAAA555555555555AAAAAAAAAAAA555555555555AAAAAAAAAAAA555555555555AAAAAAAAAAAA555555555555AAAAAAAAAAAA555555555555AAAAAAAAAAAA555555555555AAAAAAAAAAAA555555555555AAAAAAAAAAAA555555555555AAAAAAAAAAAA555555555555AAAAAAAAAAAA555555555555AAAAAAAAAAAA555555555555AAAAAAAAAAAA555555555555AAAAAAAAAAAA555555555555AAAAAAAAAAAA555555555555AAAAAAAAAAAA555555555555AAAAAAAAAAAA","rts":false}],"ops":["lda","sta"],"args":[{"value":"200","type":"x"},{"value":"data","type":"label x"}],"nblines":2,"valid":{"mem":{"200":"555555555555AAAAAAAAAAAA555555555555AAAAAAAAAAAA555555555555"}},"class":"large","model":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Le programme précompilé 'loop' effectue une boucle sur les 2 premières lignes du programme. Ces 2 premières lignes vont être exécutées 192 fois. A chaque itération, la valeur du registre X est incrémenté d'1, passant de 0x00 à 0xC0 (192).","","Transférez le Xème octet du code 'data' vers le Xème octet de l'écran graphique."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>515</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers l'écran graphique 48x32x2  des valeurs prédéfinies en utilisant un adressage direct indexé.</dct:title>
        <dct:description><![CDATA["footer":[{"label":"loop","value":"","code":"E8E0C0D001004C0010","rts":false},{"label":"data","value":"","code":"00001c000000001fffc000000ffffff000007ffffff800007ffffffc3ff87ff0007dfffc7c00003ffffc3c01f03ffffe3f81f01fe07e3f81f83f001e3fc1f83e1c1f3fc1f83c1c0f03c0f83c1e0f03c0f83c1e0f03c0f07e3c0f03c0c0fff00f03c003ffc60703c07fff0e0703e0fffe0f0701e0ffbc0f0701e07e3c0f0701e07f3c0e0101e07f3c00010fe07f3e01c70fe07f9f07ff0fe00f9fffff0fc00f8fffff0f83ff87ff7c07ffff81fc0007ffff80000007fffc00000007fe00000000","rts":false}],"ops":["lda","sta"],"args":[{"value":"200","type":"x"},{"value":"data","type":"label x"}],"nblines":2,"valid":{"mem":{"200":"00001c000000001fffc000000ffffff000007ffffff800007ffffffc3ff8"}},"class":"large","model":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Le programme précompilé 'loop' effectue une boucle sur les 2 premières lignes du programme. Ces 2 premières lignes vont être exécutées 192 fois. A chaque itération, la valeur du registre X est incrémenté d'1, passant de 0x00 à 0xC0 (192).","","Transférez le Xème octet du code 'data' vers le Xème octet de l'écran graphique."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>516</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers l'écran graphique 16x16x256 l'index de chaque octet en utilisant un adressage direct indexé.</dct:title>
        <dct:description><![CDATA["footer":[{"label":"loop","value":"","code":"E8E000D001004C0010","rts":false}],"ops":["txa","sta"],"args":[{"value":"200","type":"x"}],"nblines":2,"valid":{"mem":{"200":"00010203","2FF":"FF"}},"class":"large","model":0]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["La partie précompilée 'loop' effectue une boucle sur les 2 premières lignes du programme. Ces 2 premières lignes vont être exécutées 256 fois. A chaque itération, la valeur du registre X est incrémenté d'1, passant de 0x00 à 0xFF (255).","","Stockez la valeur du registre X dans le Xème octet de l'écran 16x16x256.","","A noter que STX 0x200,X n'est pas une opération valide en assembleur 6502. Pour résoudre cet exercice il est nécessaire d'utiliser le registre A."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>517</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers l'écran graphique 16x16x256 l'index de chaque octet en utilisant un adressage direct indexé.</dct:title>
        <dct:description><![CDATA["header":[{"label":"init","value":"LDY #0x00","code":"A000","rts":false}],"footer":[{"label":"loop","value":"","code":"E8E000D001004C0210","rts":false}],"ops":["tya","sta","iny"],"args":[{"value":"200","type":"x"}],"nblines":4,"valid":{"mem":{"200":"00020406","2FF":"FE"}},"class":"large","model":0]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["La partie précompilée 'loop' effectue une boucle sur les 4 lignes du programme. Celles-ci vont être exécutées 256 fois. A chaque itération, la valeur du registre X est incrémenté d'1, passant de 0x00 à 0xFF (255).","","Le but de cet exercice est d'afficher 2 nuanciers de gris dans l'écran graphique. Pour ce faire, à chaque itération, transférez la valeur du registre Y vers le Xème octet de l'écran graphique puis incrémentez cette valeur 2 fois."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>



    <rdf:Description>
        <dct:identifier>521</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers l'écran graphique 40x36x4 des valeurs prédéfinies en utilisant un adressage direct indexé.</dct:title>
        <dct:description><![CDATA["footer":[{"label":"loop","value":"","code":"E8E000D001004C0010","rts":false},{"label":"data","value":"","code":"66666666666666666666999999999999999999996666666666666666666699999999999999999999666666666666666666669999999999999999999966666666666666666666999999999999999999996666666666666666666699999999999999999999666666666666666666669999999999999999999966666666666666666666999999999999999999996666666666666666666699999999999999999999666666666666666666669999999999999999999966666666666666666666999999999999999999996666666666666666666699999999999999999999666666666666666666669999999999999999999966666666666666666666999999999999","rts":false}],"ops":["lda","sta"],"args":[{"value":"200","type":"x"},{"value":"data","type":"label x"}],"nblines":2,"valid":{"mem":{"200":"666666666666666666669999999999999999999966"}},"class":"large","model":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Puisque les registres X et Y ont une taille d'un octet, l'adressage indexé ne permet d'accéder qu'au 256 octets situés après l'adresse de base. Par exemple, l'adresse directe indexée 200,X permet d'accéder aux octets 0x200 et 0x2FF mais pas à 0x300 qui est hors de portée.","Le code précompilé 'loop' effectue une boucle qui va exécuter le 2 premières lignes 256 fois. A chaque itération, la valeur du registre X est incrémenté d'1, passant de 0x00 à 0xFF (255). Transférez le Xème octet du code 'data' vers le Xème octet de l'écran graphique 40x36x4 et remarquez que cet écran est trop grand pour être rempli avec une seule et même adresse indexée."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>522</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers l'écran graphique 40x36x4 des valeurs prédéfinies en utilisant un adressage direct indexé.</dct:title>
        <dct:description><![CDATA["footer":[{"label":"loop","value":"","code":"E8E0B4D001004C0010","rts":false},{"label":"data","value":"","code":"666666666666666666669999999999999999999966666666666666666666999999999999999999996666666666666666666699999999999999999999666666666666666666669999999999999999999966666666666666666666999999999999999999996666666666666666666699999999999999999999666666666666666666669999999999999999999966666666666666666666999999999999999999996666666666666666666699999999999999999999","rts":false}],"ops":["lda","sta"],"args":[{"value":"200","type":"x"},{"value":"2B4","type":"x"},{"value":"data","type":"label x"}],"nblines":3,"valid":{"mem":{"200":"666666666666666666669999999999999999999966","2B4":"666666666666666666669999999999999999999966"}},"class":"large","model":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Grâce au code précompilé 'loop', les 3 premières lignes du programme vont être exécutées 180 fois (0xB4). Sachant que l'écran 40x36x4 est codé sur 360 octets, que 'data' contient la définition des 180 premiers octets à afficher et que cette définition est identique pour les 180 octets suivants, remplissez intégralement l'écran."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>


    <rdf:Description>
        <dct:identifier>523</dct:identifier>
        <dct:title xml:lang="fr-FR">Envoyer vers l'écran graphique 40x36x4 des valeurs prédéfinies en utilisant un adressage direct indexé.</dct:title>
        <dct:description><![CDATA["footer":[{"label":"loop","value":"","code":"E8E0B4D001004C0010","rts":false},{"label":"data1","value":"","code":"00000000000000000000100000000000000000001000000000010000000000000000004000000000000000000000000000004000000000000000000000040005000000000000000aaaaa9a5559000000002aaaaaaaaaaa4000000055aaaaaaaaaa9000000159aaaaaaaaaaa40000016efaaaaaaaaaaa000005bffe555696aaaa400005ffff955406a555000001faebe958695568000001faebf96459157c000006f9e7f86915657c00001af9e7f82a15a57d0000","rts":false},{"label":"data2","value":"","code":"15fafffeaa55aabd000056fffffffebe6ffd1555aafeffffaaa929a95055aaaaaa95555555555555aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6aaaaaaaaa9aaaaaaaa66aaaaaaaa99aaaaaaaaa6aaaaaaaaa9aaaaaaaa9aaaaaaaaaaaaaaaaaaa9556a6aa6aaaaaaaaaaa5556aaaaaaaaaaa6aa695a959aaaaaaaaaaaaaa95a559969aaaaa9aa6a69555696aaaaa9a96aaa9555a565aa9aaaa966999","rts":false}],"ops":["lda","sta"],"args":[{"value":"200","type":"x"},{"value":"2B4","type":"x"},{"value":"data1","type":"label x"},{"value":"data2","type":"label x"}],"nblines":4,"valid":{"mem":{"200":"00000000000000000000100000000000000000001000","2B4":"15fafffeaa55aabd000056fffffffebe6ffd1555aafeffffaaa929"}},"class":"large","model":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Grâce au code précompilé 'loop', les 4 premières lignes du programme vont être exécutées 180 fois (0xB4). Sachant que l'écran 40x36x4 est codé sur 360 octets, que 'data1' contient la définition des 180 premiers octets à afficher et que 'data2' contient la définition des 180 octets suivants, remplissez intégralement l'écran."]]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>it</dct:subject>
        <dct:educationLevel>3</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>001</dct:alternative>
    </rdf:Description>

</rdf:RDF>

