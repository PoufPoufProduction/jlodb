<?xml version="1.0"?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:dct="http://purl.org/dc/terms/">


    <!-- PREFIX LIST
    -->

    <!-- FIGURE -->

    <rdf:Description>
        <dct:identifier>ft01</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, les triangles.</dct:title>
        <dct:description><![CDATA["time":0,"template":"template2.html","gen":"function(){var a=Math.floor(Math.random()*2),ret=\\\"<div style='width:1em;height=1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path,circle,rect {fill:none;stroke:black;stroke-width:2;} .wrong path,.wrong circle,.wrong rect {stroke:red;fill:red;fill-opacity:0.5;} .good path,.good circle,.good rect {stroke:green;fill:green;fill-opacity:0.5;}</style></def><g transform='translate(24,24)'><g transform='rotate(\\\"+Math.floor(Math.random()*180)+\\\")'>\\\"; if (a==0) { ret+=\\\"<path d='M 0,-20 L \\\"+(3+Math.floor(Math.random()*20))+\\\",\\\"+(-5+Math.floor(Math.random()*20))+\\\" L  \\\"+(-18+Math.floor(Math.random()*8))+\\\",\\\"+(-10+Math.floor(Math.random()*12))+\\\" L 0,-20 z'/>\\\"; } else { if (Math.floor(Math.random()*2)) { var b=14+Math.floor(Math.random()*23),c=14+Math.floor(Math.random()*23); ret+=\\\"<rect x='\\\"+(-b/2)+\\\"' y='\\\"+(-c/2)+\\\"' width='\\\"+b+\\\"' height='\\\"+c+\\\"'/>\\\"; } else { ret+=\\\"<circle cx='0' cy='0' r='\\\"+(10+Math.floor(Math.random()*13))+\\\"'/>\\\"; }} ret+=\\\"</g></g></svg></div>\\\"; return [ret, a==0?1:0];}","class":"alpha blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"1em","width":"2.5em"},"values":[["OUI",1],["NON",0]]},"comment":"La figure proposée est-elle un [red]triangle[/red] ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>fs01</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>ft02</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, les triangles isocèles.</dct:title>
        <dct:description><![CDATA["time":0,"template":"template2.html","gen":"function(){var d2=function(x1,y1,x2,y2){ return (x1-x2)*(x1-x2)+(y1-y2)*(y1-y2); },a=Math.floor(Math.random()*2),ret=\\\"<div style='width:1em;height=1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path,circle,rect {fill:none;stroke:black;stroke-width:2;} .wrong path,.wrong circle,.wrong rect {stroke:red;fill:red;fill-opacity:0.5;} .good path,.good circle,.good rect {stroke:green;fill:green;fill-opacity:0.5;}</style></def><g transform='translate(24,24)'><g transform='rotate(\\\"+Math.floor(Math.random()*180)+\\\")'>\\\"; if (a==0) { var b,c; do { b=Math.floor(Math.random()*20+14); c=Math.floor(Math.random()*20+14); } while (Math.abs(c-b)<10 || c<b/1.5); var h=Math.sqrt(c*c-b*b/4); ret+=\\\"<path d='M 0,\\\"+(-h/2)+\\\" L \\\"+(b/2)+\\\",\\\"+(h/2)+\\\" L  \\\"+(-b/2)+\\\",\\\"+(h/2)+\\\" L 0,\\\"+(-h/2)+\\\" z'/>\\\"; }else {var x=[0,0,0],y=[0,0,0],good; do { for (var i=0; i<3; i++) {x[i]=Math.floor(Math.random()*36)-18; y[i]=Math.floor(Math.random()*36)-18; } good=true; for (var i=0;i<3;i++) { if (d2(x[i],y[i],x[(i+1)%3],y[(i+1)%3])<100) { good=false; } else if (Math.abs(d2(x[i],y[i],x[(i+1)%3],y[(i+1)%3])-d2(x[i],y[i],x[(i+2)%3],y[(i+2)%3]))<400) { good=false; } } } while(!good); ret+=\\\"<path d='M \\\"+x[0]+\\\",\\\"+y[0]+\\\" L \\\"+x[1]+\\\",\\\"+y[1]+\\\" L  \\\"+x[2]+\\\",\\\"+y[2]+\\\" L \\\"+x[0]+\\\",\\\"+y[0]+\\\" z'/>\\\"; } ret+=\\\"</g></g></svg></div>\\\"; return [ret, a==0?1:0];}","class":"alpha blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"1em","width":"2.5em"},"values":[["OUI",1],["NON",0]]},"comment":"Le triangle est-il [red]isocèle[/red] ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>fs01</dct:alternative>
    </rdf:Description>

   <rdf:Description>
        <dct:identifier>ft51</dct:identifier>
        <dct:title xml:lang="fr-FR">Donner, sans contrainte de temps, le nombre de triangles parmi les cercles.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"gen":"function(){var nb=Math.floor(Math.random()*9),ret=\\\"<div style='width:2em;height:1em;margin-left:.1em;'><svg width='100%' height='100%' viewBox='0 0 192 96'><def><style>path,circle,rect {fill:none;stroke:black;stroke-width:1;} .wrong path,.wrong circle,.wrong rect {stroke:red;fill:red;fill-opacity:0.5;} .good path,.good circle,.good rect {stroke:green;fill:green;fill-opacity:0.5;}</style></def>\\\",aa=[]; for (var i=0;i<8;i++) { aa.push(Math.floor(Math.random()*3)); } var n=0; while(n!=nb){var a=Math.floor(Math.random()*8); if (aa[a]!=3) { aa[a]=3; n++; }}; for (var j=0; j<2; j++) for (var i=0; i<4; i++) { ret+=\\\"<g transform='translate(\\\"+(i*48+24)+\\\",\\\"+(j*48+24)+\\\")'>\\\"; var a=aa[i+j*4]; if (a!=3) { ret+=\\\"<circle x=0 y=0 r=\\\"+(Math.floor(Math.random()*12+10))+\\\"/>\\\"; } else { b=Math.floor(Math.random()*8)+10; c=Math.floor(Math.random()*8)+10; ret+=\\\"<path transform='rotate(\\\"+(Math.random()*360)+\\\")' d='M0,-\\\"+b+\\\" \\\"+c+\\\",7 -\\\"+c+\\\",7 0,-\\\"+b+\\\" z'/>\\\";  } ret+=\\\"</g>\\\"} ret+=\\\"</svg></div>\\\"; return [ret, nb];}","class":"alpha blank h12","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien y a-t-il de [red]triangles[/red] ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>ft52</dct:alternative>
    </rdf:Description>

   <rdf:Description>
        <dct:identifier>ft52</dct:identifier>
        <dct:title xml:lang="fr-FR">Donner, sans contrainte de temps, le nombre de triangles parmi cercles, carrés et rectangles.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"gen":"function(){var nb=Math.floor(Math.random()*9),ret=\\\"<div style='width:2em;height:1em;margin-left:.1em;'><svg width='100%' height='100%' viewBox='0 0 192 96'><def><style>path,circle,rect {fill:none;stroke:black;stroke-width:1;} .wrong path,.wrong circle,.wrong rect {stroke:red;fill:red;fill-opacity:0.5;} .good path,.good circle,.good rect {stroke:green;fill:green;fill-opacity:0.5;}</style></def>\\\",aa=[]; for (var i=0;i<8;i++) { aa.push(Math.floor(Math.random()*3)); } var n=0; while(n!=nb){var a=Math.floor(Math.random()*8); if (aa[a]!=3) { aa[a]=3; n++; }}; for (var j=0; j<2; j++) for (var i=0; i<4; i++) { ret+=\\\"<g transform='translate(\\\"+(i*48+24)+\\\",\\\"+(j*48+24)+\\\")'>\\\"; var a=aa[i+j*4]; if (a==0) { ret+=\\\"<circle x=0 y=0 r=\\\"+(Math.floor(Math.random()*12+10))+\\\"/>\\\"; } else if (a==1) { var b=Math.floor(Math.random()*10)+8; ret+=\\\"<rect transform='rotate(\\\"+(Math.random()*90)+\\\")' x=-\\\"+b+\\\" y=-\\\"+b+\\\" width=\\\"+(2*b)+\\\" height=\\\"+(2*b)+\\\"/>\\\"; } else if (a==2) { var b,c; do { b=Math.floor(Math.random()*7)+10; c=Math.floor(Math.random()*9)+5; } while(Math.abs(b-c)<5); ret+=\\\"<rect transform='rotate(\\\"+(Math.random()*90)+\\\")' x=-\\\"+b+\\\" y=-\\\"+c+\\\" width=\\\"+(2*b)+\\\" height=\\\"+(2*c)+\\\"/>\\\"; } else { b=Math.floor(Math.random()*8)+10; c=Math.floor(Math.random()*8)+10; ret+=\\\"<path transform='rotate(\\\"+(Math.random()*360)+\\\")' d='M0,-\\\"+b+\\\" \\\"+c+\\\",7 -\\\"+c+\\\",7 0,-\\\"+b+\\\" z'/>\\\";  } ret+=\\\"</g>\\\"} ret+=\\\"</svg></div>\\\"; return [ret, nb];}","class":"alpha blank h12","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien y a-t-il de [red]triangles[/red] ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>ft52</dct:alternative>
    </rdf:Description>


    <rdf:Description>
        <dct:identifier>fc01</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, les cercles.</dct:title>
        <dct:description><![CDATA["time":0,"template":"template2.html","gen":"function(){var a=Math.floor(Math.random()*2),ret=\\\"<div style='width:1em;height=1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path,circle,rect {fill:none;stroke:black;stroke-width:2;} .wrong path,.wrong circle,.wrong rect {stroke:red;fill:red;fill-opacity:0.5;} .good path,.good circle,.good rect {stroke:green;fill:green;fill-opacity:0.5;}</style></def><g transform='translate(24,24)'><g transform='rotate(\\\"+Math.floor(Math.random()*180)+\\\")'>\\\"; if (a==0) { ret+=\\\"<circle cx='0' cy='0' r='\\\"+(10+Math.floor(Math.random()*13))+\\\"'/>\\\"; } else { if (Math.floor(Math.random()*2)) { var b=14+Math.floor(Math.random()*23),c=14+Math.floor(Math.random()*23); ret+=\\\"<rect x='\\\"+(-b/2)+\\\"' y='\\\"+(-c/2)+\\\"' width='\\\"+b+\\\"' height='\\\"+c+\\\"'/>\\\"; } else { ret+=\\\"<path d='M 0,-20 L \\\"+(3+Math.floor(Math.random()*20))+\\\",\\\"+(-5+Math.floor(Math.random()*20))+\\\" L  \\\"+(-18+Math.floor(Math.random()*8))+\\\",\\\"+(-10+Math.floor(Math.random()*12))+\\\" L 0,-20 z'/>\\\"; }} ret+=\\\"</g></g></svg></div>\\\"; return [ret, a==0?1:0];}","class":"alpha blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"1em","width":"2.5em"},"values":[["OUI",1],["NON",0]]},"comment":"La figure proposée est-elle un [red]cercle[/red] ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>fs01</dct:alternative>
    </rdf:Description>


    <rdf:Description>
        <dct:identifier>fc11</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, rayons et diamètres.</dct:title>
        <dct:description><![CDATA["time":0,"template":"template2.html","gen":"function(){ret=\\\"<div style='width:1em;height=1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path{fill:none;stroke:red;stroke-width:1;}circle{fill:#08F;fill-opacity:0.2;stroke:black;stroke-width:0.5;}.wrong circle{stroke:red;fill:red;fill-opacity:0.5;} .good circle {stroke:green;fill:green;fill-opacity:0.5;}</style></def>\\\"; var e=Math.random()*2,r; if (e<1) { var a=Math.random()*2*Math.PI; ret+=\\\"<path d='M 24,24 L \\\"+(24+Math.cos(a)*22)+\\\",\\\"+(24+Math.sin(a)*22)+\\\"'/>\\\"; r='r';}else { var a=Math.random()*2*Math.PI; ret+=\\\"<path d='M \\\"+(24-Math.cos(a)*22)+\\\",\\\"+(24-Math.sin(a)*22)+\\\" L \\\"+(24+Math.cos(a)*22)+\\\",\\\"+(24+Math.sin(a)*22)+\\\"'/>\\\"; r='d';} ret+=\\\"<circle cx='24' cy='24' r='22'/></svg></div>\\\"; return [ret,r];}","class":"alpha blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"0.5em","width":"5em"},"values":[["Rayon","r"],["Diamètre","d"]]},"comment":"Quelle est la nature du [red]segment rouge[/red] ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>fc11</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>fc12</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, rayons, diamètres et cordes.</dct:title>
        <dct:description><![CDATA["time":0,"template":"template2.html","gen":"function(){ret=\\\"<div style='width:1em;height=1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path{fill:none;stroke:red;stroke-width:1;}circle{fill:#08F;fill-opacity:0.2;stroke:black;stroke-width:0.5;}.wrong circle{stroke:red;fill:red;fill-opacity:0.5;} .good circle {stroke:green;fill:green;fill-opacity:0.5;}</style></def>\\\"; var e=Math.random()*3,r; if (e<1) { var a=Math.random()*2*Math.PI; ret+=\\\"<path d='M 24,24 L \\\"+(24+Math.cos(a)*22)+\\\",\\\"+(24+Math.sin(a)*22)+\\\"'/>\\\"; r='r';}else if (e<2) { var a=Math.random()*2*Math.PI; ret+=\\\"<path d='M \\\"+(24-Math.cos(a)*22)+\\\",\\\"+(24-Math.sin(a)*22)+\\\" L \\\"+(24+Math.cos(a)*22)+\\\",\\\"+(24+Math.sin(a)*22)+\\\"'/>\\\"; r='d';}else { var a=Math.random()*2*Math.PI, b=a+(Math.PI*0.1+Math.random()*Math.PI*0.7); ret+=\\\"<path d='M \\\"+(24+Math.cos(b)*22)+\\\",\\\"+(24+Math.sin(b)*22)+\\\" L \\\"+(24+Math.cos(a)*22)+\\\",\\\"+(24+Math.sin(a)*22)+\\\"'/>\\\"; r='c';} ret+=\\\"<circle cx='24' cy='24' r='22'/></svg></div>\\\"; return [ret,r];}","class":"alpha blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"0.5em","width":"5em"},"values":[["Rayon","r"],["Diamètre","d"],["Corde","c"]]},"comment":"Quelle est la nature du [red]segment rouge[/red] ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>fc11</dct:alternative>
    </rdf:Description>



   <rdf:Description>
        <dct:identifier>fc52</dct:identifier>
        <dct:title xml:lang="fr-FR">Donner, sans contrainte de temps, le nombre de cercles parmi triangles, carrés et rectangles.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"gen":"function(){var nb=Math.floor(Math.random()*9),ret=\\\"<div style='width:2em;height:1em;margin-left:.1em;'><svg width='100%' height='100%' viewBox='0 0 192 96'><def><style>path,circle,rect {fill:none;stroke:black;stroke-width:1;} .wrong path,.wrong circle,.wrong rect {stroke:red;fill:red;fill-opacity:0.5;} .good path,.good circle,.good rect {stroke:green;fill:green;fill-opacity:0.5;}</style></def>\\\",aa=[]; for (var i=0;i<8;i++) { aa.push(Math.floor(Math.random()*3)); } var n=0; while(n!=nb){var a=Math.floor(Math.random()*8); if (aa[a]!=3) { aa[a]=3; n++; }}; for (var j=0; j<2; j++) for (var i=0; i<4; i++) { ret+=\\\"<g transform='translate(\\\"+(i*48+24)+\\\",\\\"+(j*48+24)+\\\")'>\\\"; var a=aa[i+j*4]; if (a==0) { b=Math.floor(Math.random()*8)+10; c=Math.floor(Math.random()*8)+10; ret+=\\\"<path transform='rotate(\\\"+(Math.random()*360)+\\\")' d='M0,-\\\"+b+\\\" \\\"+c+\\\",7 -\\\"+c+\\\",7 0,-\\\"+b+\\\" z'/>\\\";  } else if (a==1) { var b=Math.floor(Math.random()*10)+8; ret+=\\\"<rect transform='rotate(\\\"+(Math.random()*90)+\\\")' x=-\\\"+b+\\\" y=-\\\"+b+\\\" width=\\\"+(2*b)+\\\" height=\\\"+(2*b)+\\\"/>\\\"; } else if (a==2) { var b,c; do { b=Math.floor(Math.random()*7)+10; c=Math.floor(Math.random()*9)+5; } while(Math.abs(b-c)<5); ret+=\\\"<rect transform='rotate(\\\"+(Math.random()*90)+\\\")' x=-\\\"+b+\\\" y=-\\\"+c+\\\" width=\\\"+(2*b)+\\\" height=\\\"+(2*c)+\\\"/>\\\"; } else { ret+=\\\"<circle x=0 y=0 r=\\\"+(Math.floor(Math.random()*12+10))+\\\"/>\\\"; } ret+=\\\"</g>\\\"} ret+=\\\"</svg></div>\\\"; return [ret, nb];}","class":"alpha blank h12","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien y a-t-il de [red]cercles[/red] ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>ft52</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>fs01</dct:identifier>
        <dct:title xml:lang="fr-FR">Différencier, sans contrainte de temps, un carré d'un rectangle (sans rotation).</dct:title>
        <dct:description><![CDATA["time":0,"template":"template.html","gen":"function(){var a=Math.floor(Math.random()*2),w=5*(Math.floor(Math.random()*7)+1), h=w; if (a) { do { h=5*(Math.floor(Math.random()*7)+1); } while(h==w); } var ret=\\\"<div style='width:1em;height=1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:none;stroke:black;stroke-width:2;}.wrong rect {stroke:red;fill:red;fill-opacity:0.5;}.good rect {stroke:green;fill:green;fill-opacity:0.5;}</style></def><g transform='translate(24,24)'><g transform='rotate(0)'><rect x='\\\"+(-w/2)+\\\"' y='\\\"+(-h/2)+\\\"' width='\\\"+w+\\\"' height='\\\"+h+\\\"'/></g></g></svg></div>\\\"; return [ret, a];}","class":"alpha blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"2.5em","width":"6.0em"},"values":[["Carré",0],["Rectangle",1]]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>fs01</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>fs02</dct:identifier>
        <dct:title xml:lang="fr-FR">Différencier, sans contrainte de temps, un carré d'un rectangle (avec rotation).</dct:title>
        <dct:description><![CDATA["time":0,"template":"template.html","gen":"function(){var a=Math.floor(Math.random()*2),w=5*(Math.floor(Math.random()*6)+1), h=w; if (a) { do { h=5*(Math.floor(Math.random()*6)+1); } while(h==w); } var ret=\\\"<div style='width:1em;height=1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:none;stroke:black;stroke-width:2;}.wrong rect {stroke:red;fill:red;fill-opacity:0.5;}.good rect {stroke:green;fill:green;fill-opacity:0.5;}</style></def><g transform='translate(24,24)'><g transform='rotate(\\\"+Math.floor(Math.random()*90)+\\\")'><rect x='\\\"+(-w/2)+\\\"' y='\\\"+(-h/2)+\\\"' width='\\\"+w+\\\"' height='\\\"+h+\\\"'/></g></g></svg></div>\\\"; return [ret, a];}","class":"alpha blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"2.5em","width":"6.0em"},"values":[["Carré",0],["Rectangle",1]]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>fs01</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>fs03</dct:identifier>
        <dct:title xml:lang="fr-FR">Différencier, sans contrainte de temps, un quadrilatère concave d'un quadrilatère convexe.</dct:title>
        <dct:description><![CDATA["time":0,"template":"template.html","gen":"function(){var a=Math.floor(Math.random()*2),x1=30+Math.random()*10,x2=10+Math.random()*10,x3; if (a) { x3=x2+5+Math.random()*(x1-x2-5);} else { x3=8+Math.random()*(x2-14); } var ret=\\\"<div style='width:1em;height=1em;margin-left:.5em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>path {fill:none;stroke:black;stroke-width:2;}.wrong path {stroke:red;fill:red;fill-opacity:0.5;}.good path {stroke:green;fill:green;fill-opacity:0.5;}</style></def><g transform='translate(24,24)'><g transform='rotate(\\\"+Math.floor(Math.random()*90)+\\\")'><path d='M \\\"+(x1-24)+\\\",-8 L \\\"+(x3-24)+\\\",\\\"+(-16+Math.random()*4)+\\\" L \\\"+(x2-24)+\\\",\\\"+(-8+Math.random()*16)+\\\" L \\\"+(x3-24)+\\\",\\\"+(12+Math.random()*4)+\\\" L \\\"+(x1-24)+\\\",-8 z'/></g></g></svg></div>\\\"; return [ret, a];}","class":"alpha blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"2.5em","width":"6.0em"},"values":[["Concave",0],["Convexe",1]]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>fs01</dct:alternative>
    </rdf:Description>


   <rdf:Description>
        <dct:identifier>fs51</dct:identifier>
        <dct:title xml:lang="fr-FR">Donner, sans contrainte de temps, le nombre de carrés parmi les cercles et les triangles.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"gen":"function(){var nb=Math.floor(Math.random()*9),ret=\\\"<div style='width:2em;height:1em;margin-left:.1em;'><svg width='100%' height='100%' viewBox='0 0 192 96'><def><style>path,circle,rect {fill:none;stroke:black;stroke-width:1;} .wrong path,.wrong circle,.wrong rect {stroke:red;fill:red;fill-opacity:0.5;} .good path,.good circle,.good rect {stroke:green;fill:green;fill-opacity:0.5;}</style></def>\\\",aa=[]; for (var i=0;i<8;i++) { aa.push(Math.floor(Math.random()*2)); } var n=0; while(n!=nb){var a=Math.floor(Math.random()*8); if (aa[a]!=2) { aa[a]=2; n++; }}; for (var j=0; j<2; j++) for (var i=0; i<4; i++) { ret+=\\\"<g transform='translate(\\\"+(i*48+24)+\\\",\\\"+(j*48+24)+\\\")'>\\\"; var a=aa[i+j*4]; if (a==0) { ret+=\\\"<circle x=0 y=0 r=\\\"+(Math.floor(Math.random()*12+10))+\\\"/>\\\"; } else if (a==1) { b=Math.floor(Math.random()*8)+10; c=Math.floor(Math.random()*8)+10; ret+=\\\"<path transform='rotate(\\\"+(Math.random()*360)+\\\")' d='M0,-\\\"+b+\\\" \\\"+c+\\\",7 -\\\"+c+\\\",7 0,-\\\"+b+\\\" z'/>\\\"; } else { var b=Math.floor(Math.random()*10)+8; ret+=\\\"<rect transform='rotate(\\\"+(Math.random()*90)+\\\")' x=-\\\"+b+\\\" y=-\\\"+b+\\\" width=\\\"+(2*b)+\\\" height=\\\"+(2*b)+\\\"/>\\\"; } ret+=\\\"</g>\\\"} ret+=\\\"</svg></div>\\\"; return [ret, nb];}","class":"alpha blank h12","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien y a-t-il de [red]carrés[/red] ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>ft52</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>fs52</dct:identifier>
        <dct:title xml:lang="fr-FR">Donner, sans contrainte de temps, le nombre de carrés parmi les cercles, les triangles et les rectangles.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"gen":"function(){var nb=Math.floor(Math.random()*9),ret=\\\"<div style='width:2em;height:1em;margin-left:.1em;'><svg width='100%' height='100%' viewBox='0 0 192 96'><def><style>path,circle,rect {fill:none;stroke:black;stroke-width:1;} .wrong path,.wrong circle,.wrong rect {stroke:red;fill:red;fill-opacity:0.5;} .good path,.good circle,.good rect {stroke:green;fill:green;fill-opacity:0.5;}</style></def>\\\",aa=[]; for (var i=0;i<8;i++) { aa.push(Math.floor(Math.random()*3)); } var n=0; while(n!=nb){var a=Math.floor(Math.random()*8); if (aa[a]!=3) { aa[a]=3; n++; }}; for (var j=0; j<2; j++) for (var i=0; i<4; i++) { ret+=\\\"<g transform='translate(\\\"+(i*48+24)+\\\",\\\"+(j*48+24)+\\\")'>\\\"; var a=aa[i+j*4]; if (a==0) { ret+=\\\"<circle x=0 y=0 r=\\\"+(Math.floor(Math.random()*12+10))+\\\"/>\\\"; } else if (a==1) { b=Math.floor(Math.random()*8)+10; c=Math.floor(Math.random()*8)+10; ret+=\\\"<path transform='rotate(\\\"+(Math.random()*360)+\\\")' d='M0,-\\\"+b+\\\" \\\"+c+\\\",7 -\\\"+c+\\\",7 0,-\\\"+b+\\\" z'/>\\\"; } else if (a==2) { var b,c; do { b=Math.floor(Math.random()*7)+10; c=Math.floor(Math.random()*9)+5; } while(Math.abs(b-c)<5); ret+=\\\"<rect transform='rotate(\\\"+(Math.random()*90)+\\\")' x=-\\\"+b+\\\" y=-\\\"+c+\\\" width=\\\"+(2*b)+\\\" height=\\\"+(2*c)+\\\"/>\\\";} else { var b=Math.floor(Math.random()*10)+8; ret+=\\\"<rect transform='rotate(\\\"+(Math.random()*90)+\\\")' x=-\\\"+b+\\\" y=-\\\"+b+\\\" width=\\\"+(2*b)+\\\" height=\\\"+(2*b)+\\\"/>\\\"; } ret+=\\\"</g>\\\"} ret+=\\\"</svg></div>\\\"; return [ret, nb];}","class":"alpha blank h12","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien y a-t-il de [red]carrés[/red] ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>ft52</dct:alternative>
    </rdf:Description>

   <rdf:Description>
        <dct:identifier>fs61</dct:identifier>
        <dct:title xml:lang="fr-FR">Donner, sans contrainte de temps, le nombre de rectangles parmi les cercles et les triangles.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"gen":"function(){var nb=Math.floor(Math.random()*9),ret=\\\"<div style='width:2em;height:1em;margin-left:.1em;'><svg width='100%' height='100%' viewBox='0 0 192 96'><def><style>path,circle,rect {fill:none;stroke:black;stroke-width:1;} .wrong path,.wrong circle,.wrong rect {stroke:red;fill:red;fill-opacity:0.5;} .good path,.good circle,.good rect {stroke:green;fill:green;fill-opacity:0.5;}</style></def>\\\",aa=[]; for (var i=0;i<8;i++) { aa.push(Math.floor(Math.random()*2)); } var n=0; while(n!=nb){var a=Math.floor(Math.random()*8); if (aa[a]!=2) { aa[a]=2; n++; }}; for (var j=0; j<2; j++) for (var i=0; i<4; i++) { ret+=\\\"<g transform='translate(\\\"+(i*48+24)+\\\",\\\"+(j*48+24)+\\\")'>\\\"; var a=aa[i+j*4]; if (a==0) { ret+=\\\"<circle x=0 y=0 r=\\\"+(Math.floor(Math.random()*12+10))+\\\"/>\\\"; } else if (a==1) { b=Math.floor(Math.random()*8)+10; c=Math.floor(Math.random()*8)+10; ret+=\\\"<path transform='rotate(\\\"+(Math.random()*360)+\\\")' d='M0,-\\\"+b+\\\" \\\"+c+\\\",7 -\\\"+c+\\\",7 0,-\\\"+b+\\\" z'/>\\\"; } else { var b,c; do { b=Math.floor(Math.random()*7)+10; c=Math.floor(Math.random()*9)+5; } while(Math.abs(b-c)<5); ret+=\\\"<rect transform='rotate(\\\"+(Math.random()*90)+\\\")' x=-\\\"+b+\\\" y=-\\\"+c+\\\" width=\\\"+(2*b)+\\\" height=\\\"+(2*c)+\\\"/>\\\"; } ret+=\\\"</g>\\\"} ret+=\\\"</svg></div>\\\"; return [ret, nb];}","class":"alpha blank h12","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien y a-t-il de [red]rectangles[/red] ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>ft52</dct:alternative>
    </rdf:Description>


    <!-- LINES, SEGMENT, LENGTH -->

    <rdf:Description>
        <dct:identifier>l01</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter, sans contrainte de temps, le nombre de traits de même longueur parmi 5 traits.</dct:title>
        <dct:description><![CDATA["time":0,"template":"keypad.html","number":15,"gen":"function(){var r=0,n=5,pos=Math.floor(Math.random()*n),l=Math.floor(Math.random()*20)+24, ret=\\\"<div style='width:1em;height=1em;margin:0.05em;'><svg width='90%' height='90%' viewBox='0 0 48 48'><def><style>rect {fill:cyan;fill-opacity:0.2;stroke:black;stroke-width:0.5;}.wrong rect {stroke:red;fill:red;fill-opacity:0.5;}.good rect {stroke:green;fill:green;fill-opacity:0.5;}line {stroke:black;stroke-width:1;}</style></def><rect x='0' y='0' width='48' height='48'/>\\\"; for (var i=0; i<n;i++) { var x1,x2,y=(6+i*(36/(n-1))),c=Math.random(),style=\\\"\\\"; if (i==pos) { style=\\\" style='stroke:#800;'\\\"; } if ((i==pos)||(c<0.5)) { x1=(48-l)/2; x2=x1+l;r++;} else { var l2; do { l2=Math.floor(Math.random()*20)+24; } while (Math.abs(l-l2)<10); if (Math.random()<0.5) { x1=(48-l)/2; x2=x1+l2; } else { x2=(48+l)/2;x1=x2-l2;} if (x1<0 || x2>48) { x1=(48-l2)/2; x2=x1+l2; } } ret+=\\\"<line x1='\\\"+x1+\\\"' y1='\\\"+y+\\\"' x2='\\\"+x2+\\\"' y2='\\\"+y+\\\"'\\\"+style+\\\"/>\\\"; } ret+=\\\"</svg></div>\\\"; return [ret, r-1];}","class":"alpha blank","font":5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"speed":1000},"comment":"Combien de traits sont de [b]même longueur[/b] que le [red]trait rouge[/red] ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>l02</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>l02</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter, sans contrainte de temps, le nombre de traits de même longueur parmi 10 traits.</dct:title>
        <dct:description><![CDATA["time":0,"template":"keypad.html","number":10,"gen":"function(){var r=0,n=10,pos=Math.floor(Math.random()*n),l=Math.floor(Math.random()*20)+24, ret=\\\"<div style='width:1em;height=1em;margin:0.05em;'><svg width='90%' height='90%' viewBox='0 0 48 48'><def><style>rect {fill:cyan;fill-opacity:0.2;stroke:black;stroke-width:0.5;}.wrong rect {stroke:red;fill:red;fill-opacity:0.5;}.good rect {stroke:green;fill:green;fill-opacity:0.5;}line {stroke:black;stroke-width:0.5;}</style></def><rect x='0' y='0' width='48' height='48'/>\\\"; for (var i=0; i<n;i++) { var x1,x2,y=(6+i*(36/(n-1))),c=Math.random(),style=\\\"\\\"; if (i==pos) { style=\\\" style='stroke:#800;'\\\"; } if ((i==pos)||(c<0.3)) { x1=(48-l)/2; x2=x1+l;r++;} else { var l2; do { l2=Math.floor(Math.random()*20)+24; } while (Math.abs(l-l2)<10); if (Math.random()<0.5) { x1=(48-l)/2; x2=x1+l2; } else { x2=(48+l)/2;x1=x2-l2;} if (x1<0 || x2>48) { x1=(48-l2)/2; x2=x1+l2; } } ret+=\\\"<line x1='\\\"+x1+\\\"' y1='\\\"+y+\\\"' x2='\\\"+x2+\\\"' y2='\\\"+y+\\\"'\\\"+style+\\\"/>\\\"; } ret+=\\\"</svg></div>\\\"; return [ret, r-1];}","class":"alpha blank","font":5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"speed":1000},"comment":"Combien de traits sont de [b]même longueur[/b] que le [red]trait rouge[/red] ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>l02</dct:alternative>
    </rdf:Description>


   <rdf:Description>
        <dct:identifier>l51</dct:identifier>
        <dct:title xml:lang="fr-FR">Donner, sans contrainte de temps, le nombre de traits composant les différentes figures.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"gen":"function(){var val=[[4,'M -16.4,-16.4 12,-12 16.4,16.4 -16.4,15 z'],[4,'M -11,-8 13,-12 8,12 -16,15 z'],[4,'M -4,-16.1 5.8,-12.1 5.8,16.1 -8,16.1 z'],[3,'M -16,14.4 -0.5,-16.4 16.1,13 z'],[5,'M 1.8,14.8 -15.4,4 l 7.5,-20.4 20,0 4.2,16.2 z'],[1,'M -16.4,-10 16.2,3.8'],[2,'M 0,-24 0,0 10,5'],[2,'M 0,-24 0,0 -22,0'],[2,'M -12,-24 -11,20 M 12,-24 10,22'],[3,'M 0,-24 0,0 -20,5 M 12,12 0,0'],[3,'M -10,-20 -5,12 M 0,-16 -2,15 M 8,-16 11,20'],[4,'M 0,-24 0,0 -20,5 M 12,12 0,0 10,-15'],[5,'M 0,-24 0,0 -20,5 M 12,12 0,0 10,-15 M -12,7 0,0']],ret=\\\"<div style='width:1em;height:1em;margin-left:0.2em;'><svg width='100%' height='100%' viewBox='0 0 52 52'><def><style>path {fill:none;stroke:black;stroke-width:1;}</style></def><g transform='translate(26,26)'>\\\",a=Math.floor(Math.random()*val.length); ret+=\\\"<path transform='rotate(\\\"+Math.random()*360+\\\")' d='\\\"+val[a][1]+\\\"'/></g></svg></div>\\\"; return [ret, val[a][0]];}","class":"alpha blank neg","font":5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de [red]traits[/red] composent chaque figure ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>l51</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>ls10</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, la longueur d'un trait comprise entre 1 et 10</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"input":{"digit":1,"speed":1000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg width='100%' height='100%' viewBox='0 0 100 20'><path d='M 20 10 100 10' style='fill:none;stroke:black;stroke-width:0.2'/>\\\",nb=10,max=5,a=[-1,-1,-1,-1],b=['A','B','C','D']; for (var i=0; i<a.length; i++) { do { a[i]=Math.floor(Math.random()*nb); } while (a[i]==a[(i+1)%a.length] || a[i]==a[(i+2)%a.length] || a[i]==a[(i+3)%a.length]); b.sort(function(a,b) { return 0.5-Math.random(); }); }for (var i=0; i<nb; i++) { ret+=\\\"<circle cx='\\\"+(20+(40/nb)+(i*80/nb))+\\\"' cy='10' r='0.8'/>\\\"; } for (var i=0; i<a.length;i++) { ret+=\\\"<text style='font-size:5px;' transform='translate(\\\"+(18+(40/nb)+(a[i]*80/nb))+\\\",8)'>\\\"+b[i]+\\\"</text>\\\"; } ret+=\\\"<text style='font-size:7px;' transform='translate(2,11)'>[\\\"+b[0]+b[1]+\\\"]</text>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, Math.abs(a[0]-a[1])];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle est la [red]longueur du trait[/red] ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>ls10</dct:alternative>
    </rdf:Description>


    <rdf:Description>
        <dct:identifier>li01</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, les segments et les droites.</dct:title>
        <dct:description><![CDATA["time":0,"template":"template2.html","gen":"function(){var data=[[[-4,21,107,6],[70,-7,48,64],[-5,35,112,47],[43.5,14.5,55,41],[26,17,33,39]],[[12,-8,21,69],[83,-30,33,67],[-12,6,142,48],[83.5,32,78,10],[48.3,37.4,68.3,27.9],[15.8,25,45.5,42.6],[29.4,33,30.9,17.6]],[[117,20,-10,50],[120,10,-30,14],[10,-14,90,91],[79.5,11.1,77.3,29.4],[78.4,19.6,37.9,22.7]]]; ret=\\\"<div style='width:1.8em;height:0.9em;margin:.05em;'><svg width='100%' height='100%' viewBox='0 0 100 50'>\\\",a=Math.floor(Math.random()*data.length),b=data[a].length-1,v=0; for (var i=0; i<5; i++) { data[a].sort(function(){return 0.5-Math.random();}); } for (var i in data[a]) { var nb=0; for (var j=0; j<2; j++) { if (data[a][i][j*2]<100 && data[a][i][j*2]>0 && data[a][i][j*2+1]<50 && data[a][i][j*2+1]>0) { nb++; ret+=\\\"<circle cx='\\\"+data[a][i][j*2]+\\\"' cy='\\\"+data[a][i][j*2+1]+\\\"' r='0.8' style='fill:\\\"+(i==b?\\\"red\\\":\\\"black\\\")+\\\"'/>\\\"; } if (i==b) { v=nb; } } ret+=\\\"<path d='M\\\"+data[a][i][0]+\\\",\\\"+data[a][i][1]+\\\" \\\"+data[a][i][2]+\\\",\\\"+data[a][i][3]+\\\"' style='fill:none;stroke:\\\"+(i==b?\\\"red\\\":\\\"black\\\")+\\\";stroke-width:0.5;'/>\\\";} ret+=\\\"<path d='M 0 0 100 0 100 50 0 50 0 0 z' style='fill:none;stroke:black;stroke-width:1'/></svg></div>\\\"; return [ret, v];}","class":"neg alpha","font":3.2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"0.5em","width":"5.2em","height":"1.2em"}, "values":[["Droite",0],["Segment",2]]},"comment":"Quelle est la nature de la ligne en [red]rouge[/red] ?[br][small](Les lignes qui touchent le cadre de l'image se prolongent à l'infini)[/small]"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>li01</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>li02</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, les segments, les droites et les demi-droites.</dct:title>
        <dct:description><![CDATA["time":0,"template":"template2.html","gen":"function(){var data=[[[26,17,107,6],[70,-7,48,64],[-5,35,112,47],[43.5,14.5,55,41],[26,17,33,39]],[[22,-3,42,59],[31,25,55.4,9.6],[53,4,66.5,35.8],[-4,43,104,32],[85,-7,79.3,34.5],[61,23,81.8,16.1],[33.3,32,-17,13]],[[19.2,14.1,29.2,35.2],[96,68,11,-6],[-5,46,50.5,28.4],[60.5,37.1,59.6,9.8],[-9,17,106,5],[60,23,104,29.7],[72,34,92,41],[40.2,31.7,43.5,41.4],[12,53,50,39]]]; ret=\\\"<div style='width:1.8em;height:0.9em;margin:.05em;'><svg width='100%' height='100%' viewBox='0 0 100 50'>\\\",a=Math.floor(Math.random()*data.length),b=data[a].length-1,v=0; for (var i=0; i<5; i++) { data[a].sort(function(){return 0.5-Math.random();}); } for (var i in data[a]) { var nb=0; for (var j=0; j<2; j++) { if (data[a][i][j*2]<100 && data[a][i][j*2]>0 && data[a][i][j*2+1]<50 && data[a][i][j*2+1]>0) { nb++; ret+=\\\"<circle cx='\\\"+data[a][i][j*2]+\\\"' cy='\\\"+data[a][i][j*2+1]+\\\"' r='0.8' style='fill:\\\"+(i==b?\\\"red\\\":\\\"black\\\")+\\\"'/>\\\"; } if (i==b) { v=nb; } } ret+=\\\"<path d='M\\\"+data[a][i][0]+\\\",\\\"+data[a][i][1]+\\\" \\\"+data[a][i][2]+\\\",\\\"+data[a][i][3]+\\\"' style='fill:none;stroke:\\\"+(i==b?\\\"red\\\":\\\"black\\\")+\\\";stroke-width:0.5;'/>\\\";} ret+=\\\"<path d='M 0 0 100 0 100 50 0 50 0 0 z' style='fill:none;stroke:black;stroke-width:1'/></svg></div>\\\"; return [ret, v];}","class":"neg alpha","font":3.2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"0.5em","width":"5.2em","height":"1.2em"}, "values":[["Droite",0],["Demi-droite",1],["Segment",2]]},"comment":"Quelle est la nature de la ligne en [red]rouge[/red] ?[br][small](Les lignes qui touchent le cadre de l'image se prolongent à l'infini)[/small]"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>li01</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>lp01</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, deux droites parallèles.</dct:title>
        <dct:description><![CDATA["time":0,"template":"template.html","gen":"function(){var a=Math.random()*Math.PI,ax=Math.random()*20+62,ay=Math.random()*20+14,r=Math.floor(Math.random()*2),b=a,bx=Math.random()*20+62,by=Math.random()*20+14; if (r) { do { by=Math.random()*20+14; bx=Math.random()*20+62; } while(Math.abs(by-ay)<5 || Math.abs(bx-ax)<5); } else { do { b=Math.random()*Math.PI; }while(Math.abs(b-a)<Math.PI/10); } var ret=\\\"<div style='width:3em;height=1em;margin-left:.2em;'><svg width='100%' height='100%' viewBox='0 0 144 48'><def><style>rect {fill-opacity:0;stroke:black;stroke-width:0.5;}.wrong rect {stroke:red;fill:red;fill-opacity:0.5;}.good rect {stroke:green;fill:green;fill-opacity:0.5;}line {stroke:black;stroke-width:1;}</style></def><line x1='\\\"+(ax+200*Math.cos(a))+\\\"' y1='\\\"+(ay+200*Math.sin(a))+\\\"' x2='\\\"+(ax-200*Math.cos(a))+\\\"' y2='\\\"+(ay-200*Math.sin(a))+\\\"'/><line x1='\\\"+(bx+200*Math.cos(b))+\\\"' y1='\\\"+(by+200*Math.sin(b))+\\\"' x2='\\\"+(bx-200*Math.cos(b))+\\\"' y2='\\\"+(by-200*Math.sin(b))+\\\"'/><rect x='0' y='0' width='144' height='48'/></svg></div>\\\"; return [ret, r];}","class":"alpha p02 blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"5em","width":"3em"},"values":[["OUI",1],["NON",0]]},"comment":"Les deux droites sont-elles <b>parallèles</b> ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>lp01</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>lp51</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, deux droites prependiculaires.</dct:title>
        <dct:description><![CDATA["time":0,"template":"template.html","gen":"function(){var a=Math.random()*Math.PI,ax=Math.random()*20+62,ay=Math.random()*20+14,r=Math.floor(Math.random()*2),b=(a+Math.PI/2)%Math.PI,bx=Math.random()*20+62,by=Math.random()*20+14; if (!r) { do { b=Math.random()*Math.PI; }while(Math.abs(b-a)>Math.PI/3); } var ret=\\\"<div style='width:3em;height=1em;margin-left:.2em;'><svg width='100%' height='100%' viewBox='0 0 144 48'><def><style>rect {fill-opacity:0;stroke:black;stroke-width:0.5;}.wrong rect {stroke:red;fill:red;fill-opacity:0.5;}.good rect {stroke:green;fill:green;fill-opacity:0.5;}line {stroke:black;stroke-width:1;}</style></def><line x1='\\\"+(ax+200*Math.cos(a))+\\\"' y1='\\\"+(ay+200*Math.sin(a))+\\\"' x2='\\\"+(ax-200*Math.cos(a))+\\\"' y2='\\\"+(ay-200*Math.sin(a))+\\\"'/><line x1='\\\"+(bx+200*Math.cos(b))+\\\"' y1='\\\"+(by+200*Math.sin(b))+\\\"' x2='\\\"+(bx-200*Math.cos(b))+\\\"' y2='\\\"+(by-200*Math.sin(b))+\\\"'/><rect x='0' y='0' width='144' height='48'/></svg></div>\\\"; return [ret, r];}","class":"alpha p02 blank","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"digit":1,"css":{"font-size":"5em","width":"3em"},"values":[["OUI",1],["NON",0]]},"comment":"Les deux droites sont-elles <b>perpendiculaires</b> ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>geometry</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>lp01</dct:alternative>
    </rdf:Description>
</rdf:RDF>
