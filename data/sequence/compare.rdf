<?xml version="1.0"?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:dct="http://purl.org/dc/terms/">

    <!-- round -->    
         
    <rdf:Description>
         <dct:identifier>r1</dct:identifier>
         <dct:title xml:lang="fr-FR">Différencier, sans contrainte de temps, la taille de 2 disques.</dct:title>
         <dct:description><![CDATA["time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["=","&ne;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var eq=(Math.floor(Math.random()*2.2)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>circle {fill:#08F;stroke:white;stroke-width:1;}.wrong circle {fill:red;}.good circle {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*5)+1,val2=eq?val1:Math.floor(Math.random()*5)+1;ret+=\\\"<circle cx='24' cy='24' r='\\\"+Math.floor(23*val1/5)+\\\"'/>\\\"; ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>circle {fill:#08F;stroke:white;stroke-width:1;}.wrong circle {fill:red;}.good circle {fill:green;}</style></def>\\\"; ret+=\\\"<circle cx='24' cy='24' r='\\\"+Math.floor(23*val2/5)+\\\"'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':'&ne;'];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Comparez[/b] les 2 ronds.","[b]=[/b] pour [b]égal[/b] et [b]&ne;[/b] pour [b]différent[/b]"],"fontex":1.4]]></dct:description>
         <dct:extent>1</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>2</dct:type>
         <dct:alternative>r1</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>
         
    <rdf:Description>
         <dct:identifier>r2</dct:identifier>
         <dct:title xml:lang="fr-FR">Différencier, sans contrainte de temps, la taille de 2 disques (sans égalité).</dct:title>
         <dct:description><![CDATA["time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>circle {fill:#08F;stroke:white;stroke-width:1;}.wrong circle {fill:red;}.good circle {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*5)+1,val2; do { val2=Math.floor(Math.random()*5)+1; } while(val1==val2);ret+=\\\"<circle cx='24' cy='24' r='\\\"+Math.floor(23*val1/5)+\\\"'/><text transform='translate(24,26)' style='font-size:8px;fill:white;font-weight:bold;text-anchor:middle;'>A</text>\\\"; ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>circle {fill:#08F;stroke:white;stroke-width:1;}.wrong circle {fill:red;}.good circle {fill:green;}</style></def>\\\"; ret+=\\\"<circle cx='24' cy='24' r='\\\"+Math.floor(23*val2/5)+\\\"'/><text transform='translate(24,26)' style='font-size:8px;fill:white;font-weight:bold;text-anchor:middle;'>B</text>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':(val1<val2?'&lt;':'&gt;')];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Comparez[/b] les 2 ronds.","[b]A&lt;B[/b] se dit '[red]A est plus petit que B[/red]'.","[b]A&gt;B[/b] se dit '[red]A est plus grand que B[/red]'."],"fontex":1.4]]></dct:description>
         <dct:extent>1</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>2</dct:type>
         <dct:alternative>r1</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>
         
    <rdf:Description>
         <dct:identifier>r3</dct:identifier>
         <dct:title xml:lang="fr-FR">Différencier, sans contrainte de temps, la taille de 2 disques (avec égalité possible).</dct:title>
         <dct:description><![CDATA["time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var eq=(Math.floor(Math.random()*3.3)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>circle {fill:#08F;stroke:white;stroke-width:1;}.wrong circle {fill:red;}.good circle {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*5)+1,val2=eq?val1:Math.floor(Math.random()*5)+1; ret+=\\\"<circle cx='24' cy='24' r='\\\"+Math.floor(23*val1/5)+\\\"'/>\\\"; ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>circle {fill:#08F;stroke:white;stroke-width:1;}.wrong circle {fill:red;}.good circle {fill:green;}</style></def>\\\"; ret+=\\\"<circle cx='24' cy='24' r='\\\"+Math.floor(23*val2/5)+\\\"'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':(val1<val2?'&lt;':'&gt;')];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Comparez[/b] les 2 ronds."],"fontex":1.4]]></dct:description>
         <dct:extent>1</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>2</dct:type>
         <dct:alternative>r1</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>
         
    <rdf:Description>
         <dct:identifier>r4</dct:identifier>
         <dct:title xml:lang="fr-FR">Différencier, sans contrainte de temps, la taille de 2 disques (avec égalité possible et légende numérique).</dct:title>
         <dct:description><![CDATA["time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var eq=(Math.floor(Math.random()*3.3)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>circle {fill:#08F;stroke:white;stroke-width:1;}.wrong circle {fill:red;}.good circle {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*5)+1,val2=eq?val1:Math.floor(Math.random()*5)+1; ret+=\\\"<circle cx='24' cy='24' r='\\\"+Math.floor(23*val1/5)+\\\"'/><text transform='translate(24,26)' style='font-size:8px;fill:white;font-weight:bold;text-anchor:middle;'>\\\"+val1+\\\"</text>\\\"; ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>circle {fill:#08F;stroke:white;stroke-width:1;}.wrong circle {fill:red;}.good circle {fill:green;}</style></def>\\\"; ret+=\\\"<circle cx='24' cy='24' r='\\\"+Math.floor(23*val2/5)+\\\"'/><text transform='translate(24,26)' style='font-size:8px;fill:white;font-weight:bold;text-anchor:middle;'>\\\"+val2+\\\"</text>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':(val1<val2?'&lt;':'&gt;')];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Comparez[/b] les 2 ronds."],"fontex":1.4]]></dct:description>
         <dct:extent>1</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>2</dct:type>
         <dct:alternative>r1</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>
         
    <!-- Stack -->

    <rdf:Description>
         <dct:identifier>s1</dct:identifier>
         <dct:title xml:lang="fr-FR">Différencier, sans contrainte de temps, la hauteur de 2 rectangles.</dct:title>
         <dct:description><![CDATA["time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["=","&ne;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var eq=(Math.floor(Math.random()*2.2)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*5)+1,val2=eq?val1:Math.floor(Math.random()*5)+1;ret+=\\\"<rect x='1' y='\\\"+Math.floor(1+18*(5-val1)/5)+\\\"' width='46' height='\\\"+Math.floor(46*val1/5)+\\\"'/>\\\"; ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; ret+=\\\"<rect x='1' y='\\\"+Math.floor(1+18*(5-val2)/5)+\\\"' width='46' height='\\\"+Math.floor(46*val2/5)+\\\"'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':'&ne;'];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Comparez[/b] la [red]hauteur[/red] des rectangles.","[b]=[/b] pour [b]égal[/b] et [b]&ne;[/b] pour [b]différent[/b]"],"fontex":1.3]]></dct:description>
         <dct:extent>1</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>2</dct:type>
         <dct:alternative>s1</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s2</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, la hauteur de 2 rectangles (sans égalité).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*5)+1,val2; do { val2=Math.floor(Math.random()*5)+1; } while(val1==val2); ret+=\\\"<rect x='1' y='\\\"+Math.floor(1+18*(5-val1)/5)+\\\"' width='46' height='\\\"+Math.floor(46*val1/5)+\\\"'/><text transform='translate(24,22)' style='font-size:8px;fill:white;font-weight:bold;text-anchor:middle;'>A</text>\\\"; ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; ret+=\\\"<rect x='1' y='\\\"+Math.floor(1+18*(5-val2)/5)+\\\"' width='46' height='\\\"+Math.floor(46*val2/5)+\\\"'/><text transform='translate(24,22)' style='font-size:8px;fill:white;font-weight:bold;text-anchor:middle;'>B</text>\\\"; ret+=\\\"</svg></div>\\\"; return [ret,  val1==val2?'=':(val1<val2?'&lt;':'&gt;')];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["[b]Comparez[/b] la [red]hauteur[/red] des rectangles.","[b]A&lt;B[/b] se dit '[red]A est plus petit que B[/red]'.","[b]A&gt;B[/b] se dit '[red]A est plus grand que B[/red]'."],"fontex":1.3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>s1</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s3</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, la hauteur de 2 rectangles (avec égalité possible).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var eq=(Math.floor(Math.random()*3.3)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*5)+1,val2=eq?val1:Math.floor(Math.random()*5)+1;ret+=\\\"<rect x='1' y='\\\"+Math.floor(1+18*(5-val1)/5)+\\\"' width='46' height='\\\"+Math.floor(46*val1/5)+\\\"'/>\\\"; ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; ret+=\\\"<rect x='1' y='\\\"+Math.floor(1+18*(5-val2)/5)+\\\"' width='46' height='\\\"+Math.floor(46*val2/5)+\\\"'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret,  val1==val2?'=':(val1<val2?'&lt;':'&gt;')];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Comparez[/b] la [red]hauteur[/red] des rectangles.","fontex":1.3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>s1</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>se3a</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, la hauteur de 2 rectangles (avec égalité possible).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&#8804;","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var eq=(Math.floor(Math.random()*3.3)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*5)+1,val2=eq?val1:Math.floor(Math.random()*5)+1;ret+=\\\"<rect x='1' y='\\\"+Math.floor(1+18*(5-val1)/5)+\\\"' width='46' height='\\\"+Math.floor(46*val1/5)+\\\"'/>\\\"; ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; ret+=\\\"<rect x='1' y='\\\"+Math.floor(1+18*(5-val2)/5)+\\\"' width='46' height='\\\"+Math.floor(46*val2/5)+\\\"'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val1<=val2?'&#8804;':'&gt;'];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Comparez[/b] la [red]hauteur[/red] des rectangles.","fontex":1.3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>s1</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>se3b</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, la hauteur de 2 rectangles (avec égalité possible).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","&#8805;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var eq=(Math.floor(Math.random()*3.3)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*5)+1,val2=eq?val1:Math.floor(Math.random()*5)+1;ret+=\\\"<rect x='1' y='\\\"+Math.floor(1+18*(5-val1)/5)+\\\"' width='46' height='\\\"+Math.floor(46*val1/5)+\\\"'/>\\\"; ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; ret+=\\\"<rect x='1' y='\\\"+Math.floor(1+18*(5-val2)/5)+\\\"' width='46' height='\\\"+Math.floor(46*val2/5)+\\\"'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val1<val2?'&lt;':'&#8805;'];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Comparez[/b] la [red]hauteur[/red] des rectangles.","fontex":1.3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>s1</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s4</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, la hauteur de 2 rectangles (avec égalité possible et légende numérique).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var eq=(Math.floor(Math.random()*3.3)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*5)+1,val2=eq?val1:Math.floor(Math.random()*5)+1;ret+=\\\"<rect x='1' y='\\\"+Math.floor(1+18*(5-val1)/5)+\\\"' width='46' height='\\\"+Math.floor(46*val1/5)+\\\"'/><text transform='translate(23,22)' style='font-size:8px;fill:white;font-weight:bold;'>\\\"+val1+\\\"</text>\\\"; ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; ret+=\\\"<rect x='1' y='\\\"+Math.floor(1+18*(5-val2)/5)+\\\"' width='46' height='\\\"+Math.floor(46*val2/5)+\\\"'/><text transform='translate(23,22)' style='font-size:8px;fill:white;font-weight:bold;'>\\\"+val2+\\\"</text>\\\"; ret+=\\\"</svg></div>\\\"; return [ret,  val1==val2?'=':(val1<val2?'&lt;':'&gt;')];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Comparez[/b] la [red]hauteur[/red] des rectangles.","fontex":1.3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>s1</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>

    <!-- Number  -->

    <rdf:Description>
        <dct:identifier>13</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 1 et 3.</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=3,a=Math.floor(Math.random()*max)+1,p=1,b=(p)?Math.floor(Math.random()*max)+1:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.1em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.1em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.9]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>1kx</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>14</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 1 et 4.</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=4,a=Math.floor(Math.random()*max)+1,p=1,b=(p)?Math.floor(Math.random()*max)+1:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.1em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.1em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.9]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>1kx</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>15</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 1 et 5.</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=5,a=Math.floor(Math.random()*max)+1,p=Math.floor(Math.random()*10),b=(p)?Math.floor(Math.random()*max)+1:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.1em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.1em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.9]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>1kx</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>16</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 1 et 6.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=6,a=Math.floor(Math.random()*max)+1,p=Math.floor(Math.random()*6),b=(p)?Math.floor(Math.random()*max)+1:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.1em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.1em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.9]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1kx</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>17</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 1 et 7.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=7,a=Math.floor(Math.random()*max)+1,p=Math.floor(Math.random()*5),b=(p)?Math.floor(Math.random()*max)+1:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.1em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.1em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.9]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1kx</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>18</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 1 et 8.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=8,a=Math.floor(Math.random()*max)+1,p=Math.floor(Math.random()*4),b=(p)?Math.floor(Math.random()*max)+1:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.1em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.1em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.9]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1kx</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>19</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 1 et 9.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=9,a=Math.floor(Math.random()*max)+1,p=Math.floor(Math.random()*4),b=(p)?Math.floor(Math.random()*max)+1:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.1em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.1em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.9]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1kx</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>110</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 1 et 10.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=10,a=Math.floor(Math.random()*max)+1,p=Math.floor(Math.random()*4),b=(p)?Math.floor(Math.random()*max)+1:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.1em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.1em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.9]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>1kx</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>110x</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, en moins de 40 secondes, 2 entiers compris entre 1 et 10.</dct:title>
        <dct:description><![CDATA["number":15,"time":2,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=10,a=Math.floor(Math.random()*max)+1,p=Math.floor(Math.random()*4),b=(p)?Math.floor(Math.random()*max)+1:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.1em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.1em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.9]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>1kx</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>110y</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, en moins de 20 secondes, 2 entiers compris entre 1 et 10.</dct:title>
        <dct:description><![CDATA["number":15,"time":1,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=10,a=Math.floor(Math.random()*max)+1,p=Math.floor(Math.random()*4),b=(p)?Math.floor(Math.random()*max)+1:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.1em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.1em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.9]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>5</dct:type>
        <dct:alternative>1kx</dct:alternative>
    </rdf:Description>

    <!-- Number with 0: 0[a-z] -->

    <rdf:Description>
        <dct:identifier>03</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 0 et 3.</dct:title>
        <dct:description><![CDATA["gg":{"a":[4,0],"b":[4,0],"p":0},"font":1.7,"time":0,"number":15,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function($this,_s,_i) { var a=Math.floor(Math.random()*_s.gg.a[0])+_s.gg.a[1],b=(Math.random()>_s.gg.p)?Math.floor(Math.random()*_s.gg.b[0])+_s.gg.b[1]:a; return [jtools.num.tostr(a)+'...'+jtools.num.tostr(b), (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>1kx</dct:alternative>
    </rdf:Description>

     <rdf:Description>
        <dct:identifier>015</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 0 et 15.</dct:title>
        <dct:description><![CDATA["gg":{"a":[16,0],"b":[16,0],"p":0.2},"font":1.7,"time":0]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>015x</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, en moins de 40 secondes, 2 entiers compris entre 0 et 15.</dct:title>
        <dct:description><![CDATA["gg":{"a":[16,0],"b":[16,0],"p":0.2},"font":1.7,"time":2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
     </rdf:Description>

    <rdf:Description>
        <dct:identifier>010</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 0 et 10.</dct:title>
        <dct:description><![CDATA["gg":{"a":[11,0],"b":[11,0],"p":0.25},"font":1.7,"time":0]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>010x</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, en moins de 40 secondes, 2 entiers compris entre 0 et 10.</dct:title>
        <dct:description><![CDATA["gg":{"a":[11,0],"b":[11,0],"p":0.25},"font":1.7,"time":2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>020</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 0 et 20.</dct:title>
        <dct:description><![CDATA["gg":{"a":[21,0],"b":[21,0],"p":0.25},"font":1.7,"time":0]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>020x</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, en moins de 40 secondes, 2 entiers compris entre 0 et 20.</dct:title>
        <dct:description><![CDATA["gg":{"a":[21,0],"b":[21,0],"p":0.25},"font":1.7,"time":2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
    </rdf:Description>
    
    <rdf:Description>
        <dct:identifier>100</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 0 et 100.</dct:title>
        <dct:description><![CDATA["gg":{"a":[100,0],"b":[100,0],"p":0.25},"font":1.7,"time":0]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>100x</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, en moins de 40 secondes, 2 entiers compris entre 0 et 100.</dct:title>
        <dct:description><![CDATA["gg":{"a":[100,0],"b":[100,0],"p":0.25},"font":1.7,"time":2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>1k</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 0 et 1000.</dct:title>
        <dct:description><![CDATA["gg":{"a":[1000,0],"b":[1000,0],"p":0.25},"font":1.4,"time":0]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>1kx</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, en moins de 40 secondes, 2 entiers compris entre 0 et 1000.</dct:title>
        <dct:description><![CDATA["gg":{"a":[1000,0],"b":[1000,0],"p":0.25},"font":1.4,"time":2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>10k</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 0 et 10 000.</dct:title>
        <dct:description><![CDATA["gg":{"a":[10000,0],"b":[10000,0],"p":0.25},"font":1,"time":0]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>10kx</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, en moins de 40 secondes, 2 entiers compris entre 0 et 10 000.</dct:title>
        <dct:description><![CDATA["gg":{"a":[10000,0],"b":[10000,0],"p":0.25},"font":1,"time":2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
    </rdf:Description>
	
    <rdf:Description>
        <dct:identifier>100k</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 0 et 100 000.</dct:title>
        <dct:description><![CDATA["gg":{"a":[100000,0],"b":[100000,0],"p":0.25},"font":0.8,"time":0]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>100kx</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, en moins de 40 secondes, 2 entiers compris entre 0 et 100 000.</dct:title>
        <dct:description><![CDATA["gg":{"a":[100000,0],"b":[100000,0],"p":0.25},"font":0.8,"time":2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>1m</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 0 et 1 000 000.</dct:title>
        <dct:description><![CDATA["gg":{"a":[1000000,0],"b":[1000000,0],"p":0.25},"font":0.7,"time":0]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>1mx</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, en moins de 40 secondes, 2 entiers compris entre 0 et 1 000 000.</dct:title>
        <dct:description><![CDATA["gg":{"a":[1000000,0],"b":[1000000,0],"p":0.25},"font":0.7,"time":2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>10m</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 0 et 10 000 000.</dct:title>
        <dct:description><![CDATA["gg":{"a":[10000000,0],"b":[10000000,0],"p":0.25},"font":0.6,"time":0]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:relation>03</dct:relation>
    </rdf:Description>

    <!-- lte -->

    <rdf:Description>
        <dct:identifier>eg03</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 0 et 3.</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&#8804;","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=4,a=Math.floor(Math.random()*max),p=Math.floor(Math.random()*3.5),b=(p)?Math.floor(Math.random()*max):a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.1em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.1em;'>\\\"+b+\\\"</div></div>\\\", (a<=b)?'&#8804;':'&gt;']}","class":"h12 alpha left","font":1.9]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"L'opérateur ≤ signifie <b>inférieur ou égal</b>."]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>1kx</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>el03</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 0 et 3.</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","&#8805;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=4,a=Math.floor(Math.random()*max),p=Math.floor(Math.random()*3.5),b=(p)?Math.floor(Math.random()*max):a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.1em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.1em;'>\\\"+b+\\\"</div></div>\\\", (a<b)?'&lt;':'&#8805;']}","class":"h12 alpha left","font":1.9]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"L'opérateur ≥ signifie <b>supérieur ou égal</b>."]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>1kx</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>eg05</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 0 et 5.</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&#8804;","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=6,a=Math.floor(Math.random()*max),p=Math.floor(Math.random()*3.5),b=(p)?Math.floor(Math.random()*max):a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.1em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.1em;'>\\\"+b+\\\"</div></div>\\\", (a<=b)?'&#8804;':'&gt;']}","class":"h12 alpha left","font":1.9]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"L'opérateur ≤ signifie <b>inférieur ou égal</b>."]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>1kx</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>el05</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 0 et 5.</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","&#8805;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=6,a=Math.floor(Math.random()*max),p=Math.floor(Math.random()*3.5),b=(p)?Math.floor(Math.random()*max):a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.1em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.1em;'>\\\"+b+\\\"</div></div>\\\", (a<b)?'&lt;':'&#8805;']}","class":"h12 alpha left","font":1.9]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"L'opérateur ≥ signifie <b>supérieur ou égal</b>."]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>1kx</dct:alternative>
    </rdf:Description>
    
    <!-- decimal -->

    <rdf:Description>
        <dct:identifier>d10</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers décimaux.</dct:title>
        <dct:description><![CDATA["number":20,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=7,ss=[10,100,1000],s=ss[Math.floor(Math.random()*ss.length)],a=Math.floor(Math.random()*max*s)+2,p; do { p=(Math.floor(Math.random()*2)*2-1)*Math.floor(1+Math.random()*s/10)*2; } while (a+p<=0); var b=a+p; return [\\\"<div style='margin-left:.2em;'><div style='width:3em;'>\\\"+(a/s)+\\\"</div><div style='width:1.1em;'>...</div><div style='width:3em;'>\\\"+(b/s)+\\\"</div></div>\\\", (a<b)?'&lt;':'&gt;']}","class":"h12 alpha left","font":0.9]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>1kx</dct:alternative>
        <dct:coverage xml:lang="fr-FR">décimal</dct:coverage>
    </rdf:Description>

    <!-- Negative -->

    <rdf:Description>
        <dct:identifier>n010</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre -10 et 0.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=11,a=Math.floor(Math.random()*max)-10,p=Math.floor(Math.random()*5),b=(p)?Math.floor(Math.random()*max)-10:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.7em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.7em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>n010</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>n010x</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, en moins de 40 secondes, 2 entiers compris entre -10 et 0.</dct:title>
        <dct:description><![CDATA["number":15,"time":2,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=11,a=Math.floor(Math.random()*max)-10,p=Math.floor(Math.random()*5),b=(p)?Math.floor(Math.random()*max)-10:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.7em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.7em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>n010</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>n0100</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre -100 et 0.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=100,a=Math.floor(Math.random()*max)-99,p=Math.floor(Math.random()*5),b=(p)?Math.floor(Math.random()*max)-99:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.7em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.7em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>n010</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>n0100x</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, en moins de 40 secondes, 2 entiers compris entre -100 et 0.</dct:title>
        <dct:description><![CDATA["number":15,"time":2,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=100,a=Math.floor(Math.random()*max)-99,0p=Math.floor(Math.random()*5),b=(p)?Math.floor(Math.random()*max)-99:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.7em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.7em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>n010</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>n100</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre -100 et 100.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=199,a=Math.floor(Math.random()*max)-99,p=Math.floor(Math.random()*5),b=(p)?Math.floor(Math.random()*max)-99:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.7em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.7em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>n010</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>n100x</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, en moins de 40 secondes, 2 entiers compris entre -100 et 100.</dct:title>
        <dct:description><![CDATA["time":2,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=199,a=Math.floor(Math.random()*max)-99,p=Math.floor(Math.random()*5),b=(p)?Math.floor(Math.random()*max)-99:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.7em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.7em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>n010</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>n100y</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, en moins de 20 secondes, 2 entiers compris entre -100 et 100.</dct:title>
        <dct:description><![CDATA["time":1,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=199,a=Math.floor(Math.random()*max)-99,p=Math.floor(Math.random()*5),b=(p)?Math.floor(Math.random()*max)-99:a; return [\\\"<div style='margin-left:.2em;'><div style='width:1.7em;'>\\\"+a+\\\"</div><div style='width:1.1em;'>...</div><div style='width:1.7em;'>\\\"+b+\\\"</div></div>\\\", (a==b)?'=':((a<b)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>n010</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>na10</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre -10 et 10 avec présence de valeurs absolues.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=11,a=Math.floor(Math.random()*max)-10,p=Math.floor(Math.random()*5),b=(p)?Math.floor(Math.random()*max)-10:a,aa=Math.floor(Math.random()*2),ba=Math.floor(Math.random()*2),ar=(aa==0)?a:Math.abs(a),br=(ba==0)?b:Math.abs(b); return [\\\"<div style='margin-left:.2em;'><div style='width:2.5em;'>\\\"+(aa==0?a.toString():\\\"|\\\"+a+\\\"|\\\")+\\\"</div><div style='width:1.1em;'>...</div><div style='width:2.5em;'>\\\"+(ba==0?b.toString():\\\"|\\\"+b+\\\"|\\\")+\\\"</div></div>\\\", (ar==br)?'=':((ar<br)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1.1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>n010</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>na100</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre -100 et 100 avec présence de valeurs absolues.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var max=199,a=Math.floor(Math.random()*max)-99,p=Math.floor(Math.random()*5),b=(p)?Math.floor(Math.random()*max)-99:a,aa=Math.floor(Math.random()*2),ba=Math.floor(Math.random()*2),ar=(aa==0)?a:Math.abs(a),br=(ba==0)?b:Math.abs(b); return [\\\"<div style='margin-left:.2em;'><div style='width:2.5em;'>\\\"+(aa==0?a.toString():\\\"|\\\"+a+\\\"|\\\")+\\\"</div><div style='width:1.1em;'>...</div><div style='width:2.5em;'>\\\"+(ba==0?b.toString():\\\"|\\\"+b+\\\"|\\\")+\\\"</div></div>\\\", (ar==br)?'=':((ar<br)?'&lt;':'&gt;')]}","class":"h12 alpha left","font":1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>n010</dct:alternative>
    </rdf:Description>

    <!-- 2 COMPARES -->
 
    <rdf:Description>
        <dct:identifier>st29</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre 2 et 9 complétant la double inégalité d'infériorité.</dct:title>
        <dct:description><![CDATA["number":10,"gg":{"c":0,"a":[9,1],"b":0,"l":1.2},"font":1.1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>t119x</dct:alternative>
        <dct:relation>tm29</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>stm29</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, l'un des nombres compris entre 2 et 9 complétant la double inégalité d'infériorité.</dct:title>
        <dct:description><![CDATA["gg":{"c":2,"a":[9,1],"b":0,"l":1.2}]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>t119x</dct:alternative>
        <dct:relation>tm29</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>st119</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre 1 et 19 complétant la double inégalité d'infériorité.</dct:title>
        <dct:description><![CDATA["time":0,"gg":{"c":0,"a":[19,1],"b":0,"l":1.2},"input":{"digit":2,"speed":5000},"font":1.1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>t119x</dct:alternative>
        <dct:relation>tm29</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>st119x</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, en moins de 40 secondes, le nombre compris entre 1 et 19 complétant la double inégalité d'infériorité.</dct:title>
        <dct:description><![CDATA["time":2,"gg":{"c":0,"a":[19,1],"b":0,"l":1.2},"input":{"digit":2,"speed":5000},"font":1.1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>t119x</dct:alternative>
        <dct:relation>tm29</dct:relation>
    </rdf:Description>


    <rdf:Description>
        <dct:identifier>gt29</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre 2 et 9 complétant la double inégalité de supériorité.</dct:title>
        <dct:description><![CDATA["number":10,"gg":{"c":0,"a":[9,1],"b":1,"l":1.2},"font":1.1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>t119x</dct:alternative>
        <dct:relation>tm29</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>gtm29</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, l'un des nombres compris entre 2 et 9 complétant la double inégalité de supériorité.</dct:title>
        <dct:description><![CDATA["gg":{"c":2,"a":[9,1],"b":1,"l":1.2}]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>t119x</dct:alternative>
        <dct:relation>tm29</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>gt119</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre 1 et 19 complétant la double inégalité de supériorité.</dct:title>
        <dct:description><![CDATA["time":0,"gg":{"c":0,"a":[19,1],"b":1,"l":1.2},"input":{"digit":2,"speed":5000},"font":1.1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>t119x</dct:alternative>
        <dct:relation>tm29</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>gt119x</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, en moins de 40 secondes, le nombre compris entre 1 et 19 complétant la double inégalité de supériorité.</dct:title>
        <dct:description><![CDATA["time":2,"gg":{"c":0,"a":[19,1],"b":1,"l":1.2},"input":{"digit":2,"speed":5000},"font":1.1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>t119x</dct:alternative>
        <dct:relation>tm29</dct:relation>
    </rdf:Description>


    <rdf:Description>
        <dct:identifier>t29</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre 2 et 9 complétant la double inégalité.</dct:title>
        <dct:description><![CDATA["gg":{"c":0,"a":[9,1],"b":0,"l":1.2},"input":{"digit":1,"speed":0},"font":1.2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>t119x</dct:alternative>
        <dct:relation>tm29</dct:relation>
    </rdf:Description>
	
    <rdf:Description>
        <dct:identifier>tm29</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, l'un des nombres compris entre 2 et 9 complétant la double inégalité.</dct:title>
        <dct:description><![CDATA["gg":{"c":2,"a":[9,1],"b":2,"l":1.2},"number":15,"time":0,"input":{"digit":1,"speed":0},"regexp": { "output": "\\\\.\\\\.\\\\.","keepval":true },"gen":"function($this,_s,_i) { var c=Math.floor(Math.random()*_s.gg.c)+1,a=Math.floor(Math.random()*(_s.gg.a[0]-c))+_s.gg.a[1],vals=[]; for (var i=0; i<c; i++) { vals.push(a+1+i); } var b=(_s.gg.b==2)?Math.floor(Math.random()*2):_s.gg.b; return [b?\\\"<div style='width:\\\"+_s.gg.l+\\\"em;margin-left:.1em;'>\\\"+(a+c+1)+\\\"</div><div style='width:1em;'>&gt;</div><div style='width:\\\"+_s.gg.l+\\\"em;'>...</div><div style='width:1em;'>&gt;</div><div style='width:\\\"+_s.gg.l+\\\"em;'>\\\"+a+\\\"</div>\\\":\\\"<div style='width:\\\"+_s.gg.l+\\\"em;margin-left:.1em;'>\\\"+a+\\\"</div><div style='width:1em;'>&lt;</div><div style='width:\\\"+_s.gg.l+\\\"em;'>...</div><div style='width:1em;'>&lt;</div><div style='width:\\\"+_s.gg.l+\\\"em;'>\\\"+(a+c+1)+\\\"</div>\\\",vals]}","class":"p02 h12 alpha left","font":1.2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Trouvez une valeur[/b] vérifiant la double inégalité."]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>t119x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>t119</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre 1 et 19 complétant la double inégalité.</dct:title>
        <dct:description><![CDATA["gg":{"c":0,"a":[19,1],"b":0,"l":1.2},"input":{"digit":2,"speed":5000},"font":1.1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>t119x</dct:alternative>
        <dct:relation>tm29</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>t119x</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, en moins de 40 secondes, le nombre compris entre 1 et 19 complétant la double inégalité.</dct:title>
        <dct:description><![CDATA["time":2,"gg":{"c":0,"a":[19,1],"b":0,"l":1.2},"input":{"digit":2,"speed":5000},"font":1.1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>t119x</dct:alternative>
        <dct:relation>tm29</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>tm100</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, l'un des nombres compris entre 2 et 100 complétant la double inégalité.</dct:title>
        <dct:description><![CDATA["gg":{"c":3,"a":[99,1],"b":2,"l":1.2},"input":{"digit":2,"speed":5000},"font":1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>t119x</dct:alternative>
        <dct:relation>tm29</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>tm1k</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, l'un des nombres compris entre 2 et 1 000 complétant la double inégalité.</dct:title>
        <dct:description><![CDATA["gg":{"c":10,"a":[999,1],"b":2,"l":1.8},"input":{"digit":3,"speed":5000},"font":0.8]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>t119x</dct:alternative>
        <dct:relation>tm29</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>tm10k</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, l'un des nombres compris entre 2 et 10 000 complétant la double inégalité.</dct:title>
        <dct:description><![CDATA["gg":{"c":50,"a":[9999,1],"b":2,"l":2.4},"input":{"digit":4,"speed":5000},"font":0.7]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>t119x</dct:alternative>
        <dct:relation>tm29</dct:relation>
    </rdf:Description>

	<!-- Not sure about this one -->

    <rdf:Description>
        <dct:identifier>te100</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre 0 et 100 complétant la double inégalité.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var op=[['&lt;','&#8804;','&lt;','&gt;','&#8805;','&gt;'],['&lt;','&lt;','&#8804;','&gt;','&gt;','&#8805;']],c=Math.floor(Math.random()*6),a=Math.floor(Math.random()*((c%3)==0?98:99)); return [\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+(c<3?a:(c==3?a+2:a+1))+\\\"</div><div style='width:.6em;'>\\\"+op[0][c]+\\\"</div><div style='width:1.5em;text-align:center'>...</div><div style='width:.6em;'>\\\"+op[1][c]+\\\"</div><div style='width:1.5em;'>\\\"+(c<3?(c==0?a+2:a+1):a)+\\\"</div>\\\",(c==1||c==5?a:a+1)]}","class":"h12 alpha left h12","font":1.1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>t119x</dct:alternative>
     </rdf:Description>
    
    <!-- Negative -->

    <rdf:Description>
        <dct:identifier>stn29</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre -2 et -9 complétant la double inégalité d'infériorité.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"negative":true,"input":{"id":"keypad","digit":1,"speed":5000},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var a=-(Math.floor(Math.random()*8)+2); return [\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+a+\\\"</div><div style='width:1em;'>&lt;</div><div style='width:1.1em;text-align:center;'>...</div><div style='width:1em;'>&lt;</div><div>\\\"+(a+2)+\\\"</div>\\\",(a+1)]}","class":"h12 alpha left","font":1.2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>tn99</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>stn299</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre -2 et -99 complétant la double inégalité d'infériorité.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"negative":true,"input":{"id":"keypad","digit":2,"speed":5000},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var a=-(Math.floor(Math.random()*98)+2); return [\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+a+\\\"</div><div style='width:1em;'>&lt;</div><div style='width:1.8em;text-align:center;'>...</div><div style='width:1em;'>&lt;</div><div>\\\"+(a+2)+\\\"</div>\\\",(a+1)]}","class":"h12 alpha left","font":0.8]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>tn99</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>stn9</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre -9 et 9 complétant la double inégalité d'infériorité.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"negative":true,"input":{"id":"keypad","digit":1,"speed":5000},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var a=Math.floor(Math.random()*17)-9; return [\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+a+\\\"</div><div style='width:1em;'>&lt;</div><div style='width:1.1em;text-align:center;'>...</div><div style='width:1em;'>&lt;</div><div>\\\"+(a+2)+\\\"</div>\\\",(a+1)]}","class":"h12 alpha left","font":1.2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>tn99</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>stn99</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre -9 et 9 complétant la double inégalité d'infériorité.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"negative":true,"input":{"id":"keypad","digit":2,"speed":5000},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var a=Math.floor(Math.random()*197)-99; return [\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+a+\\\"</div><div style='width:1em;'>&lt;</div><div style='width:1.8em;text-align:center;'>...</div><div style='width:1em;'>&lt;</div><div>\\\"+(a+2)+\\\"</div>\\\",(a+1)]}","class":"h12 alpha left","font":0.8]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>tn99</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>gtn29</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre -2 et -9 complétant la double inégalité de supériorité.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"negative":true,"input":{"id":"keypad","digit":1,"speed":5000},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var a=-(Math.floor(Math.random()*8)+2); return [\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+(a+2)+\\\"</div><div style='width:1em;'>&gt;</div><div style='width:1.1em;text-align:center;'>...</div><div style='width:1em;'>&gt;</div><div>\\\"+a+\\\"</div>\\\",(a+1)]}","class":"h12 alpha left","font":1.2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>tn99</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>gtn299</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre -2 et -9 complétant la double inégalité de supériorité.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"negative":true,"input":{"id":"keypad","digit":2,"speed":5000},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var a=-(Math.floor(Math.random()*98)+2); return [\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+(a+2)+\\\"</div><div style='width:1em;'>&gt;</div><div style='width:1.8em;text-align:center;'>...</div><div style='width:1em;'>&gt;</div><div>\\\"+a+\\\"</div>\\\",(a+1)]}","class":"h12 alpha left","font":0.8]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>tn99</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>gtn9</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre -9 et 9 complétant la double inégalité de supériorité.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"negative":true,"input":{"id":"keypad","digit":1,"speed":5000},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var a=Math.floor(Math.random()*17)-9; return [\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+(a+2)+\\\"</div><div style='width:1em;'>&gt;</div><div style='width:1.1em;text-align:center;'>...</div><div style='width:1em;'>&gt;</div><div>\\\"+a+\\\"</div>\\\",(a+1)]}","class":"h12 alpha left","font":1.2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>tn99</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>gtn99</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre -99 et 99 complétant la double inégalité de supériorité.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"negative":true,"input":{"id":"keypad","digit":2,"speed":5000},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var a=Math.floor(Math.random()*197)-99; return [\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+(a+2)+\\\"</div><div style='width:1em;'>&gt;</div><div style='width:1.8em;text-align:center;'>...</div><div style='width:1em;'>&gt;</div><div>\\\"+a+\\\"</div>\\\",(a+1)]}","class":"h12 alpha left","font":0.8]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>tn99</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>tn29</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre -2 et -9 complétant la double inégalité.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"negative":true,"input":{"id":"keypad","digit":1,"speed":5000},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var a=-(Math.floor(Math.random()*8)+2), b=Math.floor(Math.random()*2); return [b?\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+(a+2)+\\\"</div><div style='width:1em;'>&gt;</div><div style='width:1.1em;'>...</div><div style='width:1em;'>&gt;</div><div>\\\"+a+\\\"</div>\\\":\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+a+\\\"</div><div style='width:1em;'>&lt;</div><div style='width:1.1em;'>...</div><div style='width:1em;'>&lt;</div><div>\\\"+(a+2)+\\\"</div>\\\",(a+1)]}","class":"h12 alpha left","font":1.2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>tn99</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>tn299</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre -2 et -99 complétant la double inégalité.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"negative":true,"input":{"id":"keypad","digit":2,"speed":5000},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var a=-(Math.floor(Math.random()*98)+2), b=Math.floor(Math.random()*2); return [b?\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+(a+2)+\\\"</div><div style='width:1em;'>&gt;</div><div style='width:1.8em;'>...</div><div style='width:1em;'>&gt;</div><div>\\\"+a+\\\"</div>\\\":\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+a+\\\"</div><div style='width:1em;'>&lt;</div><div style='width:1.4em;'>...</div><div style='width:1em;'>&lt;</div><div>\\\"+(a+2)+\\\"</div>\\\",(a+1)]}","class":"h12 alpha left","font":0.8]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>tn99</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>tn9</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre -9 et 9 complétant la double inégalité.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"negative":true,"input":{"id":"keypad","digit":1,"speed":5000},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var a=Math.floor(Math.random()*17)-9, b=Math.floor(Math.random()*2); return [b?\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+(a+2)+\\\"</div><div style='width:1em;'>&gt;</div><div style='width:1.1em;'>...</div><div style='width:1em;'>&gt;</div><div>\\\"+a+\\\"</div>\\\":\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+a+\\\"</div><div style='width:1em;'>&lt;</div><div style='width:1.1em;'>...</div><div style='width:1em;'>&lt;</div><div>\\\"+(a+2)+\\\"</div>\\\",(a+1)]}","class":"h12 alpha left","font":1.2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>tn99</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>tn99</dct:identifier>
        <dct:title xml:lang="fr-FR">Trouver, sans contrainte de temps, le nombre compris entre -99 et 99 complétant la double inégalité.</dct:title>
        <dct:description><![CDATA["time":0,"negative":true,"input":{"id":"keypad","digit":2,"speed":5000},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function() { var a=Math.floor(Math.random()*197)-99, b=Math.floor(Math.random()*2); return [b?\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+(a+2)+\\\"</div><div style='width:1em;'>&gt;</div><div style='width:1.8em;'>...</div><div style='width:1em;'>&gt;</div><div>\\\"+a+\\\"</div>\\\":\\\"<div style='width:1.5em;margin-left:.1em;'>\\\"+a+\\\"</div><div style='width:1em;'>&lt;</div><div style='width:1.8em;'>...</div><div style='width:1em;'>&lt;</div><div>\\\"+(a+2)+\\\"</div>\\\",(a+1)]}","class":"h12 alpha left","font":0.8]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>tn99</dct:alternative>
    </rdf:Description>


     <!-- 2D boxes -->

     <rdf:Description>
         <dct:identifier>214</dct:identifier>
         <dct:title xml:lang="fr-FR">Différencier, sans contrainte de temps, deux groupes de carrés (de 1 à 4).</dct:title>
         <dct:description><![CDATA["number":15,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["=","&ne;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var n=2,eq=(Math.floor(Math.random()*5)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*n*n)+1,val2=eq?val1:Math.floor(Math.random()*n*n)+1,b1=[],b2=[]; for(var i=0;i<n*n;i++){ b1.push(false);b2.push(false);}for(var i=0;i<val1;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b1[x]);b1[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; for(var i=0;i<val2;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b2[x]);b2[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':'&ne;'];}","class":"alpha left p02","font":1.7]]></dct:description>
         <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Comparez[/b] le [red]nombre de carrés[/red]."]]></dct:description>
         <dct:extent>2</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>1</dct:type>
         <dct:alternative>2110x</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>

     <rdf:Description>
         <dct:identifier>2t14</dct:identifier>
         <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, deux groupes de carrés (de 1 à 4).</dct:title>
         <dct:description><![CDATA["number":15,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var n=2,eq=(Math.floor(Math.random()*10)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*n*n)+1,val2=eq?val1:Math.floor(Math.random()*n*n)+1,b1=[],b2=[]; for(var i=0;i<n*n;i++){ b1.push(false);b2.push(false);}for(var i=0;i<val1;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b1[x]);b1[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; for(var i=0;i<val2;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b2[x]);b2[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':(val1<val2?'&lt;':'&gt;')];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Comparez[/b] le [red]nombre de carrés[/red]."]]></dct:description>
         <dct:extent>1</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>1</dct:type>
         <dct:alternative>2110x</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>

     <rdf:Description>
         <dct:identifier>219</dct:identifier>
         <dct:title xml:lang="fr-FR">Différencier, sans contrainte de temps, deux groupes de carrés (de 1 à 9).</dct:title>
         <dct:description><![CDATA["number":15,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["=","&ne;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var n=3,eq=(Math.floor(Math.random()*2.2)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*n*n)+1,val2=eq?val1:Math.floor(Math.random()*n*n)+1,b1=[],b2=[]; for(var i=0;i<n*n;i++){ b1.push(false);b2.push(false);}for(var i=0;i<val1;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b1[x]);b1[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; for(var i=0;i<val2;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b2[x]);b2[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':'&ne;'];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Comparez[/b] le [red]nombre de carrés[/red]."]]></dct:description>
         <dct:extent>1</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>2</dct:type>
         <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

     <rdf:Description>
         <dct:identifier>2t19</dct:identifier>
         <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, deux groupes de carrés (de 1 à 9).</dct:title>
         <dct:description><![CDATA["number":15,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var n=3,eq=(Math.floor(Math.random()*3.5)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*n*n)+1,val2=eq?val1:Math.floor(Math.random()*n*n)+1,b1=[],b2=[]; for(var i=0;i<n*n;i++){ b1.push(false);b2.push(false);}for(var i=0;i<val1;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b1[x]);b1[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; for(var i=0;i<val2;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b2[x]);b2[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':(val1<val2?'&lt;':'&gt;')];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Comparez[/b] le [red]nombre de carrés[/red]."]]></dct:description>
         <dct:extent>1</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>2</dct:type>
         <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

     <rdf:Description>
         <dct:identifier>2110</dct:identifier>
         <dct:title xml:lang="fr-FR">Différencier, sans contrainte de temps, deux groupes de carrés (de 1 à 10).</dct:title>
         <dct:description><![CDATA["number":15,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["=","&ne;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var n=4,eq=(Math.floor(Math.random()*2.1)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*10)+1,val2=eq?val1:Math.floor(Math.random()*10)+1,b1=[],b2=[]; for(var i=0;i<n*n;i++){ b1.push(false);b2.push(false);}for(var i=0;i<val1;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b1[x]);b1[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; for(var i=0;i<val2;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b2[x]);b2[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':'&ne;'];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Comparez[/b] le [red]nombre de carrés[/red]."]]></dct:description>
         <dct:extent>1</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>2</dct:type>
         <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

     <rdf:Description>
         <dct:identifier>2110x</dct:identifier>
         <dct:title xml:lang="fr-FR">Différencier, en moins de 40 secondes, deux groupes de carrés (de 1 à 10).</dct:title>
         <dct:description><![CDATA["number":15,"time":2,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["=","&ne;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var n=4,eq=(Math.floor(Math.random()*2.1)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*10)+1,val2=eq?val1:Math.floor(Math.random()*10)+1,b1=[],b2=[]; for(var i=0;i<n*n;i++){ b1.push(false);b2.push(false);}for(var i=0;i<val1;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b1[x]);b1[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; for(var i=0;i<val2;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b2[x]);b2[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':'&ne;'];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Comparez[/b] le [red]nombre de carrés[/red]."]]></dct:description>
         <dct:extent>1</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>4</dct:type>
         <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

     <rdf:Description>
         <dct:identifier>2t110</dct:identifier>
         <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, deux groupes de carrés (de 1 à 10).</dct:title>
         <dct:description><![CDATA["number":15,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var n=4,eq=(Math.floor(Math.random()*3.1)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*10)+1,val2=eq?val1:Math.floor(Math.random()*10)+1,b1=[],b2=[]; for(var i=0;i<n*n;i++){ b1.push(false);b2.push(false);}for(var i=0;i<val1;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b1[x]);b1[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; for(var i=0;i<val2;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b2[x]);b2[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':(val1<val2?'&lt;':'&gt;')];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Comparez[/b] le [red]nombre de carrés[/red]."]]></dct:description>
         <dct:extent>1</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>2</dct:type>
         <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

     <rdf:Description>
         <dct:identifier>2t110x</dct:identifier>
         <dct:title xml:lang="fr-FR">Comparer, en moins de 40 secondes, deux groupes de carrés (de 1 à 10).</dct:title>
         <dct:description><![CDATA["number":15,"time":2,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var n=4,eq=(Math.floor(Math.random()*3.1)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*10)+1,val2=eq?val1:Math.floor(Math.random()*10)+1,b1=[],b2=[]; for(var i=0;i<n*n;i++){ b1.push(false);b2.push(false);}for(var i=0;i<val1;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b1[x]);b1[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; for(var i=0;i<val2;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b2[x]);b2[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':(val1<val2?'&lt;':'&gt;')];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Comparez[/b] le [red]nombre de carrés[/red]."]]></dct:description>
         <dct:extent>1</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>4</dct:type>
         <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

     <rdf:Description>
         <dct:identifier>2116</dct:identifier>
         <dct:title xml:lang="fr-FR">Différencier, sans contrainte de temps, deux groupes de carrés (de 1 à 16).</dct:title>
         <dct:description><![CDATA["number":15,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["=","&ne;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var n=4,eq=(Math.floor(Math.random()*2.1)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*n*n)+1,val2=eq?val1:Math.floor(Math.random()*n*n)+1,b1=[],b2=[]; for(var i=0;i<n*n;i++){ b1.push(false);b2.push(false);}for(var i=0;i<val1;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b1[x]);b1[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; for(var i=0;i<val2;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b2[x]);b2[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':'&ne;'];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Comparez[/b] le [red]nombre de carrés[/red]."]]></dct:description>
         <dct:extent>1</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>2</dct:type>
         <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

     <rdf:Description>
         <dct:identifier>2116x</dct:identifier>
         <dct:title xml:lang="fr-FR">Différencier, en moins de 40 secondes, deux groupes de carrés (de 1 à 16).</dct:title>
         <dct:description><![CDATA["number":15,"time":2,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["=","&ne;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var n=4,eq=(Math.floor(Math.random()*2.1)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*n*n)+1,val2=eq?val1:Math.floor(Math.random()*n*n)+1,b1=[],b2=[]; for(var i=0;i<n*n;i++){ b1.push(false);b2.push(false);}for(var i=0;i<val1;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b1[x]);b1[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; for(var i=0;i<val2;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b2[x]);b2[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':'&ne;'];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Comparez[/b] le [red]nombre de carrés[/red]."]]></dct:description>
         <dct:extent>1</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>4</dct:type>
         <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

     <rdf:Description>
         <dct:identifier>2t116</dct:identifier>
         <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, deux groupes de carrés (de 1 à 16).</dct:title>
         <dct:description><![CDATA["number":15,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var n=4,eq=(Math.floor(Math.random()*3.1)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*n*n)+1,val2=eq?val1:Math.floor(Math.random()*n*n)+1,b1=[],b2=[]; for(var i=0;i<n*n;i++){ b1.push(false);b2.push(false);}for(var i=0;i<val1;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b1[x]);b1[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; for(var i=0;i<val2;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b2[x]);b2[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':(val1<val2?'&lt;':'&gt;')];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Comparez[/b] le [red]nombre de carrés[/red]."]]></dct:description>
         <dct:extent>1</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>2</dct:type>
         <dct:alternative>2110x</dct:alternative>
    </rdf:Description>

     <rdf:Description>
         <dct:identifier>2t116x</dct:identifier>
         <dct:title xml:lang="fr-FR">Comparer, en moins de 40 secondes, deux groupes de carrés (de 1 à 16).</dct:title>
         <dct:description><![CDATA["number":15,"time":2,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"gen":"function(){var n=4,eq=(Math.floor(Math.random()*3.1)==0),ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\",val1=Math.floor(Math.random()*n*n)+1,val2=eq?val1:Math.floor(Math.random()*n*n)+1,b1=[],b2=[]; for(var i=0;i<n*n;i++){ b1.push(false);b2.push(false);}for(var i=0;i<val1;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b1[x]);b1[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div><div style='width:1.1em;'>...</div><div style='width:1em;'><svg width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\"; for(var i=0;i<val2;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b2[x]);b2[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val1==val2?'=':(val1<val2?'&lt;':'&gt;')];}","class":"alpha left p02","font":1.7]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":"[b]Comparez[/b] le [red]nombre de carrés[/red]."]]></dct:description>
         <dct:extent>1</dct:extent>
         <dct:subject>numeration</dct:subject>
         <dct:educationLevel>2</dct:educationLevel>
         <dct:type>4</dct:type>
         <dct:alternative>2110x</dct:alternative>
    </rdf:Description>



    <!-- Number a[a-z] -->

    <rdf:Description>
        <dct:identifier>o12</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 1 et 2</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["=","&ne;"]},"regexp": { "input": { "from": "([a-z]+[0-9]+)","to":"<div class=\\\"char\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"}, "output": "\\\\.\\\\.\\\\." },"gen":"function() { var v=[\\\"apple01\\\",\\\"banana01\\\",\\\"tomato01\\\",\\\"pepper01\\\",\\\"apricot01\\\",\\\"strawberry01\\\",\\\"pear01\\\",\\\"cherry01\\\",\\\"kiwi01\\\"], max=2,a=Math.floor(Math.random()*max)+1,p=Math.floor(Math.random()*3),b=(p)?Math.floor(Math.random()*max)+1:a; var ta=\\\"\\\",tb=\\\"\\\"; for (var i=0; i<a;i++) { ta+=v[Math.floor(Math.random()*v.length)]; } for (var i=0; i<b;i++) { tb+=v[Math.floor(Math.random()*v.length)]; } return [ta+\\\"<div style='width:1.1em;'>...</div>\\\"+tb, (a==b)?'=':\\\"&ne;\\\"]}","class":"h12 alpha left","font":1.2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Comparez le nombre de fruits de part et d'autre.","<b>=</b> signifie <b>égale</b> alors que <b>&ne;</b> signifie <b>différent</b>."]]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>o13</dct:alternative>
        <dct:source>res/img/svginventoryicons/vegetable/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>o13</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, 2 entiers compris entre 1 et 3</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["=","&ne;"]},"regexp": { "input": { "from": "([a-z]+[0-9]+)","to":"<div class=\\\"char\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"}, "output": "\\\\.\\\\.\\\\." },"gen":"function() { var v=[\\\"apple01\\\",\\\"banana01\\\",\\\"tomato01\\\",\\\"pepper01\\\",\\\"apricot01\\\",\\\"strawberry01\\\",\\\"pear01\\\",\\\"cherry01\\\",\\\"kiwi01\\\"], max=3,a=Math.floor(Math.random()*max)+1,p=Math.floor(Math.random()*3.5),b=(p)?Math.floor(Math.random()*max)+1:a; var ta=\\\"\\\",tb=\\\"\\\"; for (var i=0; i<a;i++) { ta+=v[Math.floor(Math.random()*v.length)]; } for (var i=0; i<b;i++) { tb+=v[Math.floor(Math.random()*v.length)]; } return [ta+\\\"<div style='width:1.1em;'>...</div>\\\"+tb, (a==b)?'=':\\\"&ne;\\\"]}","class":"h12 alpha left","font":0.8]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"exercice":["Comparez le nombre de fruits de part et d'autre.","<b>=</b> signifie <b>égale</b> alors que <b>&ne;</b> signifie <b>différent</b>."]]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>o13</dct:alternative>
        <dct:source>res/img/svginventoryicons/vegetable/</dct:source>
    </rdf:Description>

    <!-- Decompose -->


    <rdf:Description>
        <dct:identifier>d10k</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, la décomposition de 2 nombres inférieurs à 10 000.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[1.8,1.2,1.2],"digit":1,"values":["&lt;","=","&gt;"]},"regexp": { "output": "\\\\.\\\\.\\\\." },"values":[["4 000 + 500 + 9 ... 4 000 + 50 + 9","&gt;"],["3 000 + 20 + 8 ... 3 000 + 200 + 8","&lt;"],["9 000 + 90 + 9 ... 900 + 90 + 9","&gt;"],["1 000 + 800 + 7 ... 1 000 + 80 + 7","&gt;"],["3 000 + 30 + 8 ... 3 000 + 300 + 8","&lt;"],["4 000 + 50 + 6 ... 4 000 + 60 + 5","&lt;"],["5 000 + 700 + 8 ... 5 000 + 80 + 7","&gt;"],["9 000 + 90 + 4 ... 9 000 + 400 + 9","&lt;"],["1 000 + 300 + 4 ... 1 304","="],["5 000 + 500 + 5 ... 5 055","&gt;"],["2 000 + 80 + 7 ... 2078","&gt;"],["6 000 + 400 + 3 ... 6 403","="],["2 710 ... 2 000 + 700 + 1","&gt;"],["1 023 ... 1 000 + 200 + 3","&lt;"],["8 723 ... 8 700 + 20 + 3","="],["4 500 + 61 ... 4 000 + 560 + 1","="],["1 976 ... 1 900 + 60 + 7","&gt;"],["4 000 + 590 + 1 ... 4 500 + 91","="],["3 928 ... 3 000 + 900 + 28","="],["8 887 ... 8 870 + 8","&gt;"]],"class":"h12 alpha wrong p02","font":0.35,"number":"10"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>d10k</dct:alternative>
    </rdf:Description>

</rdf:RDF>


