<?xml version="1.0"?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:dct="http://purl.org/dc/terms/">


    <!-- PREFIX LIST
            2d          : square 2d
            3d          : square 3d
            b           : boxes
            c           : coins
            ch          : chart
            d           : distance
            de          : decompose
            dg          : digit
            di          : dice
            e           : extract
            f           : find
            m           : matches
            n           : negative
            na          : absolute
            o           : object (fruits)
            p           : potion
            po          : position
            s           : série de nombres à compléter
            so          : sorobo (japanese)
            su          : suanpan (chinese)
            sa          : normal abaque
            u           : unité/dizaine/centaine
            w           : writing
    -->

    <!-- DICE: di -->

    <rdf:Description>
        <dct:identifier>dima2</dct:identifier>
        <dct:title xml:lang="fr-FR">Associer un certain nombre d'allumettes à la valeur d'un dé (choisi entre 1 et 2), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[5,3,1],"digit":1,"values":[["[icon][img]res/img/numbers/match/match11.svg[/img][/icon]",1],["[icon][img]res/img/numbers/match/match21.svg[/img][/icon]",2]]},"regexp":{"input":{"from":"([1-6])","to":"[dice][img]res/img/numbers/dice/dice0$1.svg[/img][/dice]"}},"template":"template.html","values":[["1","1"],["2","2"]],"class":"alpha p01", "font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>di6</dct:alternative>
        <dct:source>res/img/numbers/match/match*.svg,res/img/numbers/dice/dice*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dima3</dct:identifier>
        <dct:title xml:lang="fr-FR">Associer un certain nombre d'allumettes à la valeur d'un dé (choisi entre 1 et 3), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[3,3.2,1],"digit":1,"values":[["[icon][img]res/img/numbers/match/match11.svg[/img][/icon]",1],["[icon][img]res/img/numbers/match/match21.svg[/img][/icon]",2],["[icon][img]res/img/numbers/match/match31.svg[/img][/icon]",3]]},"regexp":{"input":{"from":"([1-6])","to":"[dice][img]res/img/numbers/dice/dice0$1.svg[/img][/dice]"}},"template":"template.html","values":[["1","1"],["2","2"],["3","3"]],"class":"alpha p01", "font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>di6</dct:alternative>
        <dct:source>res/img/numbers/match/match*.svg,res/img/numbers/dice/dice*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>diii</dct:identifier>
        <dct:title xml:lang="en-US"></dct:title>
        <dct:title xml:lang="fr-FR">Evaluer la valeur d'un dé (choisi entre 1 et 2), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[5,3,1.2],"digit":1,"values":["1","2"]},"regexp":{"input":{"from":"([1-6])","to":"[dice][img]res/img/numbers/dice/dice0$1.svg[/img][/dice]"}},"template":"template.html","values":[["1","1"],["2","2"]],"class":"alpha p01", "font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>di6</dct:alternative>
        <dct:source>res/img/numbers/dice/dice*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>diiii</dct:identifier>
        <dct:title xml:lang="en-US"></dct:title>
        <dct:title xml:lang="fr-FR">Evaluer la valeur d'un dé (choisi entre 1 et 3), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[5,2,1.2],"digit":1,"values":["1","2","3"]},"regexp":{"input":{"from":"([1-6])","to":"[dice][img]res/img/numbers/dice/dice0$1.svg[/img][/dice]"}},"template":"template.html","values":[["1","1"],["2","2"],["3","3"]],"class":"alpha p01","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>di6</dct:alternative>
        <dct:source>res/img/numbers/dice/dice*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>divi</dct:identifier>
        <dct:title xml:lang="en-US"></dct:title>
        <dct:title xml:lang="fr-FR">Evaluer la valeur d'un dé (choisi entre 1 et 6), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[4,1.2,1.2],"digit":1,"values":["1","2","3","4","5","6"]},"regexp":{"input":{"from":"([1-6])","to":"[dice][img]res/img/numbers/dice/dice0$1.svg[/img][/dice]"}},"template":"template.html","values":[["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"]],"class":"alpha p01","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>di6</dct:alternative>
        <dct:source>res/img/numbers/dice/dice*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>di6</dct:identifier>
        <dct:title xml:lang="en-US"></dct:title>
        <dct:title xml:lang="fr-FR">Evaluer la valeur d'un dé (choisi entre 1 et 6) en utilisant le clavier numérique, sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":3,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([1-6])","to":"[dice][img]res/img/numbers/dice/dice0$1.svg[/img][/dice]"} },"values":["1","2","3","4","5","6"],"class":"alpha p01","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>di6</dct:alternative>
        <dct:source>res/img/numbers/dice/dice*.svg</dct:source>
    </rdf:Description>

    <!-- DIGITS: dg -->

    <rdf:Description>
        <dct:identifier>dgdi2</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter sur les doigts la valeur d'un dé (choisi entre 1 et 2), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":6,"input":{"attr":[5,3,1],"digit":1,"values":[["<div class='icon'><img src='res/img/svginventoryicons/human/lefthand01.svg'/></div>",1],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand02.svg'/></div>",2]]},"regexp":{"input":{"from":"([1-6])","to":"[dice][img]res/img/numbers/dice/dice0$1.svg[/img][/dice]"}},"template":"template.html","values":[["1","1"],["2","2"]],"class":"alpha p01","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dgca3</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dgdi3</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter sur les doigts la valeur d'un dé (choisi entre 1 et 3), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":6,"input":{"attr":[5,2,1],"digit":1,"values":[["<div class='icon'><img src='res/img/svginventoryicons/human/righthand01.svg'/></div>",1],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand02.svg'/></div>",2],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand03.svg'/></div>",3]]},"regexp":{"input":{"from":"([1-6])","to":"[dice][img]res/img/numbers/dice/dice0$1.svg[/img][/dice]"}},"template":"template.html","values":[["1","1"],["2","2"],["3","3"]],"class":"alpha p01","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dgca3</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dgdi4</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter sur les doigts la valeur d'un dé (choisi entre 1 et 4), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[5,1.5,1],"digit":1,"values":[["<div class='icon'><img src='res/img/svginventoryicons/human/righthand01.svg'/></div>",1],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand02.svg'/></div>",2],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand03.svg'/></div>",3],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand04.svg'/></div>",4]]},"regexp":{"input":{"from":"([1-6])","to":"[dice][img]res/img/numbers/dice/dice0$1.svg[/img][/dice]"}},"template":"template.html","values":[["1","1"],["2","2"],["3","3"],["4","4"]],"class":"alpha p01","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dgca3</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dgnu2</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter sur les doigts un nombre (choisi entre 1 et 2), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":6,"input":{"attr":[5,3,1],"digit":1,"values":[["<div class='icon'><img src='res/img/svginventoryicons/human/lefthand01.svg'/></div>",1],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand02.svg'/></div>",2]]},"template":"template.html","values":[["1","1"],["2","2"]],"class":"alpha", "font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dgca3</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dgnu3</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter sur les doigts un nombre (choisi entre 1 et 3), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":6,"input":{"attr":[5,2,1],"digit":1,"values":[["<div class='icon'><img src='res/img/svginventoryicons/human/righthand01.svg'/></div>",1],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand02.svg'/></div>",2],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand03.svg'/></div>",3]]},"template":"template.html","values":[["1","1"],["2","2"],["3","3"]],"class":"alpha", "font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dgca3</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dgca2</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter sur les doigts la valeur d'une carte (choisi entre 1 et 2), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":6,"input":{"attr":[5,3,1],"digit":1,"values":[["<div class='icon'><img src='res/img/svginventoryicons/human/lefthand01.svg'/></div>",1],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand02.svg'/></div>",2]]},"regexp":{"input":{"from":"([1-9a-z]+)","to":"<div class=\\\"h10 w07\\\"><img src=\\\"res/img/cards/0$1.svg\\\"/></div>"}},"template":"template.html","values":[["1hearts","1"],["2hearts","2"],["1clubs","1"],["2clubs","2"],["1spades","1"],["2spades","2"],["1diamonds","1"],["2diamonds","2"]],"class":"alpha wrong p00","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dgca3</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg,res/img/cards/*</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dgca3</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter sur les doigts la valeur d'une carte (choisi entre 1 et 3), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":6,"input":{"attr":[5,2,1],"digit":1,"values":[["<div class='icon'><img src='res/img/svginventoryicons/human/righthand01.svg'/></div>",1],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand02.svg'/></div>",2],["<div class='icon'><img src='res/img/svginventoryicons/human/righthand03.svg'/></div>",3]]},"regexp":{"input":{"from":"([1-9a-z]+)","to":"<div class=\\\"h10 w07\\\"><img src=\\\"res/img/cards/0$1.svg\\\"/></div>"}},"template":"template.html","values":[["1hearts","1"],["1clubs","1"],["1spades","1"],["1diamonds","1"],["2hearts","2"],["2clubs","2"],["2spades","2"],["2diamonds","2"],["3hearts","3"],["3clubs","3"],["3spades","3"],["3diamonds","3"]],"class":"alpha wrong p00","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dgca3</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg,res/img/cards/*</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg12</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 2), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":6,"input":{"attr":[5,3,1.2],"digit":1,"values":[["1",1],["2",2]]},"regexp":{"input":{"from":"([0-9a-z]+)","to":"<div class=\\\"icon center\\\"><img src=\\\"res/img/svginventoryicons/human/$1.svg\\\"/></div>"}},"template":"template.html","values":[["righthand01","1"],["righthand02","2"],["lefthand01","1"],["lefthand02","2"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg13</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 3), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"len":6,"input":{"attr":[5,2,1.2],"digit":1,"values":[["1",1],["2",2],["3","3"]]},"regexp":{"input":{"from":"([1-6])","to":"<div class=\\\"icon center\\\"><img src=\\\"res/img/svginventoryicons/human/righthand0$1.svg\\\"/></div>"}},"template":"template.html","values":[["1","1"],["2","2"],["3","3"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg14</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 4), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"regexp":{"input":{"from":"([1-6])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/human/lefthand0$1.svg\\\"/></div>"}},"values":[["1","1"],["2","2"],["3","3"],["4","4"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg15</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 5), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"regexp":{"input":{"from":"([1-6])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/human/lefthand0$1.svg\\\"/></div>"}},"values":[["1","1"],["2","2"],["3","3"],["4","4"],["5","5"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg16</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 6), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"regexp":{"input":{"from":"([a-z0-9]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/human/$1.svg\\\"/></div>"}},"values":[["lefthand01","1"],["lefthand02","2"],["lefthand03","3"],["lefthand04","4"],["lefthand05","5"],["lefthand05 righthand01","6"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg17</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 7), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"regexp":{"input":{"from":"([a-z0-9]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/human/$1.svg\\\"/></div>"}},"values":[["lefthand01","1"],["lefthand02","2"],["lefthand03","3"],["lefthand04","4"],["lefthand05","5"],["lefthand05 righthand01","6"],["lefthand05 righthand02","7"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg18</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 8), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"regexp":{"input":{"from":"([a-z0-9]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/human/$1.svg\\\"/></div>"}},"values":[["lefthand01","1"],["lefthand02","2"],["lefthand03","3"],["lefthand04","4"],["lefthand05","5"],["lefthand05 righthand01","6"],["lefthand05 righthand02","7"],["lefthand05 righthand03","8"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg19</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 9), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"regexp":{"input":{"from":"([a-z0-9]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/human/$1.svg\\\"/></div>"}},"values":[["lefthand01","1"],["lefthand02","2"],["lefthand03","3"],["lefthand04","4"],["lefthand05","5"],["lefthand05 righthand01","6"],["lefthand05 righthand02","7"],["lefthand05 righthand03","8"],["lefthand05 righthand04","9"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg10</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 1 et 10), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"regexp":{"input":{"from":"([a-z0-9]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/human/$1.svg\\\"/></div>"}},"values":[["lefthand01","1"],["lefthand02","2"],["lefthand03","3"],["lefthand04","4"],["lefthand05","5"],["lefthand05 righthand01","6"],["lefthand05 righthand02","7"],["lefthand05 righthand03","8"],["lefthand05 righthand04","9"],["lefthand05 righthand05","10"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>dg05</dct:identifier>
        <dct:title xml:lang="fr-FR">Compter le nombre de doigts d'une main (choisi entre 0 et 5), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"regexp":{"input":{"from":"([0-6])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/human/lefthand0$1.svg\\\"/></div>"}},"values":[["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"]],"class":"alpha wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>dg10</dct:alternative>
        <dct:source>res/img/svginventoryicons/human/*hand*.svg</dct:source>
    </rdf:Description>

    <!-- OBJECTS FROM 1 TO 10: o -->

    <rdf:Description>
        <dct:identifier>oii</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer le nombre de fruits (entre 1 et 2), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[5,3,1.2],"digit":1,"values":[["1","1"],["2","2"]]},"template":"template.html","regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"} },"values":[["pepper03",1],["tomato01",1],["apple01",1],["pepper03",1],["apricot01 apricot01",2],["pear01 pear01",2],["pepper01 pepper01",2],["banana01 banana01",2]],"class":"wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>o5y</dct:alternative>
        <dct:source>res/img/svginventoryicons/vegetable/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>o2</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer le nombre de fruits (entre 1 et 2), en utilisant le clavier numérique, sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"} },"values":[["pepper03",1],["tomato01",1],["apple01",1],["pepper03",1],["apricot01 apricot01",2],["pear01 pear01",2],["pepper01 pepper01",2],["banana01 banana01",2]],"class":"wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>o5y</dct:alternative>
        <dct:source>res/img/svginventoryicons/vegetable/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>oiii</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer le nombre de fruits (entre 1 et 3), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"attr":[5,2,1.2],"digit":1,"values":[["1","1"],["2","2"],["3","3"]]},"template":"template.html","regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"} },"values":[["pepper03",1],["tomato01",1],["apple01",1],["pepper03",1],["apricot01 apricot01",2],["pear01 pear01",2],["pepper01 pepper01",2],["banana01 banana01",2],["pepper02 pepper02 pepper02",3],["strawberry01 strawberry01 strawberry01",3],["banana01 banana01 banana01",3],["apple01 apple01 apple01",3]],"len":5,"class":"wrong","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>o5y</dct:alternative>
        <dct:source>res/img/svginventoryicons/vegetable/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>o3</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer le nombre de fruits (entre 1 et 3), en utilisant le clavier numérique, sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"} },"values":[["pepper03",1],["tomato01",1],["apple01",1],["pepper03",1],["apricot01 apricot01",2],["pear01 pear01",2],["pepper01 pepper01",2],["banana01 banana01",2],["pepper02 pepper02 pepper02",3],["strawberry01 strawberry01 strawberry01",3],["banana01 banana01 banana01",3],["apple01 apple01 apple01",3]],"len":5,"class":"wrong","font":2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>o5y</dct:alternative>
        <dct:source>res/img/svginventoryicons/vegetable/</dct:source>
    </rdf:Description>
 
    <rdf:Description>
        <dct:identifier>o4</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer le nombre de fruits (entre 1 et 4), en utilisant le clavier numérique, sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"} },"values":[["pepper03",1],["tomato01",1],["apple01",1],["pepper03",1],["apricot01 apricot01",2],["pear01 pear01",2],["pepper01 pepper01",2],["banana01 banana01",2],["pepper02 pepper02 pepper02",3],["strawberry01 strawberry01 strawberry01",3],["banana01 banana01 banana01",3],["apple01 apple01 apple01",3],["pepper01 pepper01 pepper01 pepper01",4],["apricot01 apricot01 apricot01 apricot01",4],["strawberry01 strawberry01 strawberry01 strawberry01",4],["pear01 pear01 pear01 pear01",4]],"len":7,"class":"wrong","font":1.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>o5y</dct:alternative>
        <dct:source>res/img/svginventoryicons/vegetable/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>o5</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer le nombre de fruits (entre 1 et 5), en utilisant le clavier numérique, sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"} },"values":[["pepper03",1],["tomato01",1],["apple01",1],["pepper03",1],["apricot01 apricot01",2],["pear01 pear01",2],["pepper01 pepper01",2],["banana01 banana01",2],["pepper02 pepper02 pepper02",3],["strawberry01 strawberry01 strawberry01",3],["banana01 banana01 banana01",3],["apple01 apple01 apple01",3],["pepper01 pepper01 pepper01 pepper01",4],["apricot01 apricot01 apricot01 apricot01",4],["strawberry01 strawberry01 strawberry01 strawberry01",4],["pear01 pear01 pear01 pear01",4],["pear01 pear01 pear01 pear01 pear01",5],["pepper02 pepper02 pepper02 pepper02 pepper02",5],["tomato01 tomato01 tomato01 tomato01 tomato01",5],["apple01 apple01 apple01 apple01 apple01",5]],"len":8,"class":"wrong","font":1.4]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>o5y</dct:alternative>
        <dct:source>res/img/svginventoryicons/vegetable/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>o5x</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer, en moins de 20 secondes, le nombre de fruits (entre 1 et 5), en utilisant le clavier numérique</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"} },"values":[["pepper03",1],["tomato01",1],["apple01",1],["pepper03",1],["apricot01 apricot01",2],["pear01 pear01",2],["pepper01 pepper01",2],["banana01 banana01",2],["pepper02 pepper02 pepper02",3],["strawberry01 strawberry01 strawberry01",3],["banana01 banana01 banana01",3],["apple01 apple01 apple01",3],["pepper01 pepper01 pepper01 pepper01",4],["apricot01 apricot01 apricot01 apricot01",4],["strawberry01 strawberry01 strawberry01 strawberry01",4],["pear01 pear01 pear01 pear01",4],["pear01 pear01 pear01 pear01 pear01",5],["pepper02 pepper02 pepper02 pepper02 pepper02",5],["tomato01 tomato01 tomato01 tomato01 tomato01",5],["apple01 apple01 apple01 apple01 apple01",5]],"class":"wrong","font":1.4]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>o5y</dct:alternative>
        <dct:source>res/img/svginventoryicons/vegetable/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>o5y</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer, en moins de 12 secondes, le nombre de fruits (entre 1 et 5), en utilisant le clavier numérique</dct:title>
        <dct:description><![CDATA["time":0.6,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/vegetable/$1.svg\\\"/></div>"} },"values":[["pepper03",1],["tomato01",1],["apple01",1],["pepper03",1],["apricot01 apricot01",2],["pear01 pear01",2],["pepper01 pepper01",2],["banana01 banana01",2],["pepper02 pepper02 pepper02",3],["strawberry01 strawberry01 strawberry01",3],["banana01 banana01 banana01",3],["apple01 apple01 apple01",3],["pepper01 pepper01 pepper01 pepper01",4],["apricot01 apricot01 apricot01 apricot01",4],["strawberry01 strawberry01 strawberry01 strawberry01",4],["pear01 pear01 pear01 pear01",4],["pear01 pear01 pear01 pear01 pear01",5],["pepper02 pepper02 pepper02 pepper02 pepper02",5],["tomato01 tomato01 tomato01 tomato01 tomato01",5],["apple01 apple01 apple01 apple01 apple01",5]],"class":"wrong","font":1.4]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>o5y</dct:alternative>
        <dct:source>res/img/svginventoryicons/vegetable/</dct:source>
    </rdf:Description>


    <!-- COINS FROM 1 TO 10: c -->

    <rdf:Description>
        <dct:identifier>c2</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 2), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["number":4,"time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([1]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/coin/coin1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2]],"class":"wrong","font":3]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>c20</dct:alternative>
        <dct:coverage xml:lang="fr-FR">MAT,monnaie</dct:coverage>
        <dct:source>res/img/coin/coin*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c3</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 3), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["number":6,"time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([1]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/coin/coin1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3]],"class":"wrong","font":2]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>c20</dct:alternative>
        <dct:coverage xml:lang="fr-FR">MAT,monnaie</dct:coverage>
        <dct:source>res/img/coin/coin*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c4</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 4), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["number":6,"time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([1]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/coin/coin1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4]],"class":"wrong","font":1.5]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>c20</dct:alternative>
        <dct:coverage xml:lang="fr-FR">MAT,monnaie</dct:coverage>
        <dct:source>res/img/coin/coin*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c5</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 5), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["number":8,"time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([1]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/coin/coin1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4],["1 1 1 1 1",5]],"class":"wrong","font":1.4]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>c20</dct:alternative>
        <dct:coverage xml:lang="fr-FR">MAT,monnaie</dct:coverage>
        <dct:source>res/img/coin/coin*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c05</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 5), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([1-9]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/coin/coins$1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["2",2],["1 1 1",3],["2 1",3],["1 2",3],["1 1 1 1",4],["2 1 1",4],["1 2 1",4],["1 1 2",4],["1 3",4],["3 1",4],["1 1 1 1 1",5],["2 1 1 1",5],["1 2 1 1",5],["1 1 2 1",5],["1 1 1 2",5],["3 2",5],["1 3 1",5],["2 3",5]],"class":"wrong p02","font":1.4]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP,monnaie</dct:coverage>
        <dct:source>res/img/coin/coin*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c10</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 10), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"input":{"digit":2,"speed":5000},"regexp":{"input": { "from": "([1-9A]+)","to":"<div class=\\\"icon icon$1\\\"><img src=\\\"res/img/coin/coin$1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4],["1 1 1 1 1",5],["5 1",6],["5 1 1",7],["5 1 1 1",8],["5 1 1 1 1",9],["A",10]],"class":"wrong p02","font":1.1]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP,monnaie</dct:coverage>
        <dct:source>res/img/coin/coin*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c15</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 15), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"input":{"digit":2,"speed":5000},"regexp":{"input": { "from": "([1-9A]+)","to":"<div class=\\\"icon icon$1\\\"><img src=\\\"res/img/coin/coin$1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4],["1 1 1 1 1",5],["5 1",6],["5 1 1",7],["5 1 1 1",8],["5 1 1 1 1",9],["A",10],["A 1",11],["A 1 1",12],["A 1 1 1",13],["A 1 1 1 1",14],["A 1 1 1 1 1",15],["A 1 1 1 1 1",15]],"class":"wrong p02"]]></dct:description>
        <dct:extent>3</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP,monnaie</dct:coverage>
        <dct:source>res/img/coin/coin*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>c20</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 20), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"input":{"digit":2,"speed":5000},"regexp":{"input": { "from": "([1-9A]+)","to":"<div class=\\\"icon icon$1\\\"><img src=\\\"res/img/coin/coin$1.svg\\\"/></div>"} },"values":[["1",1],["1 1",2],["1 1 1",3],["1 1 1 1",4],["1 1 1 1 1",5],["5 1",6],["5 1 1",7],["5 1 1 1",8],["5 1 1 1 1",9],["A",10],["A 1",11],["A 1 1",12],["A 1 1 1",13],["A 1 1 1 1",14],["A 1 1 1 1 1",15],["A 5 1",16],["A 5 1 1",17],["A 5 1 1 1",18],["A 5 1 1 1 1",19],["A A",20],["A A",20],["A A",20]],"class":"wrong p02","font":0.8]]></dct:description>
        <dct:extent>3</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP,monnaie</dct:coverage>
        <dct:source>res/img/coin/coin*.svg</dct:source>
    </rdf:Description>
    
    <rdf:Description>
        <dct:identifier>c50</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 50), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["gg":50,"number":15,"time":0,"input":{"digit":2,"speed":5000},"gen":"function($this,_s,_i){var nb = Math.floor(Math.random()*_s.gg)+1,v=[100,50,20,10,5,2,1],i=0,b=nb,ret=''; while(b>0&&i<v.length){ if (v[i]<=b) {b-=v[i]; ret+='<div style=\\\"float:left;height:1em;width:'+(v[i]>=5?2:1)+'em;\\\"><img src=\\\"res/img/coin/'+(v[i]>=5?'bill':'coin')+v[i]+'.svg\\\"></div>';} else {i++;} } return [ret,nb];}","class":"wrong h20 p02","font":1]]></dct:description>
        <dct:extent>3</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP,monnaie</dct:coverage>
        <dct:source>res/img/coin/coin*.svg</dct:source>
    </rdf:Description>
    
    <rdf:Description>
        <dct:identifier>c100</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 100), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["gg":100,"input":{"digit":3,"speed":5000}]]></dct:description>
        <dct:extent>3</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP,monnaie</dct:coverage>
        <dct:source>res/img/coin/coin*.svg</dct:source>
        <dct:relation>c50</dct:relation>
    </rdf:Description>
    
    <rdf:Description>
        <dct:identifier>c100u</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 100), en moins de 8 secondes par valeur.</dct:title>
        <dct:description><![CDATA["gg":100,"time":8,"timemode":true,"input":{"digit":3,"speed":5000}]]></dct:description>
        <dct:extent>3</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP,monnaie</dct:coverage>
        <dct:source>res/img/coin/coin*.svg</dct:source>
        <dct:relation>c50</dct:relation>
    </rdf:Description>
    
    <rdf:Description>
        <dct:identifier>c200</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 200), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["gg":199,"input":{"digit":3,"speed":5000}]]></dct:description>
        <dct:extent>3</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CE1,monnaie</dct:coverage>
        <dct:source>res/img/coin/coin*.svg</dct:source>
        <dct:relation>c50</dct:relation>
    </rdf:Description>
    
    <rdf:Description>
        <dct:identifier>c200u</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier le nombre de pièces de monnaie (entre 1 et 200), en moins de 8 secondes par valeur.</dct:title>
        <dct:description><![CDATA["gg":199,"time":8,"timemode":true,"input":{"digit":3,"speed":5000}]]></dct:description>
        <dct:extent>3</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>c20</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CE1,monnaie</dct:coverage>
        <dct:source>res/img/coin/coin*.svg</dct:source>
        <dct:relation>c50</dct:relation>
    </rdf:Description>

    <!-- BOXES FROM 1 TO 10: b -->

    <rdf:Description>
        <dct:identifier>b2</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, sans contrainte de temps, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 2.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>b5</dct:alternative>
        <dct:source>res/img/numbers/box/box*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b3</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, sans contrainte de temps, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 3</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"],["13","4"],["31","4"],["32","5"],["23","5"],["33","6"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>b5</dct:alternative>
        <dct:source>res/img/numbers/box/box*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b4</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, sans contrainte de temps, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 4</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"],["13","4"],["31","4"],["32","5"],["23","5"],["33","6"],["41","5"],["14","5"],["42","6"],["24","6"],["43","7"],["34","7"],["44","8"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>b5</dct:alternative>
        <dct:source>res/img/numbers/box/box*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b5</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, sans contrainte de temps, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 5</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"],["13","4"],["31","4"],["32","5"],["23","5"],["33","6"],["41","5"],["14","5"],["42","6"],["24","6"],["43","7"],["34","7"],["44","8"],["51","6"],["15","6"],["52","7"],["25","7"],["53","8"],["35","8"],["54","9"],["45","9"],["55","10"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>b5</dct:alternative>
        <dct:source>res/img/numbers/box/box*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b5x</dct:identifier>
        <dct:title xml:lang="fr-FR">Numérer, en moins de 40 secondes, 2 groupes de cubes dont les quantités respectives sont comprises entre 1 et 5</dct:title>
        <dct:description><![CDATA["time":2,"input":{"digit":2,"speed":5000},"regexp":{"input": { "from": "([1-5])","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box/box0$1.svg\\\"/></div>"} },"values":[["11","2"],["12","3"],["21","3"],["22","4"],["13","4"],["31","4"],["32","5"],["23","5"],["33","6"],["41","5"],["14","5"],["42","6"],["24","6"],["43","7"],["34","7"],["44","8"],["51","6"],["15","6"],["52","7"],["25","7"],["53","8"],["35","8"],["54","9"],["45","9"],["55","10"]],"class":"alpha left neg","font":3.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>addition</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>b5</dct:alternative>
    </rdf:Description>

    <!-- -->

    <rdf:Description>
        <dct:identifier>b15</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, sans contrainte de temps, le nombre de cubes (entre 1 et 15)</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box/box$1.svg\\\"/></div>"} },"values":[["01",1],["02",2],["03",3],["04",4],["05",5],["06",6],["07",7],["08",8],["09",9],["10",10],["10 01",11],["10 02",12],["10 03",13],["10 04",14],["10 05",15]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>b200y</dct:alternative>
        <dct:source>res/img/numbers/box/box*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b20</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, sans contrainte de temps, le nombre de cubes (entre 1 et 20)</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box/box$1.svg\\\"/></div>"} },"values":[["01",1],["02",2],["03",3],["04",4],["05",5],["06",6],["07",7],["08",8],["09",9],["10",10],["10 01",11],["10 02",12],["10 03",13],["10 04",14],["10 05",15],["10 06",16],["10 07",17],["10 08",18],["10 09",19],["20",20]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>b200y</dct:alternative>
        <dct:source>res/img/numbers/box/box*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b50</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, sans contrainte de temps, le nombre de cubes (entre 1 et 49)</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box/box$1.svg\\\"/></div>"} },"gen":"function(){var a=Math.floor(Math.random()*49)+1, b=a, ret=\\\"\\\"; while(a>0) { if (ret.length) { ret+=\\\" \\\"; } if (a>=100) { ret+=\\\"100\\\"; a-=100; } else if (a>=50) { ret+=\\\"50\\\"; a-=50; } else if (a>=40) { ret+=\\\"40\\\"; a-=40; } else if (a>=30) { ret+=\\\"30\\\"; a-=30; } else if (a>=20) { ret+=\\\"20\\\"; a-=20; } else if (a>=10) { ret+=\\\"10\\\"; a-=10; } else { ret+=\\\"0\\\"+a; a=0; } } return [ret, b];}","class":"wrong gray","font":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>b200y</dct:alternative>
        <dct:source>res/img/numbers/box/box*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b100</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, sans contrainte de temps, le nombre de cubes (entre 1 et 99)</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box/box$1.svg\\\"/></div>"} },"gen":"function(){var a=Math.floor(Math.random()*99)+1, b=a, ret=\\\"\\\"; while(a>0) { if (ret.length) { ret+=\\\" \\\"; } if (a>=100) { ret+=\\\"100\\\"; a-=100; } else if (a>=50) { ret+=\\\"50\\\"; a-=50; } else if (a>=40) { ret+=\\\"40\\\"; a-=40; } else if (a>=30) { ret+=\\\"30\\\"; a-=30; } else if (a>=20) { ret+=\\\"20\\\"; a-=20; } else if (a>=10) { ret+=\\\"10\\\"; a-=10; } else { ret+=\\\"0\\\"+a; a=0; } } return [ret, b];}","class":"wrong gray","font":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>b200y</dct:alternative>
        <dct:source>res/img/numbers/box/box*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b100x</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, en moins de 40 secondes, le nombre de cubes (entre 1 et 99)</dct:title>
        <dct:description><![CDATA["time":2,"input":{"digit":2,"speed":5000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box/box$1.svg\\\"/></div>"} },"gen":"function(){var a=Math.floor(Math.random()*99)+1, b=a, ret=\\\"\\\"; while(a>0) { if (ret.length) { ret+=\\\" \\\"; } if (a>=100) { ret+=\\\"100\\\"; a-=100; } else if (a>=50) { ret+=\\\"50\\\"; a-=50; } else if (a>=40) { ret+=\\\"40\\\"; a-=40; } else if (a>=30) { ret+=\\\"30\\\"; a-=30; } else if (a>=20) { ret+=\\\"20\\\"; a-=20; } else if (a>=10) { ret+=\\\"10\\\"; a-=10; } else { ret+=\\\"0\\\"+a; a=0; } } return [ret, b];}","class":"wrong gray","font":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>b200y</dct:alternative>
        <dct:source>res/img/numbers/box/box*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b100y</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, en moins de 20 secondes, le nombre de cubes (entre 1 et 99)</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":2,"speed":5000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box/box$1.svg\\\"/></div>"} },"gen":"function(){var a=Math.floor(Math.random()*99)+1, b=a, ret=\\\"\\\"; while(a>0) { if (ret.length) { ret+=\\\" \\\"; } if (a>=100) { ret+=\\\"100\\\"; a-=100; } else if (a>=50) { ret+=\\\"50\\\"; a-=50; } else if (a>=40) { ret+=\\\"40\\\"; a-=40; } else if (a>=30) { ret+=\\\"30\\\"; a-=30; } else if (a>=20) { ret+=\\\"20\\\"; a-=20; } else if (a>=10) { ret+=\\\"10\\\"; a-=10; } else { ret+=\\\"0\\\"+a; a=0; } } return [ret, b];}","class":"wrong gray","font":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>b200y</dct:alternative>
        <dct:source>res/img/numbers/box/box*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b200</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, sans contrainte de temps, le nombre de cubes (entre 1 et 199)</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":3,"speed":5000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box/box$1.svg\\\"/></div>"} },"gen":"function(){var a=Math.floor(Math.random()*199)+1, b=a, ret=\\\"\\\"; while(a>0) { if (ret.length) { ret+=\\\" \\\"; } if (a>=100) { ret+=\\\"100\\\"; a-=100; } else if (a>=50) { ret+=\\\"50\\\"; a-=50; } else if (a>=40) { ret+=\\\"40\\\"; a-=40; } else if (a>=30) { ret+=\\\"30\\\"; a-=30; } else if (a>=20) { ret+=\\\"20\\\"; a-=20; } else if (a>=10) { ret+=\\\"10\\\"; a-=10; } else { ret+=\\\"0\\\"+a; a=0; } } return [ret, b];}","class":"wrong gray","font":1.6]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>b200y</dct:alternative>
        <dct:source>res/img/numbers/box/box*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b200x</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, en moins de 40 secondes, le nombre de cubes (entre 1 et 199)</dct:title>
        <dct:description><![CDATA["time":2,"input":{"digit":3,"speed":5000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box/box$1.svg\\\"/></div>"} },"gen":"function(){var a=Math.floor(Math.random()*199)+1, b=a, ret=\\\"\\\"; while(a>0) { if (ret.length) { ret+=\\\" \\\"; } if (a>=100) { ret+=\\\"100\\\"; a-=100; } else if (a>=50) { ret+=\\\"50\\\"; a-=50; } else if (a>=40) { ret+=\\\"40\\\"; a-=40; } else if (a>=30) { ret+=\\\"30\\\"; a-=30; } else if (a>=20) { ret+=\\\"20\\\"; a-=20; } else if (a>=10) { ret+=\\\"10\\\"; a-=10; } else { ret+=\\\"0\\\"+a; a=0; } } return [ret, b];}","class":"wrong gray","font":1.6]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>b200y</dct:alternative>
        <dct:source>res/img/numbers/box/box*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>b200y</dct:identifier>
        <dct:title xml:lang="fr-FR">Quantifier, en moins de 20 secondes, le nombre de cubes (entre 1 et 199)</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":3,"speed":5000},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/box/box$1.svg\\\"/></div>"} },"gen":"function(){var a=Math.floor(Math.random()*199)+1, b=a, ret=\\\"\\\"; while(a>0) { if (ret.length) { ret+=\\\" \\\"; } if (a>=100) { ret+=\\\"100\\\"; a-=100; } else if (a>=50) { ret+=\\\"50\\\"; a-=50; } else if (a>=40) { ret+=\\\"40\\\"; a-=40; } else if (a>=30) { ret+=\\\"30\\\"; a-=30; } else if (a>=20) { ret+=\\\"20\\\"; a-=20; } else if (a>=10) { ret+=\\\"10\\\"; a-=10; } else { ret+=\\\"0\\\"+a; a=0; } } return [ret, b];}","class":"wrong gray","font":1.6]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de cubes ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>5</dct:type>
        <dct:alternative>b200y</dct:alternative>
        <dct:source>res/img/numbers/box/box*.svg</dct:source>
    </rdf:Description>

    <!-- 2D boxes -->

    <rdf:Description>
        <dct:identifier>2d14</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer, sans contrainte de temps, des carrés (de 1 à 4).</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"input":{"digit":1,"speed":500},"gen":"function(){var n=2,b=[],val=Math.floor(Math.random()*n*n)+1,ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:1;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\";for(var i=0;i<n*n;i++){ b.push(false); }for(var i=0;i<val;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b[x]);b[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"alpha p02","font":3]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>2d110</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>2d19</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer, sans contrainte de temps, des carrés (de 1 à 9).</dct:title>
        <dct:description><![CDATA["number":12,"time":0,"input":{"digit":1,"speed":500},"gen":"function(){var n=3,b=[],val=Math.floor(Math.random()*n*n)+1,ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\";for(var i=0;i<n*n;i++){ b.push(false); }for(var i=0;i<val;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b[x]);b[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"alpha p02","font":3]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>2d110</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>2d110</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer, sans contrainte de temps, des carrés (de 1 à 10).</dct:title>
        <dct:description><![CDATA["number":12,"time":0,"input":{"digit":2,"speed":5000},"gen":"function(){var n=4,b=[],val=Math.floor(Math.random()*10)+1,ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\";for(var i=0;i<n*n;i++){ b.push(false); }for(var i=0;i<val;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b[x]);b[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"alpha p02","font":3]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>2d110</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>2d116</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer, sans contrainte de temps, des carrés (de 1 à 16).</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"input":{"digit":2,"speed":5000},"gen":"function(){var n=4,b=[],val=Math.floor(Math.random()*n*n)+1,ret=\\\"<div style='width:1em;margin-left:.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>rect {fill:#08F;stroke:white;stroke-width:0.5;}.wrong rect {fill:red;}.good rect {fill:green;}</style></def>\\\";for(var i=0;i<n*n;i++){ b.push(false); }for(var i=0;i<val;i++){var x;do{x=Math.floor(Math.random()*n*n);}while(b[x]);b[x]=true;ret+=\\\"<rect x='\\\"+(Math.floor(48/n)*(x%n)+1)+\\\"' y='\\\"+(Math.floor(48/n)*Math.floor(x/n)+1)+\\\"' width='\\\"+(Math.floor(48/n)-2)+\\\"' height='\\\"+(Math.floor(48/n)-2)+\\\"' ry='\\\"+Math.floor(12/n)+\\\"'/>\\\";} ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"alpha p02","font":3]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>2d110</dct:alternative>
    </rdf:Description>

    <!-- 3D boxes -->

    <rdf:Description>
        <dct:identifier>3d41</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 1 à 4 sur une grille 2x2x1).</dct:title>
        <dct:description><![CDATA["gg":{"n":2,"h":1,"nb":[4,1]},"time":0,"input":{"digit":2,"speed":5000},"gen":"function($this,_s,_id){var n=_s.gg.n,h=_s.gg.h,nb=Math.floor(Math.random()*_s.gg.nb[0])+_s.gg.nb[1],box=['002','012','022','032','023'],data=[],val=0,ret=\\\"<div style='width:1em;margin-left:.2em;position:relative'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 48 48'><def><style>path {fill:gray;}.good path{fill:green;}.wrong path{fill:red;}</style></def><path d='M 0,36 L 24,24 L 48,36 L 24,48 L 0,36 z'/></svg><div style='font-size:\\\"+(1/(3*n))+\\\"em;position:absolute;top:0;left:0;overflow:visible;'>\\\";for(var i=0;i<n*n;i++){data.push(0);}var nbx=0;while(nbx<nb){var x=Math.floor(Math.random()*n),y=Math.floor(Math.random()*n),vok=true; if (x>0&&y>0&&data[x-1+(y-1)*n]<=data[x+y*n]){ vok=false;} if(vok&&data[x+y*n]<h) { data[x+y*n]++; nbx++;}}for(var i=0;i<n;i++)for(j=0;j<n;j++)for(h=0;h<data[i+j*n];h++){ val++; ret+=\\\"<div style='width:3em;height:4em;position:absolute;top:\\\"+((n-1)*1.5-0.95+(i+j)*0.75-h*1.4)+\\\"em;left:\\\"+((n-1)*1.5+i*1.5-j*1.5)+\\\"em;'><img src='res/img/tileset/iso/object/box\\\"+box[Math.floor(Math.random()*box.length)]+\\\".svg'/></div>\\\"; }ret+=\\\"</div></div>\\\"; return [ret, val];}","class":"alpha blank","font":5,"number":15]]></dct:description>
		<dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de [b]cartons[/b] sont présents ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>3d203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
        <dct:source>res/img/tileset/iso/object/box*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>3d82</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 1 à 4 sur une grille 2x2x2).</dct:title>
        <dct:description><![CDATA["gg":{"n":2,"h":2,"nb":[4,1]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>3d203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
        <dct:source>res/img/tileset/iso/object/box*.svg</dct:source>
		<dct:relation>3d41</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>3d91</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 1 à 9 sur une grille 3x3x1).</dct:title>
        <dct:description><![CDATA["gg":{"n":3,"h":1,"nb":[9,1]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>3d203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
        <dct:source>res/img/tileset/iso/object/box*.svg</dct:source>
		<dct:relation>3d41</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>3d102</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 1 à 10 sur une grille 3x3x2).</dct:title>
        <dct:description><![CDATA["gg":{"n":3,"h":2,"nb":[10,1]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>3d203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
        <dct:source>res/img/tileset/iso/object/box*.svg</dct:source>
		<dct:relation>3d41</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>3d103</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 1 à 10 sur une grille 3x3x3).</dct:title>
        <dct:description><![CDATA["gg":{"n":3,"h":3,"nb":[10,1]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>3d203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
        <dct:source>res/img/tileset/iso/object/box*.svg</dct:source>
		<dct:relation>3d41</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>3d203</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 1 à 20 sur une grille 3x3x3).</dct:title>
        <dct:description><![CDATA["gg":{"n":3,"h":3,"nb":[20,1]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>3d203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
        <dct:source>res/img/tileset/iso/object/box*.svg</dct:source>
		<dct:relation>3d41</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>3d202</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 1 à 20 sur une grille 4x4x2).</dct:title>
        <dct:description><![CDATA["gg":{"n":4,"h":2,"nb":[20,1]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>3d203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
        <dct:source>res/img/tileset/iso/object/box*.svg</dct:source>
		<dct:relation>3d41</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>3d20b3</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 10 à 20 sur une grille 4x4x3).</dct:title>
        <dct:description><![CDATA["gg":{"n":4,"h":3,"nb":[11,10]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>3d203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
        <dct:source>res/img/tileset/iso/object/box*.svg</dct:source>
		<dct:relation>3d41</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>3d304</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 10 à 30 sur une grille 4x4x4).</dct:title>
        <dct:description><![CDATA["gg":{"n":4,"h":4,"nb":[21,10]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>3d203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
        <dct:source>res/img/tileset/iso/object/box*.svg</dct:source>
		<dct:relation>3d41</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>3d504</dct:identifier>
        <dct:title xml:lang="fr-FR">Dénombrer des boites de rangement sans contrainte de temps (de 30 à 50 sur une grille 5x5x4).</dct:title>
        <dct:description><![CDATA["gg":{"n":5,"h":4,"nb":[51,30]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>3d203</dct:alternative>
        <dct:coverage xml:lang="fr-FR">aléatoire</dct:coverage>
        <dct:source>res/img/tileset/iso/object/box*.svg</dct:source>
		<dct:relation>3d41</dct:relation>
    </rdf:Description>

    <!-- Criteria - blue potion : p-->

    <rdf:Description>
        <dct:identifier>p122</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 2 sur 2) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["yellow01 blue02",1],["blue01 red01",1],["blue03 purple04",1],["red01 blue01",1],["blue01 yellow01",1],["white01 blue03",1],["blue04 blue01",2],["blue02 blue03",2],["blue01 blue01",2],["blue04 blue04",2],["blue01 blue02",2],["blue03 blue01",2]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
        <dct:source>res/img/svginventoryicons/potion/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p125</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 2 sur 5) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["red01 blue01 red03 yellow03 red02",1],["orange02 purple02 red01 blue01 yellow01",1],["white01 blue03 green03 yellow03 red02",1],["green04 red01 purple02 blue04 blue01",2],["blue02 blue03 red02 purple01 yellow04",2],["green01 blue01 blue01 green01 green01",2]],"class":"wrong gray","font":1.4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
        <dct:source>res/img/svginventoryicons/potion/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p133</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 3 sur 3) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["blue01 red03 yellow01",1],["orange01 yellow01 blue01",1],["white04 blue02 purple03",1],["green01 blue02 blue03",2],["purple02 blue04 blue03",2],["blue01 blue01 green01",2],["blue01 blue02 blue03",3],["blue03 blue03 blue03",3]],"class":"wrong gray","font":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
        <dct:source>res/img/svginventoryicons/potion/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p135</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 3 sur 5) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["blue01 red02 red03 red04 red01",1],["purple01 orange01 yellow01 green01 blue01",1],["white04 blue02 white03 white01 white04",1],["red04 green01 blue02 blue03 purple03",2],["red01 yellow03 purple02 blue04 blue03",2],["purple01 blue01 blue01 purple01 purple01",2],["yellow03 purple02 blue01 blue02 blue03",3],["yellow02 blue02 blue02 blue02 red02",3]],"class":"wrong gray","font":1.4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
        <dct:source>res/img/svginventoryicons/potion/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p144</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 4 sur 4) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["blue01 yellow02 yellow01 yellow01",1],["orange01 yellow01 red01 blue01",1],["white04 blue02 purple03 red04",1],["red04 blue02 blue01 red03",2],["red01 red03 blue04 blue01",2],["green01 blue01 blue01 green01",2],["yellow03 blue01 blue02 blue04",3],["yellow03 blue03 blue03 blue03",3],["blue04 blue03 blue02 blue01",4],["blue01 blue01 blue01 blue01",4],["blue04 blue03 blue04 blue01",4]],"class":"wrong gray","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
        <dct:source>res/img/svginventoryicons/potion/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p145</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 4 sur 5) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["blue01 red02 red03 yellow01 red01",1],["orange01 yellow01 red01 green01 blue01",1],["white04 blue02 purple03 yellow01 red04",1],["red04 red04 blue02 blue03 red04",2],["red01 yellow03 purple02 blue04 blue03",2],["green01 blue01 blue01 green01 green01",2],["yellow03 purple02 blue01 blue02 blue03",3],["yellow03 blue03 blue03 blue03 red03",3],["blue04 blue03 blue02 blue01 white03",4],["yellow01 blue01 blue01 blue01 blue01",4],["blue04 blue03 blue04 blue01 purple02 ",4]],"class":"wrong gray","font":1.4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
        <dct:source>res/img/svginventoryicons/potion/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p155</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 5 sur 5) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["blue01 red02 red03 yellow01 red01",1],["orange01 yellow01 red01 green01 blue01",1],["white04 blue02 purple03 yellow01 red04",1],["red04 green01 blue02 blue03 purple03",2],["red01 yellow03 purple02 blue04 blue03",2],["green01 blue01 blue01 green01 green01",2],["yellow03 purple02 blue01 blue02 blue03",3],["yellow03 blue03 blue03 blue03 red03",3],["blue04 blue03 blue02 blue01 white03",4],["yellow01 blue01 blue01 blue01 blue01",4],["blue04 blue03 blue04 blue01 purple02 ",4],["blue01 blue01 blue01 blue01 blue01",5],["blue02 blue01 blue03 blue04 blue01",5],["blue04 blue04 blue04 blue04 blue04",5]],"class":"wrong gray","font":1.4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
        <dct:source>res/img/svginventoryicons/potion/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p155x</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, en moins de 20 secondes, le nombre d'élèments (de 1 à 5 sur 5) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["blue01 red02 red03 yellow01 red01",1],["orange01 yellow01 red01 green01 blue01",1],["white04 blue02 purple03 yellow01 red04",1],["red04 green01 blue02 blue03 purple03",2],["red01 yellow03 purple02 blue04 blue03",2],["green01 blue01 blue01 green01 green01",2],["yellow03 purple02 blue01 blue02 blue03",3],["yellow03 blue03 blue03 blue03 red03",3],["blue04 blue03 blue02 blue01 white03",4],["yellow01 blue01 blue01 blue01 blue01",4],["blue04 blue03 blue04 blue01 purple02 ",4],["blue01 blue01 blue01 blue01 blue01",5],["blue02 blue01 blue03 blue04 blue01",5],["blue04 blue04 blue04 blue04 blue04",5]],"class":"wrong gray","font":1.4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>p055</dct:alternative>
        <dct:source>res/img/svginventoryicons/potion/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p033</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 0 à 3 sur 3) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["white02 red04 green02",0],["orange01 red01 green01",0],["red03 red01 purple03",0],["blue01 red03 yellow01",1],["orange01 yellow01 blue01",1],["white04 blue02 purple03",1],["green01 blue02 blue03",2],["purple02 blue04 blue03",2],["blue01 blue01 green01",2],["blue01 blue02 blue03",3],["blue03 blue03 blue03",3]],"class":"wrong gray","font":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
        <dct:source>res/img/svginventoryicons/potion/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p055</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 0 à 5 sur 5) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["white02 white03 red04 yellow01 green02",0],["orange01 red01 green01 yellow01 white01",0],["red03 purple04 yellow01 red01 purple03",0],["white02 white03 red04 yellow01 green02",0],["orange01 red01 green01 yellow01 white01",0],["red03 purple04 yellow01 red01 purple03",0],["red01 blue01 red03 yellow03 red02",1],["orange02 purple02 red01 blue01 yellow01",1],["white01 blue03 green03 yellow03 red02",1],["green04 red01 purple02 blue04 blue01",2],["blue02 blue03 red02 purple01 yellow04",2],["green01 blue01 blue01 green01 green01",2],["purple03 purple03 blue01 blue01 blue01",3],["blue01 blue01 blue01 yellow03 red03",3],["green04 blue04 blue04 blue04 green04",3],["blue04 blue03 blue02 blue01 green03",4],["red01 blue01 blue01 blue01 blue01",4],["white01 blue02 blue02 blue04 blue01",4],["blue03 blue03 blue04 blue02 blue02",5],["blue02 blue01 blue03 blue04 blue01",5],["blue04 blue04 blue04 blue04 blue04",5]],"class":"wrong gray","font":1.4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>p055</dct:alternative>
        <dct:source>res/img/svginventoryicons/potion/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>p033x</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, en moins de 20 secondes, un nombre d'élèments (de 0 à 3 sur 3) vérifiant un critère donné (potion bleue).</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/svginventoryicons/potion/$1.svg\\\"/></div>"} },"values":[["white02 red04 green02",0],["orange01 red01 green01",0],["red03 red01 purple03",0],["blue01 red03 yellow01",1],["orange01 yellow01 blue01",1],["white04 blue02 purple03",1],["green01 blue02 blue03",2],["purple02 blue04 blue03",2],["blue01 blue01 green01",2],["blue01 blue02 blue03",3],["blue03 blue03 blue03",3]],"class":"wrong gray","font":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre de potions <span style='color:blue;'><b>BLEUES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>p055</dct:alternative>
        <dct:source>res/img/svginventoryicons/potion/</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>m12</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 2) vérifiant un critère donné (allumette intacte).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/match/match$1.svg\\\"/></div>"} },"values":[["01 12",1],["03 11",1],["14 03",1],["11",1],["13",1],["11 02",1],["11 11",2],["12 13",2],["21",2],["23",2],["01 24",2],["14 14",2]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre d'allumettes <span style='color:red;'><b>INTACTES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>m15</dct:alternative>
        <dct:source>res/img/numbers/match/match*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>m13</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 3) vérifiant un critère donné (allumette intacte).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/match/match$1.svg\\\"/></div>"} },"values":[["01 12",1],["03 11",1],["14 03",1],["11",1],["13",1],["11 02",1],["11 11",2],["12 13",2],["21",2],["23",2],["01 24",2],["14 14",2],["22 12",3],["31 03",3],["24 13",3],["31",3],["14 23",3]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre d'allumettes <span style='color:red;'><b>INTACTES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>m15</dct:alternative>
        <dct:source>res/img/numbers/match/match*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>m14</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 4) vérifiant un critère donné (allumette intacte).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/match/match$1.svg\\\"/></div>"} },"values":[["01 12",1],["14 03",1],["11",1],["13",1],["11 02",1],["12 13",2],["21",2],["23",2],["01 24",2],["14 14",2],["31 03",3],["24 13",3],["31",3],["14 23",3],["21 23",4],["32 14",4],["24 22",4],["22 23",4],["11 32",4]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre d'allumettes <span style='color:red;'><b>INTACTES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>m15</dct:alternative>
        <dct:source>res/img/numbers/match/match*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>m15</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 1 à 5) vérifiant un critère donné (allumette intacte).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/match/match$1.svg\\\"/></div>"} },"values":[["14 03",1],["11",1],["13",1],["11 02",1],["12 13",2],["21",2],["01 24",2],["14 14",2],["31 03",3],["24 13",3],["14 23",3],["32 14",4],["24 22",4],["22 23",4],["11 32",4],["23 32",5],["31 22",5],["21 32",5],["24 31",5],["23 31",5],["32 21",5]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre d'allumettes <span style='color:red;'><b>INTACTES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>m15</dct:alternative>
        <dct:source>res/img/numbers/match/match*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>m02</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, sans contrainte de temps, le nombre d'élèments (de 0 à 2) vérifiant un critère donné (allumette intacte).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/match/match$1.svg\\\"/></div>"} },"values":[["01 04",0],["02",0],["05",0],["03",0],["02 03",0],["01 12",1],["03 11",1],["11",1],["13",1],["11 02",1],["11 11",2],["12 13",2],["21",2],["23",2],["14 14",2]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre d'allumettes <span style='color:red;'><b>INTACTES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>m15</dct:alternative>
        <dct:source>res/img/numbers/match/match*.svg</dct:source>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>m02x</dct:identifier>
        <dct:title xml:lang="fr-FR">Evaluer, en moins de 20 secondes, un nombre d'élèments (de 0 à 2) vérifiant un critère donné (allumette intacte).</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":1,"speed":0},"regexp":{"input": { "from": "([^ ]+)","to":"<div class=\\\"icon\\\"><img src=\\\"res/img/numbers/match/match$1.svg\\\"/></div>"} },"values":[["01 04",0],["02",0],["05",0],["03",0],["02 03",0],["01 12",1],["03 11",1],["11",1],["13",1],["11 02",1],["11 11",2],["12 13",2],["21",2],["23",2],["14 14",2]],"class":"wrong gray","font":3]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le nombre d'allumettes <span style='color:red;'><b>INTACTES</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>m15</dct:alternative>
        <dct:source>res/img/numbers/match/match*.svg</dct:source>
    </rdf:Description>

    <!-- Série -->

    <rdf:Description>
        <dct:identifier>s19l</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, le dernier élément d'une série de nombres compris enre 1 et 9.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*5)+1,b=4; for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s19f</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, le premier élément d'une série de nombres compris enre 1 et 9.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*5)+1,b=0; for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s19r</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, un élément d'une série de nombres compris enre 1 et 9.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*5)+1,b=Math.floor(Math.random()*5); for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s09l</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, le dernier élément d'une série de nombres compris enre 0 et 9.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*6),b=4; for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s09f</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, le premier élément d'une série de nombres compris enre 0 et 9.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*6),b=0; for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s09r</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, un élément d'une série de nombres compris enre 0 et 9.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*6),b=Math.floor(Math.random()*5); for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s019l</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, le dernier élément d'une série de nombres compris enre 0 et 19.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*16),b=4; for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s019f</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, le premier élément d'une série de nombres compris enre 0 et 19.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*16),b=0; for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s019r</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, sans contrainte de temps, un élément d'une série de nombres compris enre 0 et 19.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*16),b=Math.floor(Math.random()*5); for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>s019rx</dct:identifier>
        <dct:title xml:lang="fr-FR">Ajouter, en moins de 20 secondes, un élément d'une série de nombres compris enre 0 et 19.</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":2,"speed":5000},"regexp":{"output":"\\\\?","input":{"from":"([^ ]+)","to":"<div style='width:1.2em;height:1.2em;text-align:center;border-radius:.5em;margin:0 .1em;color:white;' class='bg'>$1</div>"}},"gen":"function() { var ret=\\\"\\\",a=Math.floor(Math.random()*16),b=Math.floor(Math.random()*5); for (var i=0;i<5;i++){ if (i) { ret+=\\\" \\\";} ret+=i==b?\\\"?\\\":(a+i);} return [ret, a+b]}","class":"alpha left h12 p02","font":1]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Complétez la suite de nombres"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>s09r</dct:alternative>
    </rdf:Description>


    <!-- Soroban -->

    <rdf:Description>
        <dct:identifier>so10</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 1 et 9 depuis un boulier japonais (avec boules grisées).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"gen":"function(){var val=Math.floor(Math.random()*9)+1, v = val, ret=\\\"<div style='margin:0 auto;width:2em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 50'><rect x='2' y='1' width='96' height='48' rx='2' style='fill:none;stroke:black;stroke-width:1;'/><line x1='2' y1='15.5' x2='98' y2='15.5' style='fill:none;stroke:black;stroke-width:1;'/>\\\"; for (var i=5; i>=0; i--) { var vv=v%10; v=Math.floor(v/10); ret+=\\\"<line x1='\\\"+(2+8+16*i)+\\\"' y1='1' x2='\\\"+(2+8+16*i)+\\\"' y2='49' style='fill:none;stroke:black;stroke-width:0.5;'/>\\\"; for (var j=0; j<1; j++) { var c=(vv>=5); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(2.5+j*4.5+(c?7:0))+\\\"' width='12' height='4' rx='4' style='fill:\\\"+(c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } if (vv>=5) { vv-=5; } for (var j=0; j<4; j++) { var c=(vv<=j); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(17.5+j*4.5+(c?12:0))+\\\"' width='12' height='4' rx='4' style='fill:\\\"+(!c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } } ret+=\\\"</svg></div>\\\"; return [ret,val];}","class":"neg alpha p02","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>sa10k</dct:alternative>
        <dct:isPartOf>abacus</dct:isPartOf>
        <dct:coverage xml:lang="fr-FR">GS</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>so100</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 1 et 100 depuis un boulier japonais (avec boules grisées).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function(){var val=Math.floor(Math.random()*100), v = val, ret=\\\"<div style='margin:0 auto;width:2em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 50'><rect x='2' y='1' width='96' height='48' rx='2' style='fill:none;stroke:black;stroke-width:1;'/><line x1='2' y1='15.5' x2='98' y2='15.5' style='fill:none;stroke:black;stroke-width:1;'/>\\\"; for (var i=5; i>=0; i--) { var vv=v%10; v=Math.floor(v/10); ret+=\\\"<line x1='\\\"+(2+8+16*i)+\\\"' y1='1' x2='\\\"+(2+8+16*i)+\\\"' y2='49' style='fill:none;stroke:black;stroke-width:0.5;'/>\\\"; for (var j=0; j<1; j++) { var c=(vv>=5); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(2.5+j*4.5+(c?7:0))+\\\"' width='12' height='4' rx='4' style='fill:\\\"+(c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } if (vv>=5) { vv-=5; } for (var j=0; j<4; j++) { var c=(vv<=j); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(17.5+j*4.5+(c?12:0))+\\\"' width='12' height='4' rx='4' style='fill:\\\"+(!c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } } ret+=\\\"</svg></div>\\\"; return [ret,val];}","class":"neg alpha p02","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>sa10k</dct:alternative>
        <dct:isPartOf>abacus</dct:isPartOf>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>so1k</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 1 et 1 000 depuis un boulier japonais (avec boules grisées).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":3,"speed":5000},"gen":"function(){var val=Math.floor(Math.random()*1000), v = val, ret=\\\"<div style='margin:0 auto;width:2em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 50'><rect x='2' y='1' width='96' height='48' rx='2' style='fill:none;stroke:black;stroke-width:1;'/><line x1='2' y1='15.5' x2='98' y2='15.5' style='fill:none;stroke:black;stroke-width:1;'/>\\\"; for (var i=5; i>=0; i--) { var vv=v%10; v=Math.floor(v/10); ret+=\\\"<line x1='\\\"+(2+8+16*i)+\\\"' y1='1' x2='\\\"+(2+8+16*i)+\\\"' y2='49' style='fill:none;stroke:black;stroke-width:0.5;'/>\\\"; for (var j=0; j<1; j++) { var c=(vv>=5); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(2.5+j*4.5+(c?7:0))+\\\"' width='12' height='4' rx='4' style='fill:\\\"+(c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } if (vv>=5) { vv-=5; } for (var j=0; j<4; j++) { var c=(vv<=j); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(17.5+j*4.5+(c?12:0))+\\\"' width='12' height='4' rx='4' style='fill:\\\"+(!c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } } ret+=\\\"</svg></div>\\\"; return [ret,val];}","class":"neg alpha p02","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>sa10k</dct:alternative>
        <dct:isPartOf>abacus</dct:isPartOf>
        <dct:coverage xml:lang="fr-FR">CE1</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>so1ka</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 1 et 1 000 depuis un boulier japonais.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":3,"speed":5000},"gen":"function(){var val=Math.floor(Math.random()*1000), v = val, ret=\\\"<div style='margin:0 auto;width:2em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 50'><rect x='2' y='1' width='96' height='48' rx='2' style='fill:none;stroke:black;stroke-width:1;'/><line x1='2' y1='15.5' x2='98' y2='15.5' style='fill:none;stroke:black;stroke-width:1;'/>\\\"; for (var i=5; i>=0; i--) { var vv=v%10; v=Math.floor(v/10); ret+=\\\"<line x1='\\\"+(2+8+16*i)+\\\"' y1='1' x2='\\\"+(2+8+16*i)+\\\"' y2='49' style='fill:none;stroke:black;stroke-width:0.5;'/>\\\"; for (var j=0; j<1; j++) { var c=(vv>=5); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(2.5+j*4.5+(c?7:0))+\\\"' width='12' height='4' rx='4' style='fill:white;stroke:black;stroke-width:0.5;'/>\\\"; } if (vv>=5) { vv-=5; } for (var j=0; j<4; j++) { var c=(vv<=j); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(17.5+j*4.5+(c?12:0))+\\\"' width='12' height='4' rx='4' style='fill:white;stroke:black;stroke-width:0.5;'/>\\\"; } } ret+=\\\"</svg></div>\\\"; return [ret,val];}","class":"neg alpha p02","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>sa10k</dct:alternative>
        <dct:isPartOf>abacus</dct:isPartOf>
        <dct:coverage xml:lang="fr-FR">CE1</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>so10k</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 1 et 10 000 depuis un boulier japonais (avec boules grisées).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":4,"speed":5000},"gen":"function(){var val=Math.floor(Math.random()*10000), v = val, ret=\\\"<div style='margin:0 auto;width:2em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 50'><rect x='2' y='1' width='96' height='48' rx='2' style='fill:none;stroke:black;stroke-width:1;'/><line x1='2' y1='15.5' x2='98' y2='15.5' style='fill:none;stroke:black;stroke-width:1;'/>\\\"; for (var i=5; i>=0; i--) { var vv=v%10; v=Math.floor(v/10); ret+=\\\"<line x1='\\\"+(2+8+16*i)+\\\"' y1='1' x2='\\\"+(2+8+16*i)+\\\"' y2='49' style='fill:none;stroke:black;stroke-width:0.5;'/>\\\"; for (var j=0; j<1; j++) { var c=(vv>=5); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(2.5+j*4.5+(c?7:0))+\\\"' width='12' height='4' rx='4' style='fill:\\\"+(c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } if (vv>=5) { vv-=5; } for (var j=0; j<4; j++) { var c=(vv<=j); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(17.5+j*4.5+(c?12:0))+\\\"' width='12' height='4' rx='4' style='fill:\\\"+(!c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } } ret+=\\\"</svg></div>\\\"; return [ret,val];}","class":"neg alpha p02","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>sa10k</dct:alternative>
        <dct:isPartOf>abacus</dct:isPartOf>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>so10ka</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 1 et 10 000 depuis un boulier japonais.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":4,"speed":5000},"gen":"function(){var val=Math.floor(Math.random()*10000), v = val, ret=\\\"<div style='margin:0 auto;width:2em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 50'><rect x='2' y='1' width='96' height='48' rx='2' style='fill:none;stroke:black;stroke-width:1;'/><line x1='2' y1='15.5' x2='98' y2='15.5' style='fill:none;stroke:black;stroke-width:1;'/>\\\"; for (var i=5; i>=0; i--) { var vv=v%10; v=Math.floor(v/10); ret+=\\\"<line x1='\\\"+(2+8+16*i)+\\\"' y1='1' x2='\\\"+(2+8+16*i)+\\\"' y2='49' style='fill:none;stroke:black;stroke-width:0.5;'/>\\\"; for (var j=0; j<1; j++) { var c=(vv>=5); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(2.5+j*4.5+(c?7:0))+\\\"' width='12' height='4' rx='4' style='fill:white;stroke:black;stroke-width:0.5;'/>\\\"; } if (vv>=5) { vv-=5; } for (var j=0; j<4; j++) { var c=(vv<=j); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(17.5+j*4.5+(c?12:0))+\\\"' width='12' height='4' rx='4' style='fill:white;stroke:black;stroke-width:0.5;'/>\\\"; } } ret+=\\\"</svg></div>\\\"; return [ret,val];}","class":"neg alpha p02","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>sa10k</dct:alternative>
        <dct:isPartOf>abacus</dct:isPartOf>
    </rdf:Description>

    <!-- Suanpan -->

    <rdf:Description>
        <dct:identifier>su10</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 1 et 9 depuis un boulier chinois (avec boules grisées).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"gen":"function(){var val=Math.floor(Math.random()*9)+1, v = val, ret=\\\"<div style='margin:0 auto;width:2em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 50'><rect x='2' y='1' width='96' height='48' rx='2' style='fill:none;stroke:black;stroke-width:1;'/><line x1='2' y1='17.5' x2='98' y2='17.5' style='fill:none;stroke:black;stroke-width:1;'/>\\\"; for (var i=5; i>=0; i--) { var vv=v%10; v=Math.floor(v/10); ret+=\\\"<line x1='\\\"+(2+8+16*i)+\\\"' y1='1' x2='\\\"+(2+8+16*i)+\\\"' y2='49' style='fill:none;stroke:black;stroke-width:0.5;'/>\\\"; for (var j=0; j<2; j++) { var c=(vv>=5*(2-j)); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(2.5+j*4.5+(c?5:0))+\\\"' width='12' height='4' rx='4' style='fill:\\\"+(c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } if (vv>=5) { vv-=5; } for (var j=0; j<5; j++) { var c=(vv<=j); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(19+j*4.5+(c?7:0))+\\\"' width='12' height='4' rx='4' style='fill:\\\"+(!c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } } ret+=\\\"</svg></div>\\\"; return [ret,val];}","class":"neg alpha p02","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>sa10k</dct:alternative>
        <dct:isPartOf>abacus</dct:isPartOf>
        <dct:coverage xml:lang="fr-FR">GS</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>su100</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 0 et 100 depuis un boulier chinois (avec boules grisées).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function(){var val=Math.floor(Math.random()*100), v = val, ret=\\\"<div style='margin:0 auto;width:2em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 50'><rect x='2' y='1' width='96' height='48' rx='2' style='fill:none;stroke:black;stroke-width:1;'/><line x1='2' y1='17.5' x2='98' y2='17.5' style='fill:none;stroke:black;stroke-width:1;'/>\\\"; for (var i=5; i>=0; i--) { var vv=v%10; v=Math.floor(v/10); ret+=\\\"<line x1='\\\"+(2+8+16*i)+\\\"' y1='1' x2='\\\"+(2+8+16*i)+\\\"' y2='49' style='fill:none;stroke:black;stroke-width:0.5;'/>\\\"; for (var j=0; j<2; j++) { var c=(vv>=5*(2-j)); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(2.5+j*4.5+(c?5:0))+\\\"' width='12' height='4' rx='4' style='fill:\\\"+(c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } if (vv>=5) { vv-=5; } for (var j=0; j<5; j++) { var c=(vv<=j); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(19+j*4.5+(c?7:0))+\\\"' width='12' height='4' rx='4' style='fill:\\\"+(!c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } } ret+=\\\"</svg></div>\\\"; return [ret,val];}","class":"neg alpha p02","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>sa10k</dct:alternative>
        <dct:isPartOf>abacus</dct:isPartOf>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>su1k</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 0 et 1 000 depuis un boulier chinois (avec boules grisées).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":3,"speed":5000},"gen":"function(){var val=Math.floor(Math.random()*1000), v = val, ret=\\\"<div style='margin:0 auto;width:2em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 50'><rect x='2' y='1' width='96' height='48' rx='2' style='fill:none;stroke:black;stroke-width:1;'/><line x1='2' y1='17.5' x2='98' y2='17.5' style='fill:none;stroke:black;stroke-width:1;'/>\\\"; for (var i=5; i>=0; i--) { var vv=v%10; v=Math.floor(v/10); ret+=\\\"<line x1='\\\"+(2+8+16*i)+\\\"' y1='1' x2='\\\"+(2+8+16*i)+\\\"' y2='49' style='fill:none;stroke:black;stroke-width:0.5;'/>\\\"; for (var j=0; j<2; j++) { var c=(vv>=5*(2-j)); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(2.5+j*4.5+(c?5:0))+\\\"' width='12' height='4' rx='4' style='fill:\\\"+(c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } if (vv>=5) { vv-=5; } for (var j=0; j<5; j++) { var c=(vv<=j); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(19+j*4.5+(c?7:0))+\\\"' width='12' height='4' rx='4' style='fill:\\\"+(!c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } } ret+=\\\"</svg></div>\\\"; return [ret,val];}","class":"neg alpha p02","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>sa10k</dct:alternative>
        <dct:isPartOf>abacus</dct:isPartOf>
        <dct:coverage xml:lang="fr-FR">CE1</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>su1ka</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 0 et 1 000 depuis un boulier chinois.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":3,"speed":5000},"gen":"function(){var val=Math.floor(Math.random()*1000), v = val, ret=\\\"<div style='margin:0 auto;width:2em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 50'><rect x='2' y='1' width='96' height='48' rx='2' style='fill:none;stroke:black;stroke-width:1;'/><line x1='2' y1='17.5' x2='98' y2='17.5' style='fill:none;stroke:black;stroke-width:1;'/>\\\"; for (var i=5; i>=0; i--) { var vv=v%10; v=Math.floor(v/10); ret+=\\\"<line x1='\\\"+(2+8+16*i)+\\\"' y1='1' x2='\\\"+(2+8+16*i)+\\\"' y2='49' style='fill:none;stroke:black;stroke-width:0.5;'/>\\\"; for (var j=0; j<2; j++) { var c=(vv>=5*(2-j)); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(2.5+j*4.5+(c?5:0))+\\\"' width='12' height='4' rx='4' style='fill:white;stroke:black;stroke-width:0.5;'/>\\\"; } if (vv>=5) { vv-=5; } for (var j=0; j<5; j++) { var c=(vv<=j); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(19+j*4.5+(c?7:0))+\\\"' width='12' height='4' rx='4' style='fill:white;stroke:black;stroke-width:0.5;'/>\\\"; } } ret+=\\\"</svg></div>\\\"; return [ret,val];}","class":"neg alpha p02","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>sa10k</dct:alternative>
        <dct:isPartOf>abacus</dct:isPartOf>
        <dct:coverage xml:lang="fr-FR">CE1</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>su10k</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 0 et 10 000 depuis un boulier chinois (avec boules grisées).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":4,"speed":5000},"gen":"function(){var val=Math.floor(Math.random()*10000), v = val, ret=\\\"<div style='margin:0 auto;width:2em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 50'><rect x='2' y='1' width='96' height='48' rx='2' style='fill:none;stroke:black;stroke-width:1;'/><line x1='2' y1='17.5' x2='98' y2='17.5' style='fill:none;stroke:black;stroke-width:1;'/>\\\"; for (var i=5; i>=0; i--) { var vv=v%10; v=Math.floor(v/10); ret+=\\\"<line x1='\\\"+(2+8+16*i)+\\\"' y1='1' x2='\\\"+(2+8+16*i)+\\\"' y2='49' style='fill:none;stroke:black;stroke-width:0.5;'/>\\\"; for (var j=0; j<2; j++) { var c=(vv>=5*(2-j)); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(2.5+j*4.5+(c?5:0))+\\\"' width='12' height='4' rx='4' style='fill:\\\"+(c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } if (vv>=5) { vv-=5; } for (var j=0; j<5; j++) { var c=(vv<=j); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(19+j*4.5+(c?7:0))+\\\"' width='12' height='4' rx='4' style='fill:\\\"+(!c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } } ret+=\\\"</svg></div>\\\"; return [ret,val];}","class":"neg alpha p02","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>sa10k</dct:alternative>
        <dct:isPartOf>abacus</dct:isPartOf>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>su10ka</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 0 et 10 000 depuis un boulier chinois.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":4,"speed":5000},"gen":"function(){var val=Math.floor(Math.random()*10000), v = val, ret=\\\"<div style='margin:0 auto;width:2em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 50'><rect x='2' y='1' width='96' height='48' rx='2' style='fill:none;stroke:black;stroke-width:1;'/><line x1='2' y1='17.5' x2='98' y2='17.5' style='fill:none;stroke:black;stroke-width:1;'/>\\\"; for (var i=5; i>=0; i--) { var vv=v%10; v=Math.floor(v/10); ret+=\\\"<line x1='\\\"+(2+8+16*i)+\\\"' y1='1' x2='\\\"+(2+8+16*i)+\\\"' y2='49' style='fill:none;stroke:black;stroke-width:0.5;'/>\\\"; for (var j=0; j<2; j++) { var c=(vv>=5*(2-j)); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(2.5+j*4.5+(c?5:0))+\\\"' width='12' height='4' rx='4' style='fill:white;stroke:black;stroke-width:0.5;'/>\\\"; } if (vv>=5) { vv-=5; } for (var j=0; j<5; j++) { var c=(vv<=j); ret+=\\\"<rect x='\\\"+(4+16*i)+\\\"' y='\\\"+(19+j*4.5+(c?7:0))+\\\"' width='12' height='4' rx='4' style='fill:white;stroke:black;stroke-width:0.5;'/>\\\"; } } ret+=\\\"</svg></div>\\\"; return [ret,val];}","class":"neg alpha p02","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>sa10k</dct:alternative>
        <dct:isPartOf>abacus</dct:isPartOf>
    </rdf:Description>

    <!-- normal abaque -->

    <rdf:Description>
        <dct:identifier>sa10</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 1 et 9 depuis un boulier simple (avec boules grisées).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"gen":"function(){var val=Math.floor(Math.random()*9)+1, v = val, ret=\\\"<div style='margin:0 auto;width:2em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 50'><rect x='2' y='1' width='96' height='48' rx='2' style='fill:none;stroke:black;stroke-width:1;'/>\\\"; for (var i=6; i>=0; i--) { var vv=v%10; v=Math.floor(v/10); ret+=\\\"<line x1='\\\"+(2+8+13*i)+\\\"' y1='1' x2='\\\"+(2+8+13*i)+\\\"' y2='49' style='fill:none;stroke:black;stroke-width:0.5;'/>\\\"; for (var j=0; j<10; j++) { var c=(vv<=j); ret+=\\\"<rect x='\\\"+(5+13*i)+\\\"' y='\\\"+(3+j*3.5+(c?10:0))+\\\"' width='10' height='3' rx='2' style='fill:\\\"+(!c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } } ret+=\\\"</svg></div>\\\"; return [ret,val];}","class":"neg alpha p02","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>sa10k</dct:alternative>
        <dct:isPartOf>abacus</dct:isPartOf>
        <dct:coverage xml:lang="fr-FR">GS</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>sa100</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 1 et 100 depuis un boulier simple (avec boules grisées).</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function(){var val=Math.floor(Math.random()*100), v = val, ret=\\\"<div style='margin:0 auto;width:2em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 50'><rect x='2' y='1' width='96' height='48' rx='2' style='fill:none;stroke:black;stroke-width:1;'/>\\\"; for (var i=6; i>=0; i--) { var vv=v%10; v=Math.floor(v/10); ret+=\\\"<line x1='\\\"+(2+8+13*i)+\\\"' y1='1' x2='\\\"+(2+8+13*i)+\\\"' y2='49' style='fill:none;stroke:black;stroke-width:0.5;'/>\\\"; for (var j=0; j<10; j++) { var c=(vv<=j); ret+=\\\"<rect x='\\\"+(5+13*i)+\\\"' y='\\\"+(3+j*3.5+(c?10:0))+\\\"' width='10' height='3' rx='2' style='fill:\\\"+(!c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } } ret+=\\\"</svg></div>\\\"; return [ret,val];}","class":"neg alpha p02","font":3]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>sa10k</dct:alternative>
        <dct:isPartOf>abacus</dct:isPartOf>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>


    <rdf:Description>
        <dct:identifier>sa1k</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 1 et 1 000 depuis un boulier simple (avec boules grisées).</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"input":{"digit":3,"speed":5000},"gen":"function(){var val=Math.floor(Math.random()*1000), v = val, ret=\\\"<div style='margin:0 auto;width:2em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 50'><rect x='2' y='1' width='96' height='48' rx='2' style='fill:none;stroke:black;stroke-width:1;'/>\\\"; for (var i=6; i>=0; i--) { var vv=v%10; v=Math.floor(v/10); ret+=\\\"<line x1='\\\"+(2+8+13*i)+\\\"' y1='1' x2='\\\"+(2+8+13*i)+\\\"' y2='49' style='fill:none;stroke:black;stroke-width:0.5;'/>\\\"; for (var j=0; j<10; j++) { var c=(vv<=j); ret+=\\\"<rect x='\\\"+(5+13*i)+\\\"' y='\\\"+(3+j*3.5+(c?10:0))+\\\"' width='10' height='3' rx='2' style='fill:\\\"+(!c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } } ret+=\\\"</svg></div>\\\"; return [ret,val];}","class":"neg alpha p02","font":3]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>sa10k</dct:alternative>
        <dct:isPartOf>abacus</dct:isPartOf>
        <dct:coverage xml:lang="fr-FR">CE1</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>sa10k</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 1 et 10 000 depuis un boulier simple (avec boules grisées).</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"input":{"digit":4,"speed":5000},"gen":"function(){var val=Math.floor(Math.random()*10000), v = val, ret=\\\"<div style='margin:0 auto;width:2em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 50'><rect x='2' y='1' width='96' height='48' rx='2' style='fill:none;stroke:black;stroke-width:1;'/>\\\"; for (var i=6; i>=0; i--) { var vv=v%10; v=Math.floor(v/10); ret+=\\\"<line x1='\\\"+(2+8+13*i)+\\\"' y1='1' x2='\\\"+(2+8+13*i)+\\\"' y2='49' style='fill:none;stroke:black;stroke-width:0.5;'/>\\\"; for (var j=0; j<10; j++) { var c=(vv<=j); ret+=\\\"<rect x='\\\"+(5+13*i)+\\\"' y='\\\"+(3+j*3.5+(c?10:0))+\\\"' width='10' height='3' rx='2' style='fill:\\\"+(!c?\\\"gray\\\":\\\"white\\\")+\\\";stroke:black;stroke-width:0.5;'/>\\\"; } } ret+=\\\"</svg></div>\\\"; return [ret,val];}","class":"neg alpha p02","font":3]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>sa10k</dct:alternative>
        <dct:isPartOf>abacus</dct:isPartOf>
    </rdf:Description>

    <!-- Position -->

            <!-- Position : 2 points -->

    <rdf:Description>
        <dct:identifier>pop101</dct:identifier>
        <dct:title xml:lang="fr-FR">A partir de 2 abscisses, positioner, sans contrainte de temps, un point sur une droite graduée entre 0 et 10 [pas:1].</dct:title>
        <dct:description><![CDATA["gg":{"o":0,"r":2,"max":10,"min":0,"step":[1]},"number":15,"time":0,"regexp":{"output":"\\\\?"},"input":{"digit":2,"speed":5000},"gen":"function($this,_s,_i){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var o=_s.gg.o,r=_s.gg.r,max=_s.gg.max,min=_s.gg.min,step=_s.gg.step,stepid=Math.floor(Math.random()*step.length),s=step[stepid],a=Math.floor(Math.random()*(max+1)/s)*s-min,gap=[1,2,3,4],gapid=Math.floor(Math.random()*gap.length),b,c;do { b=Math.floor(Math.random()*(max+1-gap[gapid])/s)*s-min; c=b+gap[gapid]*s; } while (b==a || c==a || Math.abs(a-b)>15/r*s || Math.abs(a-c)>15/r*s); o=Math.min(a,b)-Math.floor(Math.random()*(15-(Math.max(a,c)-Math.min(a,b))/s))*s; var oa=a.toString().length,ob=b.toString().length,oc=c.toString().length; for (var i=0; i<16; i++) { ret+=\\\"<line x1='\\\"+(5+i*6)+\\\"' y1='4' x2='\\\"+(5+i*6)+\\\"' y2='6' style='stroke:black;stroke-width:.25'/>\\\"; }  ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(a-o)*6/s)+\\\"' r='1.5' style='fill:red'/><circle cy='5' cx='\\\"+(5+(b-o)*6/s)+\\\"' r='1' style='fill:none;stroke:black;stroke-width:.25;'/><circle cy='5' cx='\\\"+(5+(c-o)*6/s)+\\\"' r='1' style='fill:none;stroke:black;stroke-width:.25;'/><text x='\\\"+(6-oa+(a-o)*6/s)+\\\"' y='1.5' style='font-size:3px;fill:red;font-weight:bold;'>?</text><text x='\\\"+(6-ob+(b-o)*6/s)+\\\"' y='1.5' style='font-size:3px;'>\\\"+b+\\\"</text><text x='\\\"+(6-oc+(c-o)*6/s)+\\\"' y='1.5' style='font-size:3px;'>\\\"+c+\\\"</text></svg></div>\\\"; return [ret, a];}","class":"neg alpha p02"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"A partir des abscisses des deux points de la droite graduée, évaluez l'abscisse du [red]point rouge[/red] ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>pop101</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pop201</dct:identifier>
        <dct:title xml:lang="fr-FR">A partir de 2 abscisses, positioner, sans contrainte de temps, un point sur une droite graduée entre 0 et 20 [pas:1].</dct:title>
        <dct:description><![CDATA["gg":{"o":0,"r":2,"max":20,"min":0,"step":[1]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>pop101</dct:alternative>
        <dct:relation>pop101</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>popx2</dct:identifier>
        <dct:title xml:lang="fr-FR">A partir de 2 abscisses, positioner, sans contrainte de temps, un point sur une droite graduée entre 0 et 20 [pas:2].</dct:title>
        <dct:description><![CDATA["gg":{"o":0,"r":2,"max":20,"min":0,"step":[2]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>multiplication</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>pop101</dct:alternative>
        <dct:relation>pop101</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>popx3</dct:identifier>
        <dct:title xml:lang="fr-FR">A partir de 2 abscisses, positioner, sans contrainte de temps, un point sur une droite graduée entre 0 et 30 [pas:3].</dct:title>
        <dct:description><![CDATA["gg":{"o":0,"r":2,"max":30,"min":0,"step":[3]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>multiplication</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>pop101</dct:alternative>
        <dct:relation>pop101</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>popx4</dct:identifier>
        <dct:title xml:lang="fr-FR">A partir de 2 abscisses, positioner, sans contrainte de temps, un point sur une droite graduée entre 0 et 40 [pas:4].</dct:title>
        <dct:description><![CDATA["gg":{"o":0,"r":2,"max":40,"min":0,"step":[4]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>multiplication</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>pop101</dct:alternative>
        <dct:relation>pop101</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>popx5</dct:identifier>
        <dct:title xml:lang="fr-FR">A partir de 2 abscisses, positioner, sans contrainte de temps, un point sur une droite graduée entre 0 et 50 [pas:5].</dct:title>
        <dct:description><![CDATA["gg":{"o":0,"r":2,"max":50,"min":0,"step":[6]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>multiplication</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>pop101</dct:alternative>
        <dct:relation>pop101</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>popx6</dct:identifier>
        <dct:title xml:lang="fr-FR">A partir de 2 abscisses, positioner, sans contrainte de temps, un point sur une droite graduée entre 0 et 60 [pas:6].</dct:title>
        <dct:description><![CDATA["gg":{"o":0,"r":2,"max":60,"min":0,"step":[6]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>multiplication</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>pop101</dct:alternative>
        <dct:relation>pop101</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>popx7</dct:identifier>
        <dct:title xml:lang="fr-FR">A partir de 2 abscisses, positioner, sans contrainte de temps, un point sur une droite graduée entre 0 et 70 [pas:7].</dct:title>
        <dct:description><![CDATA["gg":{"o":0,"r":2,"max":70,"min":0,"step":[7]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>multiplication</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>pop101</dct:alternative>
        <dct:relation>pop101</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>popx8</dct:identifier>
        <dct:title xml:lang="fr-FR">A partir de 2 abscisses, positioner, sans contrainte de temps, un point sur une droite graduée entre 0 et 80 [pas:8].</dct:title>
        <dct:description><![CDATA["gg":{"o":0,"r":2,"max":80,"min":0,"step":[8]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>multiplication</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>pop101</dct:alternative>
        <dct:relation>pop101</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>popx9</dct:identifier>
        <dct:title xml:lang="fr-FR">A partir de 2 abscisses, positioner, sans contrainte de temps, un point sur une droite graduée entre 0 et 90 [pas:9].</dct:title>
        <dct:description><![CDATA["gg":{"o":0,"r":2,"max":90,"min":0,"step":[9]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>multiplication</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>pop101</dct:alternative>
        <dct:relation>pop101</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pop100a1</dct:identifier>
        <dct:title xml:lang="fr-FR">A partir de 2 abscisses comprises entre 0 et 100, évaluer, sans contrainte de temps, la valeur de l'unité [pas:1,2,5,10].</dct:title>
        <dct:description><![CDATA["number":10,"gg":{"o":0,"r":2,"max":100,"min":0,"step":[1,2,5,10]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>multiplication</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>pop101</dct:alternative>
        <dct:relation>pop101</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pop100a2</dct:identifier>
        <dct:title xml:lang="fr-FR">A partir de 2 abscisses comprises entre 0 et 100, évaluer, sans contrainte de temps, la valeur de l'unité [pas:1,2,3,4,5,6,7,8,9,10].</dct:title>
        <dct:description><![CDATA["number":10,"gg":{"o":0,"r":2,"max":100,"min":0,"step":[1,2,3,4,5,6,7,8,9,10]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>multiplication</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>pop101</dct:alternative>
        <dct:relation>pop101</dct:relation>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pop1001</dct:identifier>
        <dct:title xml:lang="fr-FR">A partir de 2 abscisses, positioner, sans contrainte de temps, un point sur une droite graduée entre 0 et 100 [pas:1].</dct:title>
        <dct:description><![CDATA["number":10,"gg":{"o":0,"r":2,"max":100,"min":0,"step":[1]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>multiplication</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>pop101</dct:alternative>
        <dct:relation>pop101</dct:relation>
    </rdf:Description>
    

    <rdf:Description>
        <dct:identifier>pop1k20</dct:identifier>
        <dct:title xml:lang="fr-FR">A partir de 2 abscisses, positioner, sans contrainte de temps, un point sur une droite graduée entre 0 et 1 000 [pas:1,2,5,10,20].</dct:title>
        <dct:description><![CDATA["number":10,"input":{"digit":3,"speed":5000},"gg":{"o":0,"r":2,"max":1000,"min":0,"step":[1,2,5,10,20]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>multiplication</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>pop101</dct:alternative>
        <dct:relation>pop101</dct:relation>
    </rdf:Description>

	<rdf:Description>
        <dct:identifier>pop1k20b</dct:identifier>
        <dct:title xml:lang="fr-FR">A partir de 2 abscisses, positioner, sans contrainte de temps, un point sur une droite graduée entre 0 et 1 000 [pas:1,2,5,10,20].</dct:title>
        <dct:description><![CDATA["number":10,"input":{"digit":3,"speed":5000},"gg":{"o":0,"r":1,"max":1000,"min":0,"step":[1,2,5,10,20]}]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>multiplication</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>pop101</dct:alternative>
        <dct:relation>pop101</dct:relation>
    </rdf:Description>

            <!-- Position : values -->

    <rdf:Description>
        <dct:identifier>po010</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre 0 et 10.</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"input":{"digit":2,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=2,correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=0,ball=Math.floor(Math.random()*11); for (var i=0; i<16; i++) { ret+=\\\"<line x1='\\\"+(5+i*6)+\\\"' y1='\\\"+(i%5==offset?2:3.5)+\\\"' x2='\\\"+(5+i*6)+\\\"' y2='\\\"+(i%5==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%5==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<2; i++) { ret+=\\\"<text x='\\\"+(i*60+offset*6+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*6)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>po10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po010u</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 5 secondes par question, une abscisse entière comprise entre 0 et 10.</dct:title>
        <dct:description><![CDATA["number":10,"time":5,"timemode":true,"input":{"digit":2,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=2,correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=0,ball=Math.floor(Math.random()*11); for (var i=0; i<16; i++) { ret+=\\\"<line x1='\\\"+(5+i*6)+\\\"' y1='\\\"+(i%5==offset?2:3.5)+\\\"' x2='\\\"+(5+i*6)+\\\"' y2='\\\"+(i%5==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%5==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<2; i++) { ret+=\\\"<text x='\\\"+(i*60+offset*6+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*6)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>po10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po0100</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre 0 et 100.</dct:title>
        <dct:description><![CDATA["number":12,"time":0,"len":10,"input":{"digit":2,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=Math.floor(Math.random()*8),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>po10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po0100u</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 5 secondes par question, une abscisse entière comprise entre 0 et 100.</dct:title>
        <dct:description><![CDATA["number":12,"time":5,"timemode":true,"len":10,"input":{"digit":2,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=Math.floor(Math.random()*8),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>po10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po01k</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre 0 et 1000.</dct:title>
        <dct:description><![CDATA["number":12,"time":0,"len":10,"input":{"digit":3,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=2,first=Math.floor(Math.random()*8),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>po10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po01ku</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 5 secondes par question, une abscisse entière comprise entre 0 et 1000.</dct:title>
        <dct:description><![CDATA["number":12,"time":5,"timemode":true,"len":10,"input":{"digit":3,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=2,first=Math.floor(Math.random()*8),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>po10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po1ka</dct:identifier>
        <dct:title xml:lang="fr-FR">Retrouver, sans contrainte de temps, l'unité d'une graduation dont l'échelle est variable [1,10].</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"template":"template2.html","len":10,"input":{"attr":[1.2,2,1.2],"digit":1,"values":[["1",1],["10",10]]},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=Math.floor(Math.random()*2)+1,first=Math.floor(Math.random()*((stepid==1)?98:8)),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><rect x='\\\"+(5+(offset+ball)*3)+\\\"' y='5' height='1' width='3' style='fill:red'/></svg></div>\\\"; return [ret, step[stepid-1]];}","class":"neg alpha p02"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle est l'unité de la graduation ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>po10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po1k</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre 0 et 1000 (avec échelle variable).</dct:title>
        <dct:description><![CDATA["number":12,"time":0,"len":10,"input":{"digit":3,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=Math.floor(Math.random()*2)+1,first=Math.floor(Math.random()*((stepid==1)?98:8)),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>po10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po1ku</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 5 secondes par question, une abscisse entière comprise entre 0 et 1000 (avec échelle variable).</dct:title>
        <dct:description><![CDATA["number":12,"time":5,"timemode":true,"len":10,"input":{"digit":3,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=Math.floor(Math.random()*2)+1,first=Math.floor(Math.random()*((stepid==1)?98:8)),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>po10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po10ka</dct:identifier>
        <dct:title xml:lang="fr-FR">Retrouver, sans contrainte de temps, l'unité d'une graduation dont l'échelle est variable [1,10,100].</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"template":"template2.html","input":{"attr":[1.2,2,1.2],"digit":1,"values":[["1",1],["10",10],["100",100]]},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=Math.floor(Math.random()*3)+1,first=Math.floor(Math.random()*((stepid==1)?998:((stepid==2)?98:8))),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><rect x='\\\"+(5+(offset+ball)*3)+\\\"' y='5' height='1' width='3' style='fill:red'/></svg></div>\\\"; return [ret, step[stepid-1]];}","class":"neg alpha p02"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle est l'unité de la graduation ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>5</dct:type>
        <dct:alternative>po10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pod10ka</dct:identifier>
        <dct:title xml:lang="fr-FR">Retrouver, sans contrainte de temps, l'unité d'une graduation dont l'échelle est variable [0.1,0.01,0.001].</dct:title>
        <dct:description><![CDATA["number":10,"time":0,"template":"template2.html","input":{"attr":[0.9,2.8,1.2],"digit":1,"values":[["0.1",1],["0.01",10],["0.001",100]]},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[4,2,0],step=[1,10,100],stepid=Math.floor(Math.random()*step.length),first=Math.floor(Math.random()*10*step[stepid]),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)/step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><rect x='\\\"+(5+(offset+ball)*3)+\\\"' y='5' height='1' width='3' style='fill:red'/></svg></div>\\\"; return [ret, step[stepid]];}","class":"neg alpha p02"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle est l'unité de la graduation ?"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>po10k</dct:alternative>
        <dct:coverage xml:lang="fr-FR">decimal</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po10k</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre 0 et 10000 (avec échelle variable).</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":4,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=Math.floor(Math.random()*3)+1,first=Math.floor(Math.random()*((stepid==1)?998:((stepid==2)?98:8))),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>5</dct:type>
        <dct:alternative>po10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>po10kx</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 50 secondes, une abscisse entière comprise entre 0 et 10000 (avec échelle variable).</dct:title>
        <dct:description><![CDATA["time":2.5,"len":10,"input":{"digit":4,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=Math.floor(Math.random()*3)+1,first=Math.floor(Math.random()*((stepid==1)?998:((stepid==2)?98:8))),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>5</dct:type>
        <dct:alternative>po10k</dct:alternative>
    </rdf:Description>
    
    
    <rdf:Description>
        <dct:identifier>pod10</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre 0 et 10 (avec échelle variable de 0.1 à 0.001).</dct:title>
        <dct:description><![CDATA["number":15,"time":0,"decimal":true,"len":10,"input":{"digit":4,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[4,2,0],step=[1,10,100],stepid=Math.floor(Math.random()*step.length),first=Math.floor(Math.random()*8*step[stepid]),ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)/step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; var val=(first+ball/10)/step[stepid]; val=Math.round(val*1000)/1000; return [ret, val];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>po10k</dct:alternative>
        <dct:coverage xml:lang="fr-FR">decimal</dct:coverage>
    </rdf:Description>


    <rdf:Description>
        <dct:identifier>pon010</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre 0 et -10.</dct:title>
        <dct:description><![CDATA["time":0,"template":"keypad","negative":true,"input":{"digit":2,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=2,correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=-1,ball=Math.floor(Math.random()*11); for (var i=0; i<16; i++) { ret+=\\\"<line x1='\\\"+(5+i*6)+\\\"' y1='\\\"+(i%5==offset?2:3.5)+\\\"' x2='\\\"+(5+i*6)+\\\"' y2='\\\"+(i%5==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%5==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<2; i++) { ret+=\\\"<text x='\\\"+(i*60+offset*6+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*6)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>pon1k</dct:alternative>
    </rdf:Description>


    <rdf:Description>
        <dct:identifier>pon010x</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 25 secondes, une abscisse entière comprise entre 0 et -10.</dct:title>
        <dct:description><![CDATA["time":1.25,"template":"keypad","negative":true,"input":{"digit":2,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=2,correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=-1,ball=Math.floor(Math.random()*11); for (var i=0; i<16; i++) { ret+=\\\"<line x1='\\\"+(5+i*6)+\\\"' y1='\\\"+(i%5==offset?2:3.5)+\\\"' x2='\\\"+(5+i*6)+\\\"' y2='\\\"+(i%5==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%5==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<2; i++) { ret+=\\\"<text x='\\\"+(i*60+offset*6+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*6)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>pon1k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pon0100</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre -100 et 100.</dct:title>
        <dct:description><![CDATA["time":0,"template":"keypad","negative":true,"len":10,"input":{"digit":2,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=Math.floor(Math.random()*18)-10,ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>pon1k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pona0100</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, la valeur absolue d'une abscisse entière comprise entre -100 et 100.</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":2,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=Math.floor(Math.random()*18)-10,ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, Math.abs(first*step[stepid]+ball*step[stepid]/10)];}","class":"neg alpha p02"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Donnez la <b>valeur absolue</b> de la position."]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>pon1k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pon0100x</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 40 secondes, une abscisse entière comprise entre -100 et 100.</dct:title>
        <dct:description><![CDATA["time":2,"template":"keypad","negative":true,"len":10,"input":{"digit":2,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=1,first=Math.floor(Math.random()*18)-10,ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>pon1k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pon01k</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre -1000 et 1000.</dct:title>
        <dct:description><![CDATA["time":0,"template":"keypad","negative":true,"len":10,"input":{"digit":3,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=2,first=Math.floor(Math.random()*18)-10,ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>pon1k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pon01kx</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 40 secondes, une abscisse entière comprise entre -1000 et 1000.</dct:title>
        <dct:description><![CDATA["time":2,"template":"keypad","negative":true,"len":10,"input":{"digit":3,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=2,first=Math.floor(Math.random()*18)-10,ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>pon1k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pon1k</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une abscisse entière comprise entre -1000 et 1000 (avec échelle variable).</dct:title>
        <dct:description><![CDATA["time":0,"template":"keypad","negative":true,"len":10,"input":{"digit":3,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=Math.floor(Math.random()*2)+1,first=(stepid==1)?Math.floor(Math.random()*198)-100:Math.floor(Math.random()*18)-10,ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>pon1k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pona1k</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, la valeur absolue d'une abscisse entière comprise entre -1000 et 1000 (avec échelle variable).</dct:title>
        <dct:description><![CDATA["time":0,"len":10,"input":{"digit":3,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=Math.floor(Math.random()*2)+1,first=(stepid==1)?Math.floor(Math.random()*198)-100:Math.floor(Math.random()*18)-10,ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, Math.abs(first*step[stepid]+ball*step[stepid]/10)];}","class":"neg alpha p02"]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Donnez la <b>valeur absolue</b> de la position."]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>pon1k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>pon1kx</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 40 secondes, une abscisse entière comprise entre -1000 et 1000 (avec échelle variable).</dct:title>
        <dct:description><![CDATA["time":2,"template":"keypad","negative":true,"len":10,"input":{"digit":3,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:7em;height:1em;overflow:visible;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 10'>\\\"; var offset=Math.floor(Math.random()*10),correct=[3.5,2,0.5,0],step=[1,10,100,1000],stepid=Math.floor(Math.random()*2)+1,first=(stepid==1)?Math.floor(Math.random()*198)-100:Math.floor(Math.random()*18)-10,ball=Math.floor(Math.random()*20); for (var i=0; i<31; i++) { ret+=\\\"<line x1='\\\"+(5+i*3)+\\\"' y1='\\\"+(i%10==offset?2:3.5)+\\\"' x2='\\\"+(5+i*3)+\\\"' y2='\\\"+(i%10==offset?8:6.5)+\\\"' style='stroke:\\\"+(i%10==offset?\\\"black\\\":\\\"gray\\\")+\\\";stroke-width:.25'/>\\\"; } for (var i=0; i<3; i++) { ret+=\\\"<text x='\\\"+(i*30+offset*3+correct[stepid])+\\\"' y='1.5' style='font-size:4px;'>\\\"+(first+i)*step[stepid]+\\\"</text>\\\"; } ret+=\\\"<line x1='5' y1='5' x2='95' y2='5' style='stroke:black;stroke-width:.25'/><circle cy='5' cx='\\\"+(5+(offset+ball)*3)+\\\"' r='1.5' style='fill:red'/></svg></div>\\\"; return [ret, first*step[stepid]+ball*step[stepid]/10];}","class":"neg alpha p02"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>pon1k</dct:alternative>
    </rdf:Description>


    <!-- Distance -->

    <rdf:Description>
        <dct:identifier>d12</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 1 et 2, sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=2, w=85/nb, val=Math.floor(Math.random()*nb)+1, offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.5\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d133</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 1 et 3 (sur 3 segments), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=3, w=85/nb, val=Math.floor(Math.random()*nb)+1, offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.6\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d13</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 1 et 3, sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=Math.floor(Math.random()*3)+2, w=85/nb, val=Math.floor(Math.random()*(nb>3?3:nb))+1, offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.6\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d144</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 1 et 4 (sur 4 segments), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=4, w=85/nb, val=Math.floor(Math.random()*nb)+1, offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.7\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d14</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 1 et 4, sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=Math.floor(Math.random()*4)+2, w=85/nb, val=Math.floor(Math.random()*(nb>4?4:nb))+1, offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.7\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d155</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 1 et 5 (sur 5 segments), sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=5, w=85/nb, val=Math.floor(Math.random()*nb)+1, offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.8\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d15</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 1 et 5, sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=Math.floor(Math.random()*4)+2, w=85/nb, val=Math.floor(Math.random()*nb)+1, offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.8\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d15x</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 20 secondes, une distance comprise entre 1 et 5</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":1,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=Math.floor(Math.random()*4)+2, w=85/nb, val=Math.floor(Math.random()*nb)+1, offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.8\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>5</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d03</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 0 et 3, sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=3, w=85/nb, val=Math.floor(Math.random()*(nb+1)), offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.8\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d05</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance comprise entre 0 et 5, sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=Math.floor(Math.random()*4)+2, w=85/nb, val=Math.floor(Math.random()*(nb+1)), offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.8\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d05x</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, en moins de 20 secondes, une distance comprise entre 0 et 5</dct:title>
        <dct:description><![CDATA["time":1,"input":{"digit":1,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 20'>\\\"; var nb=Math.floor(Math.random()*4)+2, w=85/nb, val=Math.floor(Math.random()*(nb+1)), offset=Math.floor(Math.random()*(nb-val+1)); for (var i=0; i<nb; i++) { ret+=\\\"<rect x='\\\"+(10+i*w)+\\\"' y='14' width='\\\"+(w-5)+\\\"' height='5' ry='2' style='fill:red;stroke:#FF8888;stroke-width:0.2;opacity:\\\"+((i>=offset&&i<val+offset)?\\\"1\\\":\\\"0.8\\\")+\\\";'/>\\\"; } ret+=\\\"<line x1='\\\"+(7.5+(offset*w))+\\\"' y1='0' x2='\\\"+(7.5+(offset*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><line x1='\\\"+(7.5+((offset+val)*w))+\\\"' y1='0' x2='\\\"+(7.5+((offset+val)*w))+\\\"' y2='20' style='stroke:black;stroke-width:0.1;'/><circle cx='\\\"+(7.5+(offset*w))+\\\"' cy='7' r='6.5' style='fill:white;stroke:black;stroke-width:0.2'/><circle cx='\\\"+(7.5+((offset+val)*w))+\\\"' cy='7' r='5' style='fill:black;stroke:black;stroke-width:0.2'/>\\\"; ret+=\\\"</svg></div>\\\"; return [ret, val];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Combien de traits <span style='color:red'><b>rouges</b></span> séparent les 2 points ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>5</dct:type>
        <dct:alternative>d05x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d5</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance entre 2 points comprise entre 1 et 5, sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 20'><path d='M 0 10 100 10' style='fill:none;stroke:black;stroke-width:0.2'/>\\\",nb=10,max=5,a,b; do { a=Math.floor(Math.random()*nb); b = Math.floor(Math.random()*nb); } while (a==b || Math.abs(a-b)>max); for (var i=0; i<nb; i++) { ret+=\\\"<circle cx='\\\"+((50/nb)+(i*100/nb))+\\\"' cy='10' r='1' style='fill:\\\"+((i==a||i==b)?\\\"red\\\":\\\"black\\\")+\\\"'/>\\\"; } ret+=\\\"</svg></div>\\\"; return [ret, Math.abs(a-b)];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle distance sépare les deux points en [red]rouge[/red]?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>d5</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d5a</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance entre 2 points comprise entre 1 et 5, sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 20'><path d='M 0 10 100 10' style='fill:none;stroke:black;stroke-width:0.2'/>\\\",nb=15,max=5,a,b; do { a=Math.floor(Math.random()*nb); b = Math.floor(Math.random()*nb); } while (a==b || Math.abs(a-b)>max); for (var i=0; i<nb; i++) { ret+=\\\"<circle cx='\\\"+((50/nb)+(i*100/nb))+\\\"' cy='10' r='0.7' style='fill:\\\"+((i==a||i==b)?\\\"red\\\":\\\"black\\\")+\\\"'/>\\\"; } ret+=\\\"</svg></div>\\\"; return [ret, Math.abs(a-b)];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle distance sépare les deux points en [red]rouge[/red]?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>d5</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>d10</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire une distance entre 2 points comprise entre 1 et 10, sans contrainte de temps.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":5000},"gen":"function(){var ret=\\\"<div style='width:4.5em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 100 20'><path d='M 0 10 100 10' style='fill:none;stroke:black;stroke-width:0.2'/>\\\",nb=15,max=10,a,b; do { a=Math.floor(Math.random()*nb); b = Math.floor(Math.random()*nb); } while (a==b || Math.abs(a-b)>max); for (var i=0; i<nb; i++) { ret+=\\\"<circle cx='\\\"+((50/nb)+(i*100/nb))+\\\"' cy='10' r='0.7' style='fill:\\\"+((i==a||i==b)?\\\"red\\\":\\\"black\\\")+\\\"'/>\\\"; } ret+=\\\"</svg></div>\\\"; return [ret, Math.abs(a-b)];}","class":"neg alpha","font":1.5]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle distance sépare les deux points en [red]rouge[/red]?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>d5</dct:alternative>
    </rdf:Description>

    <!-- chart -->

    <rdf:Description>
        <dct:identifier>chb45</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 0 et 5 issue d'un graphique en colonne.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function(){var nb=4,max=5,step=[1,5],val=0,red=Math.floor(Math.random()*nb),ret=\\\"<div style='width:1.2em;height:1em;margin:.1em .2em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 120 100'><def><style>text {font-size:8px;fill:black;}line {stroke:black;stroke-width:1;}line.s{stroke-width:0.2;}line.l{stroke-width:0.5;}rect {fill:gray;stroke:none;}rect.red {fill:red;} .wrong rect {fill:red;}.good rect {fill:green;}</style></def><g transform='translate(0,6)'>\\\";for (var i=0;i<nb;i++) { var v=Math.floor(Math.random()*max); ret+=\\\"<rect x='\\\"+(10+110/nb*i)+\\\"' y='\\\"+(max-v)*(90/max)+\\\"' width='\\\"+(110/nb-0.5)+\\\"' height='\\\"+(90/max*v)+\\\"' \\\"+(i==red?\\\"class='red'\\\":\\\"\\\")+\\\"/>\\\"; if (i==red) { val=v; }} for (var i=0;i<=max;i++) { if (i%step[0]==0) { ret+=\\\"<line x1='10' y1='\\\"+((max-i)*(90/max))+\\\"' x2='120' y2='\\\"+((max-i)*(90/max))+\\\"' class='\\\"+(i%step[1]==0?\\\"l\\\":\\\"s\\\")+\\\"'/>\\\"; } if (i%step[1]==0) { ret+=\\\"<text transform='translate(0,\\\"+(2+(max-i)*(90/max))+\\\")'>\\\"+i+\\\"</text>\\\";} } ret+=\\\"<line x1='10' y1='0' x2='10' y2='92'/><line x1='8' y1='90' x2='120' y2='90'/><line x1='120' y1='0' x2='120' y2='90' class='l'/>\\\"; ret+=\\\"</g></svg></div>\\\"; return [ret, val];}","class":"neg alpha h12","font":4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle valeur représente la <span style='color:red'><b>colonne rouge</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>chb610</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>chb610</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 0 et 10 issue d'un graphique en colonne.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function(){var nb=6,max=10,step=[1,5],val=0,red=Math.floor(Math.random()*nb),ret=\\\"<div style='width:1.2em;height:1em;margin:.1em .2em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 120 100'><def><style>text {font-size:8px;fill:black;}line {stroke:black;stroke-width:1;}line.s{stroke-width:0.2;}line.l{stroke-width:0.5;}rect {fill:gray;stroke:none;}rect.red {fill:red;} .wrong rect {fill:red;}.good rect {fill:green;}</style></def><g transform='translate(0,6)'>\\\";for (var i=0;i<nb;i++) { var v=Math.floor(Math.random()*max); ret+=\\\"<rect x='\\\"+(10+110/nb*i)+\\\"' y='\\\"+(max-v)*(90/max)+\\\"' width='\\\"+(110/nb-0.5)+\\\"' height='\\\"+(90/max*v)+\\\"' \\\"+(i==red?\\\"class='red'\\\":\\\"\\\")+\\\"/>\\\"; if (i==red) { val=v; }} for (var i=0;i<=max;i++) { if (i%step[0]==0) { ret+=\\\"<line x1='10' y1='\\\"+((max-i)*(90/max))+\\\"' x2='120' y2='\\\"+((max-i)*(90/max))+\\\"' class='\\\"+(i%step[1]==0?\\\"l\\\":\\\"s\\\")+\\\"'/>\\\"; } if (i%step[1]==0) { ret+=\\\"<text transform='translate(0,\\\"+(2+(max-i)*(90/max))+\\\")'>\\\"+i+\\\"</text>\\\";} } ret+=\\\"<line x1='10' y1='0' x2='10' y2='92'/><line x1='8' y1='90' x2='120' y2='90'/><line x1='120' y1='0' x2='120' y2='90' class='l'/>\\\"; ret+=\\\"</g></svg></div>\\\"; return [ret, val];}","class":"neg alpha h12","font":4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle valeur représente la <span style='color:red'><b>colonne rouge</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>chb610</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>chb1020</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 0 et 20 issue d'un graphique en colonne.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function(){var nb=10,max=20,step=[1,5],val=0,red=Math.floor(Math.random()*nb),ret=\\\"<div style='width:1.2em;height:1em;margin:.1em .2em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 120 100'><def><style>text {font-size:8px;fill:black;}line {stroke:black;stroke-width:1;}line.s{stroke-width:0.2;}line.l{stroke-width:0.5;}rect {fill:gray;stroke:none;}rect.red {fill:red;} .wrong rect {fill:red;}.good rect {fill:green;}</style></def><g transform='translate(0,6)'>\\\";for (var i=0;i<nb;i++) { var v=Math.floor(Math.random()*max); ret+=\\\"<rect x='\\\"+(10+110/nb*i)+\\\"' y='\\\"+(max-v)*(90/max)+\\\"' width='\\\"+(110/nb-0.5)+\\\"' height='\\\"+(90/max*v)+\\\"' \\\"+(i==red?\\\"class='red'\\\":\\\"\\\")+\\\"/>\\\"; if (i==red) { val=v; }} for (var i=0;i<=max;i++) { if (i%step[0]==0) { ret+=\\\"<line x1='10' y1='\\\"+((max-i)*(90/max))+\\\"' x2='120' y2='\\\"+((max-i)*(90/max))+\\\"' class='\\\"+(i%step[1]==0?\\\"l\\\":\\\"s\\\")+\\\"'/>\\\"; } if (i%step[1]==0) { ret+=\\\"<text transform='translate(0,\\\"+(2+(max-i)*(90/max))+\\\")'>\\\"+i+\\\"</text>\\\";} } ret+=\\\"<line x1='10' y1='0' x2='10' y2='92'/><line x1='8' y1='90' x2='120' y2='90'/><line x1='120' y1='0' x2='120' y2='90' class='l'/>\\\"; ret+=\\\"</g></svg></div>\\\"; return [ret, val];}","class":"neg alpha h12","font":4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle valeur représente la <span style='color:red'><b>colonne rouge</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>chb610</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>chb1020b</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 0 et 20 issue d'un graphique en colonne.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function(){var nb=10,max=20,step=[2,10],val=0,red=Math.floor(Math.random()*nb),ret=\\\"<div style='width:1.2em;height:1em;margin:.1em .2em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 120 100'><def><style>text {font-size:8px;fill:black;}line {stroke:black;stroke-width:1;}line.s{stroke-width:0.2;}line.l{stroke-width:0.5;}rect {fill:gray;stroke:none;}rect.red {fill:red;} .wrong rect {fill:red;}.good rect {fill:green;}</style></def><g transform='translate(0,6)'>\\\";for (var i=0;i<nb;i++) { var v=Math.floor(Math.random()*max); ret+=\\\"<rect x='\\\"+(10+110/nb*i)+\\\"' y='\\\"+(max-v)*(90/max)+\\\"' width='\\\"+(110/nb-0.5)+\\\"' height='\\\"+(90/max*v)+\\\"' \\\"+(i==red?\\\"class='red'\\\":\\\"\\\")+\\\"/>\\\"; if (i==red) { val=v; }} for (var i=0;i<=max;i++) { if (i%step[0]==0) { ret+=\\\"<line x1='10' y1='\\\"+((max-i)*(90/max))+\\\"' x2='120' y2='\\\"+((max-i)*(90/max))+\\\"' class='\\\"+(i%step[1]==0?\\\"l\\\":\\\"s\\\")+\\\"'/>\\\"; } if (i%step[1]==0) { ret+=\\\"<text transform='translate(0,\\\"+(2+(max-i)*(90/max))+\\\")'>\\\"+i+\\\"</text>\\\";} } ret+=\\\"<line x1='10' y1='0' x2='10' y2='92'/><line x1='8' y1='90' x2='120' y2='90'/><line x1='120' y1='0' x2='120' y2='90' class='l'/>\\\"; ret+=\\\"</g></svg></div>\\\"; return [ret, val];}","class":"neg alpha h12","font":4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle valeur représente la <span style='color:red'><b>colonne rouge</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>chb610</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>chb1250</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 0 et 50 issue d'un graphique en colonne.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function(){var nb=12,max=50,step=[2,10],val=0,red=Math.floor(Math.random()*nb),ret=\\\"<div style='width:1.2em;height:1em;margin:.1em .2em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 120 100'><def><style>text {font-size:8px;fill:black;}line {stroke:black;stroke-width:1;}line.s{stroke-width:0.2;}line.l{stroke-width:0.5;}rect {fill:gray;stroke:none;}rect.red {fill:red;} .wrong rect {fill:red;}.good rect {fill:green;}</style></def><g transform='translate(0,6)'>\\\";for (var i=0;i<nb;i++) { var v=Math.floor(Math.random()*max); ret+=\\\"<rect x='\\\"+(10+110/nb*i)+\\\"' y='\\\"+(max-v)*(90/max)+\\\"' width='\\\"+(110/nb-0.5)+\\\"' height='\\\"+(90/max*v)+\\\"' \\\"+(i==red?\\\"class='red'\\\":\\\"\\\")+\\\"/>\\\"; if (i==red) { val=v; }} for (var i=0;i<=max;i++) { if (i%step[0]==0) { ret+=\\\"<line x1='10' y1='\\\"+((max-i)*(90/max))+\\\"' x2='120' y2='\\\"+((max-i)*(90/max))+\\\"' class='\\\"+(i%step[1]==0?\\\"l\\\":\\\"s\\\")+\\\"'/>\\\"; } if (i%step[1]==0) { ret+=\\\"<text transform='translate(0,\\\"+(2+(max-i)*(90/max))+\\\")'>\\\"+i+\\\"</text>\\\";} } ret+=\\\"<line x1='10' y1='0' x2='10' y2='92'/><line x1='8' y1='90' x2='120' y2='90'/><line x1='120' y1='0' x2='120' y2='90' class='l'/>\\\"; ret+=\\\"</g></svg></div>\\\"; return [ret, val];}","class":"neg alpha h12","font":4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle valeur représente la <span style='color:red'><b>colonne rouge</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>chb610</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>chd45</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 0 et 5 issue d'un graphique.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function(){var nb=4,max=5,step=[1,5],val=0,last=0,red=Math.floor(Math.random()*nb),retl=\\\"\\\",retc=\\\"\\\",retp=\\\"\\\",ret=\\\"<div style='width:1.2em;height:1em;margin:.1em .2em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 120 100'><def><style>text {font-size:8px;fill:black;}path{fill:cyan;fill-opacity:0.2;}line {stroke:black;stroke-width:1;}line.c{stroke:#333;}line.red {stroke:red;stroke-width:0.5;stroke-dasharray:4,2;}line.s{stroke-width:0.2;}line.l{stroke-width:0.5;}circle {fill:#333;stroke:none;}circle.red {fill:red;}</style></def><g transform='translate(0,6)'>\\\";for (var i=0;i<=nb;i++) { var v=Math.floor(Math.random()*max); if (i) { retl+=\\\"<line x1='\\\"+(10+110/nb*(i-1))+\\\"' y1='\\\"+(max-last)*(90/max)+\\\"' x2='\\\"+(10+110/nb*i)+\\\"' y2='\\\"+(max-v)*(90/max)+\\\"' class='c'/>\\\"; } retp+=\\\" L \\\"+(10+110/nb*i)+\\\",\\\"+(max-v)*(90/max);retc+=\\\"<circle cx='\\\"+(10+110/nb*i)+\\\"' cy='\\\"+(max-v)*(90/max)+\\\"' r='2' \\\"+(i==red?\\\"class='red'\\\":\\\"\\\")+\\\"/>\\\"; if (i==red) { val=v; retl+=\\\"<line x1='\\\"+(10+110/nb*i)+\\\"' y1='\\\"+(max-v)*(90/max)+\\\"' x2='\\\"+(10+110/nb*i)+\\\"' y2='90' class='red'/>\\\";} last=v;} ret+=\\\"<path d='M 10,90 \\\"+retp+\\\" L 120,90 L 10,90 z'/>\\\"+retl+retc; for (var i=0;i<=max;i++) { if (i%step[0]==0) { ret+=\\\"<line x1='10' y1='\\\"+((max-i)*(90/max))+\\\"' x2='120' y2='\\\"+((max-i)*(90/max))+\\\"' class='\\\"+(i%step[1]==0?\\\"l\\\":\\\"s\\\")+\\\"'/>\\\"; } if (i%step[1]==0) { ret+=\\\"<text transform='translate(0,\\\"+(2+(max-i)*(90/max))+\\\")'>\\\"+i+\\\"</text>\\\";} } ret+=\\\"<line x1='10' y1='0' x2='10' y2='92'/><line x1='8' y1='90' x2='120' y2='90'/><line x1='120' y1='0' x2='120' y2='90' class='l'/>\\\"; ret+=\\\"</g></svg></div>\\\"; return [ret, val];}","class":"neg alpha h12","font":4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle valeur correspond à la <span style='color:red'><b>mesure en rouge</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>chd610</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>chd610</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 0 et 10 issue d'un graphique.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function(){var nb=6,max=10,step=[1,5],val=0,last=0,red=Math.floor(Math.random()*nb),retl=\\\"\\\",retc=\\\"\\\",retp=\\\"\\\",ret=\\\"<div style='width:1.2em;height:1em;margin:.1em .2em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 120 100'><def><style>text {font-size:8px;fill:black;}path{fill:cyan;fill-opacity:0.2;}line {stroke:black;stroke-width:1;}line.c{stroke:#333;}line.red {stroke:red;stroke-width:0.5;stroke-dasharray:4,2;}line.s{stroke-width:0.2;}line.l{stroke-width:0.5;}circle {fill:#333;stroke:none;}circle.red {fill:red;}</style></def><g transform='translate(0,6)'>\\\";for (var i=0;i<=nb;i++) { var v=Math.floor(Math.random()*max); if (i) { retl+=\\\"<line x1='\\\"+(10+110/nb*(i-1))+\\\"' y1='\\\"+(max-last)*(90/max)+\\\"' x2='\\\"+(10+110/nb*i)+\\\"' y2='\\\"+(max-v)*(90/max)+\\\"' class='c'/>\\\"; } retp+=\\\" L \\\"+(10+110/nb*i)+\\\",\\\"+(max-v)*(90/max);retc+=\\\"<circle cx='\\\"+(10+110/nb*i)+\\\"' cy='\\\"+(max-v)*(90/max)+\\\"' r='2' \\\"+(i==red?\\\"class='red'\\\":\\\"\\\")+\\\"/>\\\"; if (i==red) { val=v; retl+=\\\"<line x1='\\\"+(10+110/nb*i)+\\\"' y1='\\\"+(max-v)*(90/max)+\\\"' x2='\\\"+(10+110/nb*i)+\\\"' y2='90' class='red'/>\\\";} last=v;} ret+=\\\"<path d='M 10,90 \\\"+retp+\\\" L 120,90 L 10,90 z'/>\\\"+retl+retc; for (var i=0;i<=max;i++) { if (i%step[0]==0) { ret+=\\\"<line x1='10' y1='\\\"+((max-i)*(90/max))+\\\"' x2='120' y2='\\\"+((max-i)*(90/max))+\\\"' class='\\\"+(i%step[1]==0?\\\"l\\\":\\\"s\\\")+\\\"'/>\\\"; } if (i%step[1]==0) { ret+=\\\"<text transform='translate(0,\\\"+(2+(max-i)*(90/max))+\\\")'>\\\"+i+\\\"</text>\\\";} } ret+=\\\"<line x1='10' y1='0' x2='10' y2='92'/><line x1='8' y1='90' x2='120' y2='90'/><line x1='120' y1='0' x2='120' y2='90' class='l'/>\\\"; ret+=\\\"</g></svg></div>\\\"; return [ret, val];}","class":"neg alpha h12","font":4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle valeur correspond à la <span style='color:red'><b>mesure en rouge</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>chd610</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>chd1020</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 0 et 10 issue d'un graphique.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function(){var nb=10,max=20,step=[1,5],val=0,last=0,red=Math.floor(Math.random()*nb),retl=\\\"\\\",retc=\\\"\\\",retp=\\\"\\\",ret=\\\"<div style='width:1.2em;height:1em;margin:.1em .2em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 120 100'><def><style>text {font-size:8px;fill:black;}path{fill:cyan;fill-opacity:0.2;}line {stroke:black;stroke-width:1;}line.c{stroke:#333;}line.red {stroke:red;stroke-width:0.5;stroke-dasharray:4,2;}line.s{stroke-width:0.2;}line.l{stroke-width:0.5;}circle {fill:#333;stroke:none;}circle.red {fill:red;}</style></def><g transform='translate(0,6)'>\\\";for (var i=0;i<=nb;i++) { var v=Math.floor(Math.random()*max); if (i) { retl+=\\\"<line x1='\\\"+(10+110/nb*(i-1))+\\\"' y1='\\\"+(max-last)*(90/max)+\\\"' x2='\\\"+(10+110/nb*i)+\\\"' y2='\\\"+(max-v)*(90/max)+\\\"' class='c'/>\\\"; } retp+=\\\" L \\\"+(10+110/nb*i)+\\\",\\\"+(max-v)*(90/max);retc+=\\\"<circle cx='\\\"+(10+110/nb*i)+\\\"' cy='\\\"+(max-v)*(90/max)+\\\"' r='2' \\\"+(i==red?\\\"class='red'\\\":\\\"\\\")+\\\"/>\\\"; if (i==red) { val=v; retl+=\\\"<line x1='\\\"+(10+110/nb*i)+\\\"' y1='\\\"+(max-v)*(90/max)+\\\"' x2='\\\"+(10+110/nb*i)+\\\"' y2='90' class='red'/>\\\";} last=v;} ret+=\\\"<path d='M 10,90 \\\"+retp+\\\" L 120,90 L 10,90 z'/>\\\"+retl+retc; for (var i=0;i<=max;i++) { if (i%step[0]==0) { ret+=\\\"<line x1='10' y1='\\\"+((max-i)*(90/max))+\\\"' x2='120' y2='\\\"+((max-i)*(90/max))+\\\"' class='\\\"+(i%step[1]==0?\\\"l\\\":\\\"s\\\")+\\\"'/>\\\"; } if (i%step[1]==0) { ret+=\\\"<text transform='translate(0,\\\"+(2+(max-i)*(90/max))+\\\")'>\\\"+i+\\\"</text>\\\";} } ret+=\\\"<line x1='10' y1='0' x2='10' y2='92'/><line x1='8' y1='90' x2='120' y2='90'/><line x1='120' y1='0' x2='120' y2='90' class='l'/>\\\"; ret+=\\\"</g></svg></div>\\\"; return [ret, val];}","class":"neg alpha h12","font":4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle valeur correspond à la <span style='color:red'><b>mesure en rouge</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>chd610</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>chd1020b</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 0 et 10 issue d'un graphique.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function(){var nb=10,max=20,step=[2,10],val=0,last=0,red=Math.floor(Math.random()*nb),retl=\\\"\\\",retc=\\\"\\\",retp=\\\"\\\",ret=\\\"<div style='width:1.2em;height:1em;margin:.1em .2em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 120 100'><def><style>text {font-size:8px;fill:black;}path{fill:cyan;fill-opacity:0.2;}line {stroke:black;stroke-width:1;}line.c{stroke:#333;}line.red {stroke:red;stroke-width:0.5;stroke-dasharray:4,2;}line.s{stroke-width:0.2;}line.l{stroke-width:0.5;}circle {fill:#333;stroke:none;}circle.red {fill:red;}</style></def><g transform='translate(0,6)'>\\\";for (var i=0;i<=nb;i++) { var v=Math.floor(Math.random()*max); if (i) { retl+=\\\"<line x1='\\\"+(10+110/nb*(i-1))+\\\"' y1='\\\"+(max-last)*(90/max)+\\\"' x2='\\\"+(10+110/nb*i)+\\\"' y2='\\\"+(max-v)*(90/max)+\\\"' class='c'/>\\\"; } retp+=\\\" L \\\"+(10+110/nb*i)+\\\",\\\"+(max-v)*(90/max);retc+=\\\"<circle cx='\\\"+(10+110/nb*i)+\\\"' cy='\\\"+(max-v)*(90/max)+\\\"' r='2' \\\"+(i==red?\\\"class='red'\\\":\\\"\\\")+\\\"/>\\\"; if (i==red) { val=v; retl+=\\\"<line x1='\\\"+(10+110/nb*i)+\\\"' y1='\\\"+(max-v)*(90/max)+\\\"' x2='\\\"+(10+110/nb*i)+\\\"' y2='90' class='red'/>\\\";} last=v;} ret+=\\\"<path d='M 10,90 \\\"+retp+\\\" L 120,90 L 10,90 z'/>\\\"+retl+retc; for (var i=0;i<=max;i++) { if (i%step[0]==0) { ret+=\\\"<line x1='10' y1='\\\"+((max-i)*(90/max))+\\\"' x2='120' y2='\\\"+((max-i)*(90/max))+\\\"' class='\\\"+(i%step[1]==0?\\\"l\\\":\\\"s\\\")+\\\"'/>\\\"; } if (i%step[1]==0) { ret+=\\\"<text transform='translate(0,\\\"+(2+(max-i)*(90/max))+\\\")'>\\\"+i+\\\"</text>\\\";} } ret+=\\\"<line x1='10' y1='0' x2='10' y2='92'/><line x1='8' y1='90' x2='120' y2='90'/><line x1='120' y1='0' x2='120' y2='90' class='l'/>\\\"; ret+=\\\"</g></svg></div>\\\"; return [ret, val];}","class":"neg alpha h12","font":4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle valeur correspond à la <span style='color:red'><b>mesure en rouge</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>chd610</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>chd1250</dct:identifier>
        <dct:title xml:lang="fr-FR">Lire, sans contrainte de temps, une valeur comprise entre 0 et 10 issue d'un graphique.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function(){var nb=12,max=50,step=[2,10],val=0,last=0,red=Math.floor(Math.random()*nb),retl=\\\"\\\",retc=\\\"\\\",retp=\\\"\\\",ret=\\\"<div style='width:1.2em;height:1em;margin:.1em .2em;'><svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%' viewBox='0 0 120 100'><def><style>text {font-size:8px;fill:black;}path{fill:cyan;fill-opacity:0.2;}line {stroke:black;stroke-width:1;}line.c{stroke:#333;}line.red {stroke:red;stroke-width:0.5;stroke-dasharray:4,2;}line.s{stroke-width:0.2;}line.l{stroke-width:0.5;}circle {fill:#333;stroke:none;}circle.red {fill:red;}</style></def><g transform='translate(0,6)'>\\\";for (var i=0;i<=nb;i++) { var v=Math.floor(Math.random()*max); if (i) { retl+=\\\"<line x1='\\\"+(10+110/nb*(i-1))+\\\"' y1='\\\"+(max-last)*(90/max)+\\\"' x2='\\\"+(10+110/nb*i)+\\\"' y2='\\\"+(max-v)*(90/max)+\\\"' class='c'/>\\\"; } retp+=\\\" L \\\"+(10+110/nb*i)+\\\",\\\"+(max-v)*(90/max);retc+=\\\"<circle cx='\\\"+(10+110/nb*i)+\\\"' cy='\\\"+(max-v)*(90/max)+\\\"' r='2' \\\"+(i==red?\\\"class='red'\\\":\\\"\\\")+\\\"/>\\\"; if (i==red) { val=v; retl+=\\\"<line x1='\\\"+(10+110/nb*i)+\\\"' y1='\\\"+(max-v)*(90/max)+\\\"' x2='\\\"+(10+110/nb*i)+\\\"' y2='90' class='red'/>\\\";} last=v;} ret+=\\\"<path d='M 10,90 \\\"+retp+\\\" L 120,90 L 10,90 z'/>\\\"+retl+retc; for (var i=0;i<=max;i++) { if (i%step[0]==0) { ret+=\\\"<line x1='10' y1='\\\"+((max-i)*(90/max))+\\\"' x2='120' y2='\\\"+((max-i)*(90/max))+\\\"' class='\\\"+(i%step[1]==0?\\\"l\\\":\\\"s\\\")+\\\"'/>\\\"; } if (i%step[1]==0) { ret+=\\\"<text transform='translate(0,\\\"+(2+(max-i)*(90/max))+\\\")'>\\\"+i+\\\"</text>\\\";} } ret+=\\\"<line x1='10' y1='0' x2='10' y2='92'/><line x1='8' y1='90' x2='120' y2='90'/><line x1='120' y1='0' x2='120' y2='90' class='l'/>\\\"; ret+=\\\"</g></svg></div>\\\"; return [ret, val];}","class":"neg alpha h12","font":4]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quelle valeur correspond à la <span style='color:red'><b>mesure en rouge</b></span> ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>chd610</dct:alternative>
    </rdf:Description>

    <!-- roman number -->

    <rdf:Description>
        <dct:identifier>ro10</dct:identifier>
        <dct:title xml:lang="fr-FR">Convertir, sans contrainte de temps, un nombre romain inférieur à 10.</dct:title>
        <dct:description><![CDATA["number":15,"class":"h12","time":0,"len":4,"input":{"digit":1,"speed":5000},"gen":"function() { var roman=[[\\\"\\\", \\\"I\\\", \\\"II\\\", \\\"III\\\", \\\"IV\\\", \\\"V\\\", \\\"VI\\\", \\\"VII\\\", \\\"VIII\\\", \\\"IX\\\"]], val=[1+Math.floor(Math.random()*9)]; return([roman[0][val[0]], val[0]]); }"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>ro3k</dct:alternative>
        <dct:isPartOf>oddnum</dct:isPartOf>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>ro100</dct:identifier>
        <dct:title xml:lang="fr-FR">Convertir, sans contrainte de temps, un nombre romain inférieur à 100.</dct:title>
        <dct:description><![CDATA["number":15,"class":"h12","time":0,"input":{"digit":2,"speed":5000},"gen":"function() { var roman=[[\\\"\\\", \\\"I\\\", \\\"II\\\", \\\"III\\\", \\\"IV\\\", \\\"V\\\", \\\"VI\\\", \\\"VII\\\", \\\"VIII\\\", \\\"IX\\\"], [\\\"\\\", \\\"X\\\", \\\"XX\\\", \\\"XXX\\\", \\\"XL\\\", \\\"L\\\", \\\"LX\\\", \\\"LXX\\\", \\\"LXXX\\\", \\\"XC\\\"]], val=[Math.floor(Math.random()*10), Math.floor(Math.random()*10)], value=val[0]+val[1]*10; if (!value) { val[0]++; value++; } return([roman[1][val[1]]+roman[0][val[0]], value]); }"]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>ro3k</dct:alternative>
        <dct:isPartOf>oddnum</dct:isPartOf>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>ro1k</dct:identifier>
        <dct:title xml:lang="fr-FR">Convertir, sans contrainte de temps, un nombre romain inférieur à 1 000.</dct:title>
        <dct:description><![CDATA["number":10,"class":"h12","time":0,"input":{"digit":3,"speed":5000},"gen":"function() { var roman=[[\\\"\\\", \\\"I\\\", \\\"II\\\", \\\"III\\\", \\\"IV\\\", \\\"V\\\", \\\"VI\\\", \\\"VII\\\", \\\"VIII\\\", \\\"IX\\\"], [\\\"\\\", \\\"X\\\", \\\"XX\\\", \\\"XXX\\\", \\\"XL\\\", \\\"L\\\", \\\"LX\\\", \\\"LXX\\\", \\\"LXXX\\\", \\\"XC\\\"],[\\\"\\\", \\\"C\\\", \\\"CC\\\", \\\"CCC\\\", \\\"CD\\\", \\\"D\\\", \\\"DC\\\", \\\"DCC\\\", \\\"DCCC\\\", \\\"CM\\\"]], val=[Math.floor(Math.random()*10), Math.floor(Math.random()*10), Math.floor(Math.random()*10)], value=val[0]+val[1]*10+val[2]*100; if (!value) { val[0]++; value++; } return([roman[2][val[2]]+roman[1][val[1]]+roman[0][val[0]], value]); }","font":0.9]]></dct:description>
        <dct:extent>2</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>ro3k</dct:alternative>
        <dct:isPartOf>oddnum</dct:isPartOf>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>ro3k</dct:identifier>
        <dct:title xml:lang="fr-FR">Convertir, sans contrainte de temps, un nombre romain inférieur à 3 000.</dct:title>
        <dct:description><![CDATA["number":10,"class":"h12","time":0,"input":{"digit":4,"speed":5000},"gen":"function() { var roman=[[\\\"\\\", \\\"I\\\", \\\"II\\\", \\\"III\\\", \\\"IV\\\", \\\"V\\\", \\\"VI\\\", \\\"VII\\\", \\\"VIII\\\", \\\"IX\\\"], [\\\"\\\", \\\"X\\\", \\\"XX\\\", \\\"XXX\\\", \\\"XL\\\", \\\"L\\\", \\\"LX\\\", \\\"LXX\\\", \\\"LXXX\\\", \\\"XC\\\"],[\\\"\\\", \\\"C\\\", \\\"CC\\\", \\\"CCC\\\", \\\"CD\\\", \\\"D\\\", \\\"DC\\\", \\\"DCC\\\", \\\"DCCC\\\", \\\"CM\\\"], [\\\"\\\", \\\"M\\\", \\\"MM\\\"]], val=[Math.floor(Math.random()*10), Math.floor(Math.random()*10), Math.floor(Math.random()*10), Math.floor(Math.random()*3)], value=val[0]+val[1]*10+val[2]*100+val[3]*1000; if (!value) { val[0]++; value++; } return([roman[3][val[3]]+roman[2][val[2]]+roman[1][val[1]]+roman[0][val[0]], value]); }","font":0.8]]></dct:description>
        <dct:extent>3</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>4</dct:type>
        <dct:alternative>ro3k</dct:alternative>
        <dct:isPartOf>oddnum</dct:isPartOf>
    </rdf:Description>

    <!-- NEGATIVE -->

    <rdf:Description>
        <dct:identifier>n010</dct:identifier>
        <dct:title xml:lang="fr-FR">Comparer, sans contrainte de temps, un entier compris entre -10 et 10 avec 0.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"values":[["<0",0],[">0",1]]},"template":"template2.html","gen":"function() { var a; do { a=Math.floor(Math.random()*21)-10} while(a==0); return [a,(a<0)?0:1]}","class":"alpha left","font":2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>01000x</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>na10</dct:identifier>
        <dct:title xml:lang="fr-FR">Donner, sans contrainte de temps, la valeur absolu d'un entier compris entre -10 et 10.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function() { var a=Math.floor(Math.random()*21)-10; return [\\\"|\\\"+a+\\\"|\\\",Math.abs(a)]}","class":"alpha left","font":2]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>negative</dct:subject>
        <dct:educationLevel>1</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>na10</dct:alternative>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"La <b>valeur absolue</b> d'un nombre entier X (notée |X|) est égale à sa valeur numérique sans tenir compte de son signe."]]></dct:description>
    </rdf:Description>

    <!-- DECOMPOSE -->

    <rdf:Description>
        <dct:identifier>de100</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, un nombre compris entre 0 et 100 à partir de sa décomposition en puissances de 10.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function() { var digit=2,a=0; for (var i=0;i<digit;i++) { a=a*10+Math.floor(Math.random()*10); } var aa=a,ret=(a==0)?\\\"0\\\":\\\"\\\",i=0; while(aa>0) { var d=aa%10; if (d!=0) { if (i==0) { ret=d.toString(); } else { var r=(ret.length!=0?\\\"+\\\":\\\"\\\"); ret=\\\"(\\\"+d+\\\"×\\\"+Math.pow(10,i).toString()+\\\")\\\"+r+ret; } } i=i+1; aa=Math.floor(aa/10); }; return [ret, a]}","class":"alpha p02 h12","font":1]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>de100</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>de1k</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, un nombre compris entre 0 et 1000 à partir de sa décomposition en puissances de 10.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":3,"speed":5000},"gen":"function() { var digit=3,a=0; for (var i=0;i<digit;i++) { a=a*10+(Math.random()*5>1?Math.floor(Math.random()*10):0); } var aa=a,ret=(a==0)?\\\"0\\\":\\\"\\\",i=0; while(aa>0) { var d=aa%10; if (d!=0) { if (i==0) { ret=d.toString(); } else { var r=(ret.length!=0?\\\"+\\\":\\\"\\\"); ret=\\\"(\\\"+d+\\\"×\\\"+Math.pow(10,i).toString()+\\\")\\\"+r+ret; } } i=i+1; aa=Math.floor(aa/10); }; return [ret, a]}","class":"alpha p02 h12","font":0.8]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>de100</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>de10k</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, un nombre compris entre 0 et 10 000 à partir de sa décomposition en puissances de 10.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":4,"speed":5000},"gen":"function() { var digit=4,a=0; for (var i=0;i<digit;i++) { a=a*10+(Math.random()*5>1?Math.floor(Math.random()*10):0); } var aa=a,ret=(a==0)?\\\"0\\\":\\\"\\\",i=0; while(aa>0) { var d=aa%10; if (d!=0) { if (i==0) { ret=d.toString(); } else { var r=(ret.length!=0?\\\"+\\\":\\\"\\\"); ret=\\\"(\\\"+d+\\\"×\\\"+Math.pow(10,i).toString()+\\\")\\\"+r+ret; } } i=i+1; aa=Math.floor(aa/10); }; return [ret, a]}","class":"alpha p02 h12","font":0.5]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>de100</dct:alternative>
    </rdf:Description>
    
    <rdf:Description>
        <dct:identifier>ded100</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, un nombre compris entre 0.001 et 100 à partir de sa décomposition en puissances de 10.</dct:title>
        <dct:description><![CDATA["time":0,"decimal":true,"input":{"digit":4,"speed":5000},"gen":"function() { var digit=Math.floor(Math.random()*3)+2,m=['×100','×10','','/10','/100','/1000'],dec=Math.floor(Math.random()*4),a=0; do { a=0; for (var i=0;i<digit;i++) { var b=Math.random()>0.8?0:Math.floor(Math.random()*10); a=a*10+b; }} while(a==0); var aa=a,l=aa.toString().length,ret='',i=0; while(aa>0) { var d=aa%10; if (d!=0) { if (ret.length) { ret='+'+ret; } ret=d+m[2+dec-i]+ret; } aa=Math.floor(aa/10); i++; } return [ret, a/Math.pow(10,dec)]}","class":"alpha p02 h12","font":0.6]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>de100</dct:alternative>
        <dct:coverage xml:lang="fr-FR">decimal</dct:coverage>
    </rdf:Description>
    
    <rdf:Description>
        <dct:identifier>dee100</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier, sans contrainte de temps, un nombre compris entre 0.001 et 100 à partir de sa décomposition en puissances de 10.</dct:title>
        <dct:description><![CDATA["time":0,"decimal":true,"input":{"digit":4,"speed":5000},"gen":"function() { var digit=Math.floor(Math.random()*3)+2,m=['×100','×10','','×0.1','×0.01','×0.001'],dec=Math.floor(Math.random()*4),a=0; do { a=0; for (var i=0;i<digit;i++) { var b=Math.random()>0.8?0:Math.floor(Math.random()*10); a=a*10+b; }} while(a==0); var aa=a,l=aa.toString().length,ret='',i=0; while(aa>0) { var d=aa%10; if (d!=0) { if (ret.length) { ret='+'+ret; } ret=d+m[2+dec-i]+ret; } aa=Math.floor(aa/10); i++; } return [ret, a/Math.pow(10,dec)]}","class":"alpha p02 h12","font":0.6]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>de100</dct:alternative>
        <dct:coverage xml:lang="fr-FR">decimal</dct:coverage>
    </rdf:Description>

    <!-- EXTRACT DIGIT a:1, b:10, c:100, etc. -->

    <rdf:Description>
        <dct:identifier>ea100</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier le chiffre des unités d'un nombre compris entre 0 et 100.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"gen":"function() { var max=100,a=Math.floor(Math.random()*max); return [a, a%10]}","class":"h12 alpha","font":3,"number":10]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le <b>chiffre</b> des unités ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>1</dct:type>
        <dct:alternative>ec10k</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>eb100</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier le chiffre des dizaines d'un nombre compris entre 0 et 100.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"gen":"function() { var max=100,a=(Math.random()*5>1?Math.floor(Math.random()*max):Math.floor(Math.random()*10)); return [a, Math.floor(a/10)]}","class":"h12 alpha","font":3,"number":10]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le <b>chiffre</b> des dizaines ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>ec10k</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>eb1k</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier le chiffre des dizaines d'un nombre compris entre 0 et 1000.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"gen":"function() { var max=[10,10,100,1000,1000,1000],a=Math.floor(Math.random()*max[Math.floor(Math.random()*max.length)]); return [a, Math.floor(a/10)%10]}","class":"h12 alpha","font":3,"number":10]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le <b>chiffre</b> des dizaines ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>3</dct:type>
        <dct:alternative>ec10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>ebs1k</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier le nombre de dizaines d'un nombre compris entre 0 et 1000.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function() { var max=1000,a=(Math.random()*5>1?Math.floor(Math.random()*max):Math.floor(Math.random()*10)); return [a, Math.floor(a/10)]}","class":"h12 alpha","font":3,"number":10]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le <b>nombre</b> de dizaines ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>ec10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>ec1k</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier le chiffre des centaines d'un nombre compris entre 0 et 1000.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"gen":"function() { var max=[10,100,1000,1000,1000,1000],a=Math.floor(Math.random()*max[Math.floor(Math.random()*max.length)]); return [a, Math.floor(a/100)%10]}","class":"h12 alpha","font":3,"number":10]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le <b>chiffre</b> des centaines ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>ec10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>eb10k</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier le chiffre des dizaines d'un nombre compris entre 0 et 10000.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"gen":"function() { var max=[100,1000,1000,10000,10000,10000],a=Math.floor(Math.random()*max[Math.floor(Math.random()*max.length)]),a2=a,i,aa=\\\"\\\"; i=0; while(a2>0) { if (i!=0 && i%3==0) { aa=\\\" \\\"+aa; } aa=(a2%10).toString()+aa; a2=Math.floor(a2/10); i++; }; return [aa, Math.floor(a/10)%10]}","class":"h12 alpha","font":2.2,"number":10]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le <b>chiffre</b> des dizaines ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>ec10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>ebs10k</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier le nombre de dizaines d'un nombre compris entre 0 et 10000.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":3,"speed":5000},"gen":"function() { var max=[100,1000,1000,10000,10000,10000],a=Math.floor(Math.random()*max[Math.floor(Math.random()*max.length)]),a2=a,i,aa=\\\"\\\"; i=0; while(a2>0) { if (i!=0 && i%3==0) { aa=\\\" \\\"+aa; } aa=(a2%10).toString()+aa; a2=Math.floor(a2/10); i++; }; return [aa, Math.floor(a/10)]}","class":"h12 alpha","font":2.2,"number":10]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le <b>nombre</b> de dizaines ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>ec10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>ec10k</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier le chiffre des centaines d'un nombre compris entre 0 et 10000.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":1,"speed":0},"gen":"function() { var max=[100,1000,1000,10000,10000,10000],a=Math.floor(Math.random()*max[Math.floor(Math.random()*max.length)]),a2=a,i,aa=\\\"\\\"; i=0; while(a2>0) { if (i!=0 && i%3==0) { aa=\\\" \\\"+aa; } aa=(a2%10).toString()+aa; a2=Math.floor(a2/10); i++; }; return [aa, Math.floor(a/100)%10]}","class":"h12 alpha","font":2.2,"number":10]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le <b>chiffre</b> des centaines ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>ec10k</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>ecs10k</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier le nombre de centaines d'un nombre compris entre 0 et 10000.</dct:title>
        <dct:description><![CDATA["time":0,"input":{"digit":2,"speed":5000},"gen":"function() { var max=[100,1000,1000,10000,10000,10000],a=Math.floor(Math.random()*max[Math.floor(Math.random()*max.length)]),a2=a,i,aa=\\\"\\\"; i=0; while(a2>0) { if (i!=0 && i%3==0) { aa=\\\" \\\"+aa; } aa=(a2%10).toString()+aa; a2=Math.floor(a2/10); i++; }; return [aa, Math.floor(a/100)]}","class":"h12 alpha","font":2.2,"number":10]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"comment":"Quel est le <b>nombre</b> de centaines ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>ec10k</dct:alternative>
    </rdf:Description>

    <!-- POSITION -->

    <rdf:Description>
        <dct:identifier>f100</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier la position du chiffre rouge dans un nombre compris entre 10 et 99.</dct:title>
        <dct:description><![CDATA["time":0,"gen":"function() { var s=(Math.floor(Math.random()*90)+10).toString(), l=s.length, a=Math.floor(Math.random()*10), p=Math.floor(Math.random()*(a==0?l-1:l)), v=\\\"\\\"; for (var i=0; i<l;i++) { if (i!=0 && ((i-l)%3==0)) { v+=\\\" \\\"; } if (i==l-p-1) { v+=\\\"<span style='color:red;'>\\\"+a.toString()+\\\"</span>\\\"; } else { var r=0; do { r=Math.floor(Math.random()*10); }while (r==a || (r==0&&i==0)); v+=r.toString();  }} return [v, p+1]; }","template":"template.html","class":"alpha neg","font":2,"number":10]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"attr":[3,5,1.2],"digit":1,"values":[["unité",1],["dizaine",2]]},"comment":"Quel est la [b]place[/b] du chiffre [red]rouge[/red] ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>f1m</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CP</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>f1k</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier la position du chiffre rouge dans un nombre compris entre 10 et 999.</dct:title>
        <dct:description><![CDATA["time":0,"gen":"function() { var s=(Math.floor(Math.random()*990)+10).toString(), l=s.length, a=Math.floor(Math.random()*10), p=Math.floor(Math.random()*(a==0?l-1:l)), v=\\\"\\\"; for (var i=0; i<l;i++) { if (i!=0 && ((i-l)%3==0)) { v+=\\\" \\\"; } if (i==l-p-1) { v+=\\\"<span style='color:red;'>\\\"+a.toString()+\\\"</span>\\\"; } else { var r=0; do { r=Math.floor(Math.random()*10); }while (r==a || (r==0&&i==0)); v+=r.toString();  }} return [v, p+1]; }","template":"template.html","class":"alpha neg","font":2,"number":15]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"attr":[2,5,1.2],"digit":1,"values":[["unité",1],["dizaine",2],["centaine",3]]},"comment":"Quel est la [b]place[/b] du chiffre [red]rouge[/red] ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>f1m</dct:alternative>
        <dct:coverage xml:lang="fr-FR">CE1</dct:coverage>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>f10k</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier la position du chiffre rouge dans un nombre compris entre 10 et 9 999.</dct:title>
        <dct:description><![CDATA["time":0,"gen":"function() { var s=(Math.floor(Math.random()*9990)+10).toString(), l=s.length, a=Math.floor(Math.random()*10), p=Math.floor(Math.random()*(a==0?l-1:l)), v=\\\"\\\"; for (var i=0; i<l;i++) { if (i!=0 && ((i-l)%3==0)) { v+=\\\" \\\"; } if (i==l-p-1) { v+=\\\"<span style='color:red;'>\\\"+a.toString()+\\\"</span>\\\"; } else { var r=0; do { r=Math.floor(Math.random()*10); }while (r==a || (r==0&&i==0)); v+=r.toString();  }} return [v, p+1]; }","template":"template.html","class":"alpha neg","font":2,"number":15]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"attr":[2,7.5,1.2],"digit":1,"values":[["unité",1],["dizaine",2],["centaine",3],["millier",4]]},"comment":"Quel est la [b]place[/b] du chiffre [red]rouge[/red] ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>f1m</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>f100k</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier la position du chiffre rouge dans un nombre compris entre 10 et 99 999.</dct:title>
        <dct:description><![CDATA["time":0,"gen":"function() { var s=(Math.floor(Math.random()*99990)+10).toString(), l=s.length, a=Math.floor(Math.random()*10), p=Math.floor(Math.random()*(a==0?l-1:l)), v=\\\"\\\"; for (var i=0; i<l;i++) { if (i!=0 && ((i-l)%3==0)) { v+=\\\" \\\"; } if (i==l-p-1) { v+=\\\"<span style='color:red;'>\\\"+a.toString()+\\\"</span>\\\"; } else { var r=0; do { r=Math.floor(Math.random()*10); }while (r==a || (r==0&&i==0)); v+=r.toString();  }} return [v, p+1]; }","template":"template.html","class":"alpha neg","font":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"attr":[1.5,10,1.2],"digit":1,"values":[["unité",1],["dizaine",2],["centaine",3],["millier",4],["dizaine de milliers",5]]},"comment":"Quel est la [b]place[/b] du chiffre [red]rouge[/red] ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>f1m</dct:alternative>
    </rdf:Description>

    <rdf:Description>
        <dct:identifier>f1m</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier la position du chiffre rouge dans un nombre compris entre 10 et 999 999.</dct:title>
        <dct:description><![CDATA["time":0,"gen":"function() { var s=(Math.floor(Math.random()*999990)+10).toString(), l=s.length, a=Math.floor(Math.random()*10), p=Math.floor(Math.random()*(a==0?l-1:l)), v=\\\"\\\"; for (var i=0; i<l;i++) { if (i!=0 && ((i-l)%3==0)) { v+=\\\" \\\"; } if (i==l-p-1) { v+=\\\"<span style='color:red;'>\\\"+a.toString()+\\\"</span>\\\"; } else { var r=0; do { r=Math.floor(Math.random()*10); }while (r==a || (r==0&&i==0)); v+=r.toString();  }} return [v, p+1]; }","template":"template.html","class":"alpha neg","font":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"attr":[1.5,10,1.2],"digit":1,"values":[["unité",1],["dizaine",2],["centaine",3],["millier",4],["dizaine de milliers",5],["centaine de milliers",6]]},"comment":"Quel est la [b]place[/b] du chiffre [red]rouge[/red] ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>f1m</dct:alternative>
    </rdf:Description>
    
    <rdf:Description>
        <dct:identifier>f1dm</dct:identifier>
        <dct:title xml:lang="fr-FR">Identifier la position du chiffre rouge dans un nombre décimal compris entre 0.001 et 99.999.</dct:title>
        <dct:description><![CDATA["time":0,"gen":"function() { var comma=Math.floor(Math.random()*3)+1,red=Math.floor(Math.random()*(3+comma))+1, nb=Math.floor(Math.random()*(6-Math.max(red,comma+1)))+Math.max(red,comma+1), val,l; do { val=0; for (var i=0; i<nb; i++) { val=val*10+Math.floor(Math.random()*10); } if (val%10==0) val++; val=val.toString(); l=val.length; } while (l<nb); var v=''; for (var i=0; i<l;i++) { if (i==l-comma) { v+='.'; } if (i==l-red) { v+=\\\"<span style='color:red;'>\\\"+val[i]+\\\"</span>\\\";} else { v+=val[i]; } } return [v, red-comma+3]; }","template":"template.html","class":"alpha neg","font":2]]></dct:description>
        <dct:description xml:lang="fr-FR"><![CDATA[,"input":{"attr":[1.5,10,1.2],"digit":1,"values":[["unité",4],["dixième",3],["dizaine",5],["centième",2],["centaine",6],["millième",1]]},"comment":"Quel est la [b]place[/b] du chiffre [red]rouge[/red] ?"]]></dct:description>
        <dct:extent>1</dct:extent>
        <dct:subject>numeration</dct:subject>
        <dct:educationLevel>2</dct:educationLevel>
        <dct:type>2</dct:type>
        <dct:alternative>f1m</dct:alternative>
    </rdf:Description>

</rdf:RDF>
